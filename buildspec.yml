version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - export GIT_SHA=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - export IMAGE_TAG=$(echo $PREFIX$GIT_SHA)
      - export REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -f docker/Dockerfile --build-arg NODE_CONFIG_ENV=${NODE_CONFIG_ENV} -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Creating dynamic Dockerrun.aws.json
      - printf '{"AWSEBDockerrunVersion":"1","Image":{"Name":"%s", "Update":"true"},"Ports":[{"ContainerPort":3300}]}' $REPOSITORY_URI:$IMAGE_TAG > Dockerrun.aws.json
      - cat Dockerrun.aws.json
artifacts:
  files:
    - '**/*'
