{"ast":null,"code":"import HttpService from './Http.service'; // FIXME ---> we need to do a little more research to find a better solution\n\nclass ExerciseService {\n  static uploadMedia(name, file) {\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('file', file);\n    console.log({\n      name,\n      file\n    });\n    return HttpService.post(`${process.env.ENDPOINT}/exercises/media`, formData).then(resp => resp.json());\n  }\n\n  static createExercise(payload) {\n    return HttpService.post(`${process.env.ENDPOINT}/exercises`, payload).then(resp => resp.json());\n  }\n\n  static markFeedbackAsDone(feedbackId) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, 1000);\n    });\n  }\n\n  static getSubmissions(page = 0, query = '') {\n    return HttpService.get(`${process.env.ENDPOINT}/exercises/submissions?page=${page}&query=${query}`).then(response => response.json());\n  }\n\n}\n\nexport default ExerciseService;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/services/Exercise.service.ts"],"names":["HttpService","ExerciseService","uploadMedia","name","file","formData","FormData","append","console","log","post","process","env","ENDPOINT","then","resp","json","createExercise","payload","markFeedbackAsDone","feedbackId","Promise","resolve","reject","setTimeout","getSubmissions","page","query","get","response"],"mappings":"AACA,OAAOA,WAAP,MAAwB,gBAAxB,C,CAEA;;AAUA,MAAMC,eAAN,CAAsB;AACpB,SAAOC,WAAP,CAAmBC,IAAnB,EAAiCC,IAAjC,EAA2D;AACzD,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;AACAE,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEN,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAZ;AAEA,WAAOJ,WAAW,CACfU,IADI,CACE,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,kBADzB,EAC4CR,QAD5C,EAEJS,IAFI,CAEEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAFX,CAAP;AAGD;;AAED,SAAOC,cAAP,CAAsBC,OAAtB,EAAiE;AAC/D,WAAOlB,WAAW,CACfU,IADI,CACE,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,YADzB,EACsCK,OADtC,EAEJJ,IAFI,CAEEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAFX,CAAP;AAGD;;AAED,SAAOG,kBAAP,CAA0BC,UAA1B,EAA8C;AAC5C,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,MAAAA,UAAU,CAACF,OAAD,EAAU,IAAV,CAAV;AACD,KAFM,CAAP;AAGD;;AAED,SAAOG,cAAP,CAAsBC,IAAI,GAAG,CAA7B,EAAgCC,KAAK,GAAG,EAAxC,EAAoE;AAClE,WAAO3B,WAAW,CAAC4B,GAAZ,CAAiB,GAAEjB,OAAO,CAACC,GAAR,CAAYC,QAAS,+BAA8Ba,IAAK,UAASC,KAAM,EAA1F,EACJb,IADI,CACEe,QAAD,IAAcA,QAAQ,CAACb,IAAT,EADf,CAAP;AAED;;AA5BmB;;AA8BtB,eAAef,eAAf","sourcesContent":["import { Submission } from '~/redux/exercise-submissions/types';\r\nimport HttpService from './Http.service';\r\n\r\n// FIXME ---> we need to do a little more research to find a better solution\r\n\r\ninterface NewExercisePayload {\r\n  body: string;\r\n  private: boolean;\r\n  type: string;\r\n  solution: string;\r\n  example?: string;\r\n}\r\n\r\nclass ExerciseService {\r\n  static uploadMedia(name: string, file: File): Promise<any> {\r\n    const formData = new FormData();\r\n    formData.append('name', name);\r\n    formData.append('file', file);\r\n\r\n    console.log({ name, file });\r\n\r\n    return HttpService\r\n      .post(`${process.env.ENDPOINT}/exercises/media`, formData)\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static createExercise(payload: NewExercisePayload): Promise<any> {\r\n    return HttpService\r\n      .post(`${process.env.ENDPOINT}/exercises`, payload)\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static markFeedbackAsDone(feedbackId: string) {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(resolve, 1000);\r\n    });\r\n  }\r\n\r\n  static getSubmissions(page = 0, query = '') : Promise<Submission[]> {\r\n    return HttpService.get(`${process.env.ENDPOINT}/exercises/submissions?page=${page}&query=${query}`)\r\n      .then((response) => response.json()) as unknown as Promise<Submission[]>;\r\n  }\r\n}\r\nexport default ExerciseService;\r\n"]},"metadata":{},"sourceType":"module"}