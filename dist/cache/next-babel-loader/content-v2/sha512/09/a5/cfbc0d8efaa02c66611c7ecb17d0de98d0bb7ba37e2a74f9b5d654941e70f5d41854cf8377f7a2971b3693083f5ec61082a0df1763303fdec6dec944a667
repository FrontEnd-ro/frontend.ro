{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Settings\\\\components\\\\DeleteAccount.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Form, { FormGroup, PasswordReveal } from '~/components/Form';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport UserService from '~/services/User.service';\n\nfunction DeleteAccount(_ref) {\n  _s();\n\n  var onSuccess = _ref.onSuccess;\n\n  var _useState = useState(false),\n      isDeleting = _useState[0],\n      setIsDeleting = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {\n      var passwordConfirm, _yield$SweetAlertServ, isConfirmed, shouldResetForm;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              passwordConfirm = formData.passwordConfirm;\n              _context.next = 3;\n              return SweetAlertService.confirm({\n                title: 'Șterge contul',\n                text: 'Ești sigur? Această decizie e permanentă.',\n                confirmButtonText: 'Da, șterge contul'\n              });\n\n            case 3:\n              _yield$SweetAlertServ = _context.sent;\n              isConfirmed = _yield$SweetAlertServ.isConfirmed;\n\n              if (isConfirmed) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", true);\n\n            case 7:\n              setIsDeleting(true);\n              shouldResetForm = true;\n              _context.prev = 9;\n              _context.next = 12;\n              return UserService[\"delete\"](passwordConfirm);\n\n            case 12:\n              onSuccess();\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](9);\n              shouldResetForm = false;\n              setError(_context.t0.message || 'Nu am putut să-ți schimbăm numele. Încearcă din nou!');\n\n            case 19:\n              _context.prev = 19;\n              setIsDeleting(false);\n              return _context.finish(19);\n\n            case 22:\n              return _context.abrupt(\"return\", shouldResetForm);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 15, 19, 22]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Form, {\n    onInput: function onInput() {\n      return setError(null);\n    },\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: \"mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"\\u0218terge contul \\u0219i toate informa\\u021Biile asociate\"), __jsx(\"div\", {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \" Aceast\\u0103 decizie e una final\\u0103, nu te po\\u021Bi r\\u0103zg\\xE2ndi. Te rug\\u0103m s\\u0103 fii sigur!\"), __jsx(\"label\", {\n    className: \"d-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Parola*\"), __jsx(PasswordReveal, {\n    required: true,\n    autoComplete: \"new-password\",\n    name: \"passwordConfirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), error && __jsx(\"p\", {\n    className: \"text-red text-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"\\u274C\", ' ', error)), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isDeleting,\n    className: \"btn btn--danger \".concat(isDeleting ? 'btn--loading' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"\\u0218terge contul\")));\n}\n\n_s(DeleteAccount, \"ic/elor0MSLHscdnwhC3h2qIZEM=\");\n\n_c = DeleteAccount;\nexport default DeleteAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteAccount\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Settings/components/DeleteAccount.tsx"],"names":["React","useState","Form","FormGroup","PasswordReveal","SweetAlertService","UserService","DeleteAccount","onSuccess","isDeleting","setIsDeleting","error","setError","onSubmit","formData","passwordConfirm","confirm","title","text","confirmButtonText","isConfirmed","shouldResetForm","message"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,IAAeC,SAAf,EAA0BC,cAA1B,QAAgD,mBAAhD;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAMA,SAASC,aAAT,OAA6C;AAAA;;AAAA,MAApBC,SAAoB,QAApBA,SAAoB;;AAAA,kBACPP,QAAQ,CAAC,KAAD,CADD;AAAA,MACpCQ,UADoC;AAAA,MACxBC,aADwB;;AAAA,mBAEjBT,QAAQ,CAAC,IAAD,CAFS;AAAA,MAEpCU,KAFoC;AAAA,MAE7BC,QAF6B;;AAI3C,MAAMC,QAAQ;AAAA,yEAAG,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPC,cAAAA,eADO,GACaD,QADb,CACPC,eADO;AAAA;AAAA,qBAGeV,iBAAiB,CAACW,OAAlB,CAA0B;AACtDC,gBAAAA,KAAK,EAAE,eAD+C;AAEtDC,gBAAAA,IAAI,EAAE,2CAFgD;AAGtDC,gBAAAA,iBAAiB,EAAE;AAHmC,eAA1B,CAHf;;AAAA;AAAA;AAGPC,cAAAA,WAHO,yBAGPA,WAHO;;AAAA,kBASVA,WATU;AAAA;AAAA;AAAA;;AAAA,+CAWN,IAXM;;AAAA;AAcfV,cAAAA,aAAa,CAAC,IAAD,CAAb;AACIW,cAAAA,eAfW,GAeO,IAfP;AAAA;AAAA;AAAA,qBAkBPf,WAAW,UAAX,CAAmBS,eAAnB,CAlBO;;AAAA;AAmBbP,cAAAA,SAAS;AAnBI;AAAA;;AAAA;AAAA;AAAA;AAqBba,cAAAA,eAAe,GAAG,KAAlB;AACAT,cAAAA,QAAQ,CAAC,YAAIU,OAAJ,IAAe,sDAAhB,CAAR;;AAtBa;AAAA;AAwBbZ,cAAAA,aAAa,CAAC,KAAD,CAAb;AAxBa;;AAAA;AAAA,+CA2BRW,eA3BQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARR,QAAQ;AAAA;AAAA;AAAA,KAAd;;AA8BA,SACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,CAAC,IAAD,CAAd;AAAA,KAAf;AAAqC,IAAA,QAAQ,EAAEC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADF,EAEE;AAAK,IAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mHADF,EAEE;AAAO,IAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIE,MAAC,cAAD;AAAgB,IAAA,QAAQ,MAAxB;AAAyB,IAAA,YAAY,EAAC,cAAtC;AAAqD,IAAA,IAAI,EAAC,iBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFF,EAQGF,KAAK,IACJ;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEG,GAFH,EAGGA,KAHH,CATJ,CADF,EAiBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAEF,UAFZ;AAGE,IAAA,SAAS,4BAAqBA,UAAU,GAAG,cAAH,GAAoB,EAAnD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjBF,CAFF,CADF;AA8BD;;GAhEQF,a;;KAAAA,a;AAkET,eAAeA,aAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport React, { useState } from 'react';\r\nimport Form, { FormGroup, PasswordReveal } from '~/components/Form';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\nimport UserService from '~/services/User.service';\r\n\r\ninterface Props {\r\n  onSuccess: () => void;\r\n}\r\n\r\nfunction DeleteAccount({ onSuccess }: Props) {\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const onSubmit = async (formData) => {\r\n    const { passwordConfirm } = formData;\r\n\r\n    const { isConfirmed } = await SweetAlertService.confirm({\r\n      title: 'Șterge contul',\r\n      text: 'Ești sigur? Această decizie e permanentă.',\r\n      confirmButtonText: 'Da, șterge contul',\r\n    });\r\n\r\n    if (!isConfirmed) {\r\n      // Reset form and exit\r\n      return true;\r\n    }\r\n\r\n    setIsDeleting(true);\r\n    let shouldResetForm = true;\r\n\r\n    try {\r\n      await UserService.delete(passwordConfirm);\r\n      onSuccess();\r\n    } catch (err) {\r\n      shouldResetForm = false;\r\n      setError(err.message || 'Nu am putut să-ți schimbăm numele. Încearcă din nou!');\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n\r\n    return shouldResetForm;\r\n  };\r\n\r\n  return (\r\n    <Form onInput={() => setError(null)} onSubmit={onSubmit}>\r\n      <h3 className=\"mt-0\">Șterge contul și toate informațiile asociate</h3>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <FormGroup>\r\n          <p className=\"mt-0\"> Această decizie e una finală, nu te poți răzgândi. Te rugăm să fii sigur!</p>\r\n          <label className=\"d-inline-block\">\r\n            <span className=\"label\">\r\n              Parola*\r\n            </span>\r\n            <PasswordReveal required autoComplete=\"new-password\" name=\"passwordConfirm\" />\r\n          </label>\r\n          {error && (\r\n            <p className=\"text-red text-bold\">\r\n              ❌\r\n              {' '}\r\n              {error}\r\n            </p>\r\n          )}\r\n        </FormGroup>\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isDeleting}\r\n          className={`btn btn--danger ${isDeleting ? 'btn--loading' : ''}`}\r\n        >\r\n          Șterge contul\r\n        </button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default DeleteAccount;\r\n"]},"metadata":{},"sourceType":"module"}