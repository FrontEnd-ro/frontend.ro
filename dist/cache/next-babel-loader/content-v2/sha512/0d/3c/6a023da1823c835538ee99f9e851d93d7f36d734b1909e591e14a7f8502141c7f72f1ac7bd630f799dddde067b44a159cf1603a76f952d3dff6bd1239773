{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\pages\\\\exercitii\\\\[exerciseId].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport NotFoundPage from '../404';\nimport Footer from '~/components/Footer';\nimport Header from '~/components/Header';\nimport SEOTags from '~/components/SEOTags';\nimport SharedUserModel from '~/../shared/user.shared-model';\nimport SharedExerciseModel from '~/../shared/exercise.shared-model';\nimport { ViewOrEditExercise } from '~/components/create-view-edit-exercise';\nimport { withClientMonitoring } from '~/services/Hooks';\n\nfunction EditExercisePage({\n  exercise\n}) {\n  var _exercise$user, _exercise$user2;\n\n  const authorNameOrUsername = (exercise === null || exercise === void 0 ? void 0 : (_exercise$user = exercise.user) === null || _exercise$user === void 0 ? void 0 : _exercise$user.name) || (exercise === null || exercise === void 0 ? void 0 : (_exercise$user2 = exercise.user) === null || _exercise$user2 === void 0 ? void 0 : _exercise$user2.username);\n  const exerciseChapter = exercise === null || exercise === void 0 ? void 0 : exercise.type;\n  withClientMonitoring();\n  return exercise ? __jsx(React.Fragment, null, __jsx(SEOTags, {\n    title: `Exercițiu ${exerciseChapter.toUpperCase()} | FrontEnd.ro`,\n    description: `${authorNameOrUsername} a scris un exercițiu pentru ${exerciseChapter.toUpperCase()}.`,\n    bigShareImage: false,\n    shareImage: exercise.user.avatar,\n    url: `https://FrontEnd.ro/exercitii/${exercise._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), __jsx(ViewOrEditExercise, {\n    exercise: exercise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }))) : __jsx(NotFoundPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  });\n}\n\nexport default EditExercisePage;\nexport async function getServerSideProps({\n  req,\n  res,\n  params\n}) {\n  const {\n    token\n  } = req.cookies;\n  const {\n    exerciseId\n  } = params;\n\n  try {\n    const exercise = await SharedExerciseModel.getById(exerciseId);\n\n    if (!exercise) {\n      return send404();\n    }\n\n    if (!token) {\n      if (exercise.private) {\n        return send404();\n      }\n\n      return {\n        props: {\n          exercise: SharedExerciseModel.sanitize(exercise)\n        }\n      };\n    }\n\n    const user = await SharedUserModel.ping(token);\n\n    if (exercise.private && (!user || user.username !== exercise.user.username)) {\n      return send404();\n    }\n\n    return {\n      props: {\n        exercise: SharedExerciseModel.sanitize(exercise)\n      }\n    };\n  } catch (err) {\n    console.error('[exerciseId.tsx][getServerSideProps]', err);\n    return send404();\n  }\n\n  function send404() {\n    res.statusCode = 404;\n    return {\n      props: {}\n    };\n  }\n}","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/pages/exercitii/[exerciseId].tsx"],"names":["React","NotFoundPage","Footer","Header","SEOTags","SharedUserModel","SharedExerciseModel","ViewOrEditExercise","withClientMonitoring","EditExercisePage","exercise","authorNameOrUsername","user","name","username","exerciseChapter","type","toUpperCase","avatar","_id","getServerSideProps","req","res","params","token","cookies","exerciseId","getById","send404","private","props","sanitize","ping","err","console","error","statusCode"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport NotFoundPage from '../404';\r\nimport Footer from '~/components/Footer';\r\nimport Header from '~/components/Header';\r\nimport SEOTags from '~/components/SEOTags';\r\nimport SharedUserModel from '~/../shared/user.shared-model';\r\nimport SharedExerciseModel from '~/../shared/exercise.shared-model';\r\nimport { Exercise } from '~/redux/user/types';\r\nimport { ViewOrEditExercise } from '~/components/create-view-edit-exercise';\r\nimport { withClientMonitoring } from '~/services/Hooks';\r\n\r\nfunction EditExercisePage({ exercise }: { exercise?: Exercise }) {\r\n  const authorNameOrUsername = exercise?.user?.name || exercise?.user?.username;\r\n  const exerciseChapter = exercise?.type;\r\n\r\n  withClientMonitoring();\r\n\r\n  return exercise ? (\r\n    <>\r\n      <SEOTags\r\n        title={`Exercițiu ${exerciseChapter.toUpperCase()} | FrontEnd.ro`}\r\n        description={`${authorNameOrUsername} a scris un exercițiu pentru ${exerciseChapter.toUpperCase()}.`}\r\n        bigShareImage={false}\r\n        shareImage={exercise.user.avatar}\r\n        url={`https://FrontEnd.ro/exercitii/${exercise._id}`}\r\n      />\r\n      <>\r\n        <Header />\r\n        <ViewOrEditExercise exercise={exercise} />\r\n        <Footer />\r\n      </>\r\n    </>\r\n\r\n  ) : <NotFoundPage />;\r\n}\r\n\r\nexport default EditExercisePage;\r\n\r\nexport async function getServerSideProps({ req, res, params }) {\r\n  const { token } = req.cookies;\r\n  const { exerciseId } = params;\r\n\r\n  try {\r\n    const exercise = await SharedExerciseModel.getById(exerciseId);\r\n\r\n    if (!exercise) {\r\n      return send404();\r\n    }\r\n\r\n    if (!token) {\r\n      if (exercise.private) {\r\n        return send404();\r\n      }\r\n      return {\r\n        props: {\r\n          exercise: SharedExerciseModel.sanitize(exercise),\r\n        },\r\n      };\r\n    }\r\n\r\n    const user = await SharedUserModel.ping(token);\r\n\r\n    if (exercise.private && (!user || (user.username !== exercise.user.username))) {\r\n      return send404();\r\n    }\r\n\r\n    return {\r\n      props: {\r\n        exercise: SharedExerciseModel.sanitize(exercise),\r\n      },\r\n    };\r\n  } catch (err) {\r\n    console.error('[exerciseId.tsx][getServerSideProps]', err);\r\n    return send404();\r\n  }\r\n\r\n  function send404() {\r\n    res.statusCode = 404;\r\n\r\n    return {\r\n      props: {},\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}