{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Header\\\\AccountNotificationsTooltip\\\\AccountNotificationsTooltip.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport UserService from '~/services/User.service';\nimport styles from './AccountNotificationsTooltip.module.scss';\nimport { useOutsideClick } from '~/services/Hooks';\nimport { logoutUser } from '~/redux/user/user.actions';\n\nfunction AccountNotificationsTooltip(_ref) {\n  _s();\n\n  var user = _ref.user,\n      dispatch = _ref.dispatch;\n  var ref = useRef(null);\n  var router = useRouter();\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var logout = function logout() {\n    UserService.logout().then(function () {\n      router.replace('/').then(function () {\n        dispatch(logoutUser());\n      });\n    });\n  };\n\n  var toggleToolip = function toggleToolip() {\n    return setIsOpen(!isOpen);\n  };\n\n  useOutsideClick(ref, function () {\n    return setIsOpen(false);\n  });\n  return __jsx(\"div\", {\n    ref: ref,\n    className: styles['account-notifications-tooltip'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"test\");\n}\n\n_s(AccountNotificationsTooltip, \"6hNDXam3HepZydVnuXC+0CaD6aI=\", false, function () {\n  return [useRouter, useOutsideClick];\n});\n\n_c = AccountNotificationsTooltip;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nvar connector = connect(mapStateToProps);\nexport default _c2 = connector(AccountNotificationsTooltip);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AccountNotificationsTooltip\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Header/AccountNotificationsTooltip/AccountNotificationsTooltip.tsx"],"names":["React","useState","useRef","connect","useRouter","UserService","styles","useOutsideClick","logoutUser","AccountNotificationsTooltip","user","dispatch","ref","router","isOpen","setIsOpen","logout","then","replace","toggleToolip","mapStateToProps","state","connector"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AAEA,SAASC,OAAT,QAAwC,aAAxC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAGA,OAAOC,MAAP,MAAmB,2CAAnB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,2BAA3B;;AAEA,SAASC,2BAAT,OAA2F;AAAA;;AAAA,MAApDC,IAAoD,QAApDA,IAAoD;AAAA,MAA9CC,QAA8C,QAA9CA,QAA8C;AACzF,MAAMC,GAAG,GAAGV,MAAM,CAAC,IAAD,CAAlB;AACA,MAAMW,MAAM,GAAGT,SAAS,EAAxB;;AAFyF,kBAG7DH,QAAQ,CAAC,KAAD,CAHqD;AAAA,MAGlFa,MAHkF;AAAA,MAG1EC,SAH0E;;AAKzF,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBX,IAAAA,WAAW,CAACW,MAAZ,GAAqBC,IAArB,CAA0B,YAAM;AAC9BJ,MAAAA,MAAM,CAACK,OAAP,CAAe,GAAf,EAAoBD,IAApB,CAAyB,YAAM;AAC7BN,QAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACD,OAFD;AAGD,KAJD;AAKD,GAND;;AAQA,MAAMW,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMJ,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA,GAArB;;AAEAP,EAAAA,eAAe,CAACK,GAAD,EAAM;AAAA,WAAMG,SAAS,CAAC,KAAD,CAAf;AAAA,GAAN,CAAf;AAEA,SACE;AAAK,IAAA,GAAG,EAAEH,GAAV;AAAe,IAAA,SAAS,EAAEN,MAAM,CAAC,+BAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsCD;;GAvDQG,2B;UAEQL,S,EAafG,e;;;KAfOE,2B;;AAyDT,SAASW,eAAT,CAAyBC,KAAzB,EAA2C;AACzC,SAAO;AACLX,IAAAA,IAAI,EAAEW,KAAK,CAACX;AADP,GAAP;AAGD;;AAED,IAAMY,SAAS,GAAGnB,OAAO,CAACiB,eAAD,CAAzB;AAEA,qBAAeE,SAAS,CAACb,2BAAD,CAAxB","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Link from 'next/link';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport UserService from '~/services/User.service';\r\nimport { RootState } from '~/redux/root.reducer';\r\n\r\nimport styles from './AccountNotificationsTooltip.module.scss';\r\nimport { useOutsideClick } from '~/services/Hooks';\r\nimport { logoutUser } from '~/redux/user/user.actions';\r\n\r\nfunction AccountNotificationsTooltip({ user, dispatch }: ConnectedProps<typeof connector>) {\r\n  const ref = useRef(null);\r\n  const router = useRouter();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const logout = () => {\r\n    UserService.logout().then(() => {\r\n      router.replace('/').then(() => {\r\n        dispatch(logoutUser());\r\n      });\r\n    });\r\n  };\r\n\r\n  const toggleToolip = () => setIsOpen(!isOpen);\r\n\r\n  useOutsideClick(ref, () => setIsOpen(false));\r\n\r\n  return (\r\n    <div ref={ref} className={styles['account-notifications-tooltip']}>\r\n      test\r\n      {/* <button className={styles.avatar} type=\"button\" onClick={toggleToolip}>\r\n        <img\r\n          className=\"pointer\"\r\n          title=\"Toggle menu\"\r\n          src={user.info.avatar}\r\n          alt={`${user.info.name} avatar`}\r\n          width=\"32\"\r\n          data-toggle=\"true\"\r\n        />\r\n      </button> */}\r\n      {/* {isOpen && (\r\n        <ul className=\"menu\">\r\n          <li>\r\n            <Link href={`/${user.info.username}`}>\r\n              <a className=\"no-underline\">\r\n                Profilul tău\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link href=\"/settings\">\r\n              <a className=\"no-underline\">\r\n                Setările contului\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\" onClick={logout} className=\"no-underline\">\r\n              Sign out\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(AccountNotificationsTooltip);\r\n"]},"metadata":{},"sourceType":"module"}