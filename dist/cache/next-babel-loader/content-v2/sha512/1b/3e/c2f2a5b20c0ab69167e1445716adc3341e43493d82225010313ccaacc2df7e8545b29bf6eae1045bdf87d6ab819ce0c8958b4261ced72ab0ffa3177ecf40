{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Editor\\\\FileSwitcher\\\\FileSwitcher.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faCloudDownloadAlt, faFolderPlus, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit, faFileAlt, faFolder, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\nimport { uuid, nextUntitledFilename } from '~/services/Utils';\nimport HResizable from '../HResizable/HResizable';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport FileIcons from '~/services/utils/FileIcons';\nimport { NewSourceFile } from '~/services/utils/FolderStructure';\nimport FilesList from '../FileList/FilesList';\nimport FolderBrowse from '../FolderBrowser/FolderBrowse';\nimport Feedbacks from '../Feedbacks';\nimport styles from './FileSwitcher.module.scss';\nconst MIN_WIDTH_PX = 150;\nconst INITIAL_WIDTH_PX = 250;\n\nclass FileSwitcher extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"fileSwitcherRef\", void 0);\n\n    _defineProperty(this, \"closeMenu\", () => {\n      this.setState({\n        ctxMenuKey: null,\n        ctxMenuType: null,\n        dropdownStyle: {\n          display: 'none'\n        }\n      });\n      document.removeEventListener('click', this.closeMenu);\n    });\n\n    _defineProperty(this, \"selectFile\", key => {\n      const {\n        onSelect\n      } = this.props;\n      const {\n        renamedAsset\n      } = this.state;\n\n      if (!renamedAsset || key !== renamedAsset.key) {\n        /** Editing a file's name & clicking on another file */\n        document.activeElement.blur();\n      }\n\n      if (onSelect) {\n        onSelect(key);\n      }\n    });\n\n    _defineProperty(this, \"enterEditMode\", key => {\n      const {\n        folderStructure\n      } = this.props;\n      let renamedAsset = folderStructure.getFile(key).file;\n\n      if (renamedAsset) {\n        renamedAsset = _objectSpread(_objectSpread({}, renamedAsset), {}, {\n          type: 'FILE'\n        });\n      } else {\n        renamedAsset = _objectSpread(_objectSpread({}, folderStructure.getFolder(key).folder), {}, {\n          type: 'FOLDER'\n        });\n      }\n\n      this.setState({\n        renamedAsset\n      });\n      setTimeout(() => {\n        this.fileSwitcherRef.current.querySelector(`[data-key=\"${key}\"] input`).focus();\n      }, 0);\n    });\n\n    _defineProperty(this, \"onRename\", ({\n      target\n    }) => {\n      const {\n        value\n      } = target;\n      const {\n        renamedAsset\n      } = this.state;\n      this.setState({\n        renamedAsset: _objectSpread(_objectSpread({}, renamedAsset), {}, {\n          name: value\n        })\n      });\n    });\n\n    _defineProperty(this, \"onDownload\", () => {\n      const {\n        onDownload\n      } = this.props;\n      this.setState({\n        isGeneratingArchive: true\n      });\n      onDownload().catch(() => {\n        SweetAlertService.toast({\n          type: 'error',\n          text: 'Oups, generating the archive failed. Give it another try!'\n        });\n      }).finally(() => this.setState({\n        isGeneratingArchive: false\n      }));\n    });\n\n    _defineProperty(this, \"saveAsset\", e => {\n      e.preventDefault();\n      e.stopPropagation();\n      const {\n        renamedAsset\n      } = this.state;\n      const {\n        onFileRename,\n        onFolderRename\n      } = this.props;\n\n      if (renamedAsset.type === 'FOLDER') {\n        onFolderRename(renamedAsset.key, renamedAsset.name);\n      } else {\n        onFileRename(renamedAsset.key, renamedAsset.name);\n      }\n\n      this.setState({\n        renamedAsset: null\n      });\n    });\n\n    _defineProperty(this, \"openMenu\", (e, isFolder = false) => {\n      e.preventDefault();\n      e.stopPropagation();\n      document.removeEventListener('click', this.closeMenu);\n      const {\n        clientX,\n        clientY\n      } = e;\n      const bbox = this.fileSwitcherRef.current.getBoundingClientRect();\n      this.setState({\n        dropdownStyle: {\n          top: `${clientY - bbox.y}px`,\n          left: `${clientX - bbox.x}px`\n        }\n      });\n      this.setState({\n        ctxMenuKey: e.target.dataset.key,\n        ctxMenuType: isFolder ? 'FOLDER' : 'FILE'\n      });\n      document.addEventListener('click', this.closeMenu);\n    });\n\n    _defineProperty(this, \"newFile\", (parentKey = null) => {\n      const {\n        folderStructure,\n        onFileAdd\n      } = this.props;\n      const renamedAsset = NewSourceFile(nextUntitledFilename(folderStructure.getFolder(parentKey).folder.files.map(f => f.name)));\n      this.setState({\n        renamedAsset: _objectSpread(_objectSpread({}, renamedAsset), {}, {\n          type: 'FILE'\n        })\n      });\n      onFileAdd(parentKey, renamedAsset, () => {\n        this.selectFile(renamedAsset.key);\n      });\n    });\n\n    _defineProperty(this, \"newFolder\", (parentKey = null) => {\n      const {\n        folderStructure,\n        onFolderAdd\n      } = this.props;\n      const renamedAsset = {\n        key: uuid(),\n        files: [],\n        folders: [],\n        name: nextUntitledFilename(folderStructure.getFolder(parentKey).folder.folders.map(f => f.name), 'Untitled folder')\n      }; // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n\n      this.setState({\n        renamedAsset: _objectSpread(_objectSpread({}, renamedAsset), {}, {\n          type: 'FOLDER'\n        })\n      });\n      onFolderAdd(parentKey, renamedAsset);\n    });\n\n    _defineProperty(this, \"toggleCollapse\", () => {\n      const {\n        isCollapsed\n      } = this.state;\n      const {\n        onResize\n      } = this.props;\n      this.setState({\n        isCollapsed: !isCollapsed\n      }, () => {\n        if (isCollapsed) {\n          onResize(INITIAL_WIDTH_PX);\n        } else {\n          onResize(0);\n        }\n      });\n    });\n\n    _defineProperty(this, \"onResize\", ({\n      dx\n    }) => {\n      let newWidth = Number(this.fileSwitcherRef.current.style.width.split('px')[0]) + dx;\n      newWidth = Math.min(Math.max(newWidth, MIN_WIDTH_PX), window.innerWidth / 2);\n      this.fileSwitcherRef.current.style.width = `${newWidth}px`;\n      this.props.onResize(newWidth);\n    });\n\n    this.state = {\n      ctxMenuKey: null,\n      ctxMenuType: null,\n      renamedAsset: null,\n      isCollapsed: false,\n      isGeneratingArchive: false,\n      dropdownStyle: {\n        display: 'none'\n      }\n    };\n    this.fileSwitcherRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      onResize\n    } = this.props;\n    onResize(INITIAL_WIDTH_PX);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.closeMenu);\n  }\n\n  deleteFileOrFolder(key) {\n    const {\n      ctxMenuType\n    } = this.state;\n    const {\n      onFolderDelete,\n      onFileDelete\n    } = this.props;\n\n    if (ctxMenuType === 'FOLDER') {\n      onFolderDelete(key);\n    } else {\n      onFileDelete(key);\n    }\n  }\n\n  render() {\n    const {\n      readOnly,\n      maxHeight,\n      folderStructure,\n      selectedFileKey,\n      feedbacks: feedbacksProp\n    } = this.props;\n    const {\n      ctxMenuKey,\n      isCollapsed,\n      ctxMenuType,\n      dropdownStyle,\n      isGeneratingArchive\n    } = this.state;\n    let {\n      renamedAsset\n    } = this.state; // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n\n    renamedAsset = renamedAsset || {\n      key: null\n    };\n    const files = folderStructure.files.map(f => _objectSpread(_objectSpread({}, f), {}, {\n      icon: FileIcons.getIcon(f.name)\n    }));\n    const feedbacks = new Feedbacks(null, feedbacksProp || []).getTypesByFileKey();\n    return __jsx(\"div\", {\n      className: `\n          ${styles['file-switcher']}\n          ${readOnly ? styles['is--read-only'] : ''}\n          ${isCollapsed ? styles['is--collapsed'] : ''}`,\n      ref: this.fileSwitcherRef,\n      style: {\n        width: `${INITIAL_WIDTH_PX}px`,\n        minWidth: `${MIN_WIDTH_PX}px`,\n        maxHeight: `${maxHeight}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 7\n      }\n    }, isCollapsed && __jsx(\"button\", {\n      onClick: this.toggleCollapse,\n      title: \"Browse files\",\n      type: \"button\",\n      className: `${styles['toggle-button']} btn--transparent`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: FileIcons.getIconUrl('svg'),\n      alt: \"File SVG icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: styles.controls,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }\n    }, !readOnly && __jsx(\"button\", {\n      onClick: () => this.newFile(),\n      type: \"button\",\n      className: \"btn--transparent\",\n      title: \"New file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: faPlus,\n      width: \"18\",\n      height: \"18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    })), !readOnly && __jsx(\"button\", {\n      onClick: () => this.newFolder(),\n      type: \"button\",\n      className: \"btn--transparent\",\n      title: \"New folder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 15\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: faFolderPlus,\n      width: \"18\",\n      height: \"18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }\n    })), __jsx(\"button\", {\n      onClick: this.onDownload,\n      disabled: isGeneratingArchive,\n      type: \"button\",\n      className: \"btn--transparent\",\n      title: \"Download to device\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: faCloudDownloadAlt,\n      width: \"18\",\n      height: \"18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 15\n      }\n    }))), __jsx(\"button\", {\n      onClick: this.toggleCollapse,\n      type: \"button\",\n      className: \"btn--transparent\",\n      title: \"Collapse panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: faChevronLeft,\n      width: \"18\",\n      height: \"18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }\n    }))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }\n    }, folderStructure.folders.map((folder, index) => __jsx(FolderBrowse, {\n      key: folder.key,\n      folderKey: folder.key,\n      folderStructure: folderStructure // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ,\n      feedbacks: feedbacks,\n      readOnly: readOnly,\n      selectFile: this.selectFile,\n      selectedFileKey: selectedFileKey,\n      renamedAsset: renamedAsset,\n      ctxMenuKey: ctxMenuKey,\n      openMenu: this.openMenu,\n      enterEditMode: this.enterEditMode,\n      onRename: this.onRename,\n      saveAsset: this.saveAsset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    })), __jsx(FilesList, {\n      readOnly: readOnly,\n      files: files,\n      feedbacks: feedbacks,\n      selectedFileKey: selectedFileKey,\n      ctxMenuKey: ctxMenuKey,\n      selectFile: this.selectFile,\n      enterEditMode: this.enterEditMode,\n      openMenu: this.openMenu,\n      renamedAsset: renamedAsset,\n      onRename: this.onRename,\n      saveAsset: this.saveAsset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }\n    })), __jsx(\"ul\", {\n      className: styles['dropdown-menu'],\n      style: dropdownStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }\n    }, ctxMenuType === 'FOLDER' && __jsx(React.Fragment, null, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 15\n      }\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: () => this.newFile(ctxMenuKey),\n      className: \"btn btn--transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: faFileAlt,\n      width: \"18\",\n      height: \"18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 19\n      }\n    }), \"New file\")), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 15\n      }\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: () => this.newFolder(ctxMenuKey),\n      className: \"btn btn--transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: faFolder,\n      width: \"18\",\n      height: \"18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 19\n      }\n    }), \"New folder\"))), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: () => this.enterEditMode(ctxMenuKey),\n      className: \"btn btn--transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: faEdit,\n      width: \"18\",\n      height: \"18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 15\n      }\n    }), \"Rename\")), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: () => this.deleteFileOrFolder(ctxMenuKey),\n      className: \"btn btn--transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      width: \"18\",\n      height: \"18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 15\n      }\n    }), \"Delete\"))), __jsx(HResizable, {\n      onResize: this.onResize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default FileSwitcher;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Editor/FileSwitcher/FileSwitcher.tsx"],"names":["React","FontAwesomeIcon","faChevronLeft","faCloudDownloadAlt","faFolderPlus","faPlus","faEdit","faFileAlt","faFolder","faTrashAlt","uuid","nextUntitledFilename","HResizable","SweetAlertService","FileIcons","NewSourceFile","FilesList","FolderBrowse","Feedbacks","styles","MIN_WIDTH_PX","INITIAL_WIDTH_PX","FileSwitcher","Component","constructor","props","setState","ctxMenuKey","ctxMenuType","dropdownStyle","display","document","removeEventListener","closeMenu","key","onSelect","renamedAsset","state","activeElement","blur","folderStructure","getFile","file","type","getFolder","folder","setTimeout","fileSwitcherRef","current","querySelector","focus","target","value","name","onDownload","isGeneratingArchive","catch","toast","text","finally","e","preventDefault","stopPropagation","onFileRename","onFolderRename","isFolder","clientX","clientY","bbox","getBoundingClientRect","top","y","left","x","dataset","addEventListener","parentKey","onFileAdd","files","map","f","selectFile","onFolderAdd","folders","isCollapsed","onResize","dx","newWidth","Number","style","width","split","Math","min","max","window","innerWidth","createRef","componentDidMount","componentWillUnmount","deleteFileOrFolder","onFolderDelete","onFileDelete","render","readOnly","maxHeight","selectedFileKey","feedbacks","feedbacksProp","icon","getIcon","getTypesByFileKey","minWidth","toggleCollapse","getIconUrl","controls","newFile","newFolder","index","openMenu","enterEditMode","onRename","saveAsset"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faChevronLeft,\r\n  faCloudDownloadAlt,\r\n  faFileUpload,\r\n  faFolderPlus,\r\n  faPlus,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  faEdit, faFileAlt, faFolder, faTrashAlt,\r\n} from '@fortawesome/free-regular-svg-icons';\r\nimport { uuid, nextUntitledFilename } from '~/services/Utils';\r\nimport HResizable from '../HResizable/HResizable';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\nimport FileIcons from '~/services/utils/FileIcons';\r\nimport FolderStructure, { ExerciseFile, ExerciseFolder, NewSourceFile } from '~/services/utils/FolderStructure';\r\nimport FilesList from '../FileList/FilesList';\r\nimport FolderBrowse from '../FolderBrowser/FolderBrowse';\r\nimport Feedbacks from '../Feedbacks';\r\n\r\nimport styles from './FileSwitcher.module.scss';\r\n\r\nconst MIN_WIDTH_PX = 150;\r\nconst INITIAL_WIDTH_PX = 250;\r\n\r\ninterface Props {\r\n  readOnly: boolean,\r\n  maxHeight: number,\r\n  selectedFileKey: string;\r\n  folderStructure: FolderStructure,\r\n  onResize: (px: number) => void\r\n  onSelect?: (key: string) => void\r\n  onDownload?: () => Promise<void>\r\n  onFolderAdd?: (key: string, asset: any) => void;\r\n  onFolderRename?: (key: string, name: string) => void;\r\n  onFolderDelete?: (key: string) => void;\r\n  onFileAdd?: (key: string, asset: any, cb: () => void) => void\r\n  onFileRename?: (key: string, name: string) => void;\r\n  onFileDelete?: (key: string) => void;\r\n  feedbacks?: any;\r\n}\r\n\r\ninterface State {\r\n  ctxMenuKey: string;\r\n  ctxMenuType: 'FILE' | 'FOLDER';\r\n  renamedAsset: (ExerciseFile | ExerciseFolder) & { type: 'FILE' | 'FOLDER' };\r\n  isCollapsed: boolean;\r\n  isGeneratingArchive: boolean;\r\n  dropdownStyle: Record<string, any>\r\n}\r\n\r\nclass FileSwitcher extends React.Component<Props, State> {\r\n  private fileSwitcherRef: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ctxMenuKey: null,\r\n      ctxMenuType: null,\r\n      renamedAsset: null,\r\n      isCollapsed: false,\r\n      isGeneratingArchive: false,\r\n      dropdownStyle: { display: 'none' },\r\n    };\r\n\r\n    this.fileSwitcherRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { onResize } = this.props;\r\n\r\n    onResize(INITIAL_WIDTH_PX);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('click', this.closeMenu);\r\n  }\r\n\r\n  closeMenu = () => {\r\n    this.setState({\r\n      ctxMenuKey: null,\r\n      ctxMenuType: null,\r\n      dropdownStyle: { display: 'none' },\r\n    });\r\n\r\n    document.removeEventListener('click', this.closeMenu);\r\n  }\r\n\r\n  selectFile = (key: string) => {\r\n    const { onSelect } = this.props;\r\n    const { renamedAsset } = this.state;\r\n\r\n    if (!renamedAsset || key !== renamedAsset.key) {\r\n      /** Editing a file's name & clicking on another file */\r\n      (document.activeElement as HTMLElement).blur();\r\n    }\r\n\r\n    if (onSelect) {\r\n      onSelect(key);\r\n    }\r\n  }\r\n\r\n  enterEditMode = (key) => {\r\n    const { folderStructure } = this.props;\r\n\r\n    let renamedAsset = folderStructure.getFile(key).file;\r\n    if (renamedAsset) {\r\n      renamedAsset = { ...renamedAsset, type: 'FILE' };\r\n    } else {\r\n      renamedAsset = { ...folderStructure.getFolder(key).folder, type: 'FOLDER' };\r\n    }\r\n\r\n    this.setState({ renamedAsset });\r\n\r\n    setTimeout(() => {\r\n      (this.fileSwitcherRef.current.querySelector(`[data-key=\"${key}\"] input`) as HTMLElement).focus();\r\n    }, 0);\r\n  }\r\n\r\n  onRename = ({ target }) => {\r\n    const { value } = target;\r\n    const { renamedAsset } = this.state;\r\n\r\n    this.setState({\r\n      renamedAsset: { ...renamedAsset, name: value },\r\n    });\r\n  }\r\n\r\n  onDownload = () => {\r\n    const { onDownload } = this.props;\r\n\r\n    this.setState({ isGeneratingArchive: true });\r\n\r\n    onDownload()\r\n      .catch(() => {\r\n        SweetAlertService.toast({\r\n          type: 'error',\r\n          text: 'Oups, generating the archive failed. Give it another try!',\r\n        });\r\n      })\r\n\r\n      .finally(() => this.setState({ isGeneratingArchive: false }));\r\n  }\r\n\r\n  saveAsset = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const { renamedAsset } = this.state;\r\n    const { onFileRename, onFolderRename } = this.props;\r\n\r\n    if (renamedAsset.type === 'FOLDER') {\r\n      onFolderRename(renamedAsset.key, renamedAsset.name);\r\n    } else {\r\n      onFileRename(renamedAsset.key, renamedAsset.name);\r\n    }\r\n\r\n    this.setState({ renamedAsset: null });\r\n  }\r\n\r\n  openMenu = (e, isFolder = false) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    document.removeEventListener('click', this.closeMenu);\r\n\r\n    const { clientX, clientY } = e;\r\n\r\n    const bbox = this.fileSwitcherRef.current.getBoundingClientRect();\r\n\r\n    this.setState({\r\n      dropdownStyle: {\r\n        top: `${clientY - bbox.y}px`,\r\n        left: `${clientX - bbox.x}px`,\r\n      },\r\n    });\r\n\r\n    this.setState({\r\n      ctxMenuKey: e.target.dataset.key,\r\n      ctxMenuType: isFolder ? 'FOLDER' : 'FILE',\r\n    });\r\n    document.addEventListener('click', this.closeMenu);\r\n  }\r\n\r\n  newFile = (parentKey = null) => {\r\n    const { folderStructure, onFileAdd } = this.props;\r\n    const renamedAsset = NewSourceFile(nextUntitledFilename(folderStructure\r\n      .getFolder(parentKey).folder.files.map((f) => f.name)));\r\n\r\n    this.setState({ renamedAsset: { ...renamedAsset, type: 'FILE' } });\r\n    onFileAdd(parentKey, renamedAsset, () => {\r\n      this.selectFile(renamedAsset.key);\r\n    });\r\n  }\r\n\r\n  newFolder = (parentKey = null) => {\r\n    const { folderStructure, onFolderAdd } = this.props;\r\n    const renamedAsset = {\r\n      key: uuid(),\r\n      files: [],\r\n      folders: [],\r\n      name: nextUntitledFilename(folderStructure.getFolder(parentKey).folder.folders.map((f) => f.name), 'Untitled folder'),\r\n    };\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore\r\n    this.setState({ renamedAsset: { ...renamedAsset, type: 'FOLDER' } });\r\n    onFolderAdd(parentKey, renamedAsset);\r\n  }\r\n\r\n  toggleCollapse = () => {\r\n    const { isCollapsed } = this.state;\r\n    const { onResize } = this.props;\r\n\r\n    this.setState(\r\n      {\r\n        isCollapsed: !isCollapsed,\r\n      },\r\n      () => {\r\n        if (isCollapsed) {\r\n          onResize(INITIAL_WIDTH_PX);\r\n        } else {\r\n          onResize(0);\r\n        }\r\n      },\r\n    );\r\n  }\r\n\r\n  onResize = ({ dx }) => {\r\n    let newWidth = Number(this.fileSwitcherRef.current.style.width.split('px')[0]) + dx;\r\n    newWidth = Math.min(Math.max(newWidth, MIN_WIDTH_PX), window.innerWidth / 2);\r\n\r\n    this.fileSwitcherRef.current.style.width = `${newWidth}px`;\r\n\r\n    this.props.onResize(newWidth);\r\n  }\r\n\r\n  deleteFileOrFolder(key) {\r\n    const { ctxMenuType } = this.state;\r\n    const { onFolderDelete, onFileDelete } = this.props;\r\n\r\n    if (ctxMenuType === 'FOLDER') {\r\n      onFolderDelete(key);\r\n    } else {\r\n      onFileDelete(key);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      readOnly,\r\n      maxHeight,\r\n      folderStructure,\r\n      selectedFileKey,\r\n      feedbacks: feedbacksProp\r\n    } = this.props;\r\n\r\n    const {\r\n      ctxMenuKey,\r\n      isCollapsed,\r\n      ctxMenuType,\r\n      dropdownStyle,\r\n      isGeneratingArchive,\r\n    } = this.state;\r\n\r\n    let { renamedAsset } = this.state;\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore\r\n    renamedAsset = renamedAsset || { key: null };\r\n\r\n    const files = folderStructure.files.map((f) => ({ ...f, icon: FileIcons.getIcon(f.name) }));\r\n    const feedbacks = new Feedbacks(null, feedbacksProp || []).getTypesByFileKey();\r\n\r\n    return (\r\n      <div\r\n        className={`\r\n          ${styles['file-switcher']}\r\n          ${readOnly ? styles['is--read-only'] : ''}\r\n          ${isCollapsed ? styles['is--collapsed'] : ''}`}\r\n        ref={this.fileSwitcherRef}\r\n        style={{ width: `${INITIAL_WIDTH_PX}px`, minWidth: `${MIN_WIDTH_PX}px`, maxHeight: `${maxHeight}px` }}\r\n      >\r\n        {isCollapsed && (\r\n          <button onClick={this.toggleCollapse} title=\"Browse files\" type=\"button\" className={`${styles['toggle-button']} btn--transparent`}>\r\n            <img src={FileIcons.getIconUrl('svg')} alt=\"File SVG icon\" />\r\n          </button>\r\n        )}\r\n        <div className={styles.controls}>\r\n          <div>\r\n            {!readOnly && (\r\n              <button onClick={() => this.newFile()} type=\"button\" className=\"btn--transparent\" title=\"New file\">\r\n                <FontAwesomeIcon icon={faPlus} width=\"18\" height=\"18\" />\r\n              </button>\r\n            )}\r\n            {!readOnly && (\r\n              <button onClick={() => this.newFolder()} type=\"button\" className=\"btn--transparent\" title=\"New folder\">\r\n                <FontAwesomeIcon icon={faFolderPlus} width=\"18\" height=\"18\" />\r\n              </button>\r\n            )}\r\n            <button\r\n              onClick={this.onDownload}\r\n              disabled={isGeneratingArchive}\r\n              type=\"button\"\r\n              className=\"btn--transparent\"\r\n              title=\"Download to device\"\r\n            >\r\n              <FontAwesomeIcon icon={faCloudDownloadAlt} width=\"18\" height=\"18\" />\r\n            </button>\r\n          </div>\r\n          <button onClick={this.toggleCollapse} type=\"button\" className=\"btn--transparent\" title=\"Collapse panel\">\r\n            <FontAwesomeIcon icon={faChevronLeft} width=\"18\" height=\"18\" />\r\n          </button>\r\n        </div>\r\n        {/* <Scroll className=\"is--fliped-x\"> */}\r\n        <div>\r\n          {folderStructure.folders.map((folder, index) => (\r\n            <FolderBrowse\r\n              key={folder.key}\r\n              folderKey={folder.key}\r\n              folderStructure={folderStructure}\r\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n              // @ts-ignore\r\n              feedbacks={feedbacks}\r\n              readOnly={readOnly}\r\n              selectFile={this.selectFile}\r\n              selectedFileKey={selectedFileKey}\r\n              renamedAsset={renamedAsset}\r\n              ctxMenuKey={ctxMenuKey}\r\n              openMenu={this.openMenu}\r\n              enterEditMode={this.enterEditMode}\r\n              onRename={this.onRename}\r\n              saveAsset={this.saveAsset}\r\n            />\r\n          ))}\r\n          <FilesList\r\n            readOnly={readOnly}\r\n            files={files}\r\n            feedbacks={feedbacks}\r\n            selectedFileKey={selectedFileKey}\r\n            ctxMenuKey={ctxMenuKey}\r\n            selectFile={this.selectFile}\r\n            enterEditMode={this.enterEditMode}\r\n            openMenu={this.openMenu}\r\n            renamedAsset={renamedAsset}\r\n            onRename={this.onRename}\r\n            saveAsset={this.saveAsset}\r\n          />\r\n        </div>\r\n        {/* </Scroll> */}\r\n        <ul className={styles['dropdown-menu']} style={dropdownStyle}>\r\n          {ctxMenuType === 'FOLDER' && (\r\n            <>\r\n              <li>\r\n                <button type=\"button\" onClick={() => this.newFile(ctxMenuKey)} className=\"btn btn--transparent\">\r\n                  <FontAwesomeIcon icon={faFileAlt} width=\"18\" height=\"18\" />\r\n                  New file\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button type=\"button\" onClick={() => this.newFolder(ctxMenuKey)} className=\"btn btn--transparent\">\r\n                  <FontAwesomeIcon icon={faFolder} width=\"18\" height=\"18\" />\r\n                  New folder\r\n                </button>\r\n              </li>\r\n            </>\r\n          )}\r\n          <li>\r\n            <button type=\"button\" onClick={() => this.enterEditMode(ctxMenuKey)} className=\"btn btn--transparent\">\r\n              <FontAwesomeIcon icon={faEdit} width=\"18\" height=\"18\" />\r\n              Rename\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <button type=\"button\" onClick={() => this.deleteFileOrFolder(ctxMenuKey)} className=\"btn btn--transparent\">\r\n              <FontAwesomeIcon icon={faTrashAlt} width=\"18\" height=\"18\" />\r\n              Delete\r\n            </button>\r\n          </li>\r\n        </ul>\r\n        <HResizable onResize={this.onResize} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileSwitcher;\r\n"]},"metadata":{},"sourceType":"module"}