{"ast":null,"code":"import _extends from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Button\\\\Button.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nvar Button = /*#__PURE__*/React.forwardRef(_c = function _c(_ref, forwardRef) {\n  var icon = _ref.icon,\n      children = _ref.children,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? false : _ref$loading,\n      className = _ref.className,\n      disabled = _ref.disabled,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'transparent' : _ref$variant,\n      _ref$withIcon = _ref.withIcon,\n      withIcon = _ref$withIcon === void 0 ? false : _ref$withIcon,\n      _ref$outline = _ref.outline,\n      outline = _ref$outline === void 0 ? false : _ref$outline,\n      _ref$bouncy = _ref.bouncy,\n      bouncy = _ref$bouncy === void 0 ? false : _ref$bouncy,\n      props = _objectWithoutProperties(_ref, [\"icon\", \"children\", \"loading\", \"className\", \"disabled\", \"variant\", \"withIcon\", \"outline\", \"bouncy\"]);\n\n  var updatedClassName = className || '';\n\n  if (loading) {\n    updatedClassName += ' btn--loading';\n  } else if (withIcon) {\n    updatedClassName += ' btn--with-icon';\n  } else if (outline) {\n    updatedClassName += ' btn--outline';\n  } else if (bouncy) {\n    updatedClassName += ' btn--bouncy';\n  } else {\n    updatedClassName += '';\n  }\n\n  return __jsx(\"button\", _extends({\n    // eslint-disable-next-line react/button-has-type\n    type: props.type || 'button',\n    className: \"\\n          btn \\n          \".concat(variant === \"\".concat(variant) ? \"btn--\".concat(variant) : 'btn--transparent', \" \\n          \").concat(updatedClassName, \"\\n        \"),\n    disabled: loading || disabled,\n    ref: forwardRef\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), withIcon && __jsx(FontAwesomeIcon, {\n    icon: icon,\n    height: \"24\",\n    className: \"mr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), children);\n});\n_c2 = Button;\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button$React.forwardRef\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Button/Button.tsx"],"names":["React","FontAwesomeIcon","Button","forwardRef","icon","children","loading","className","disabled","variant","withIcon","outline","bouncy","props","updatedClassName","type"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAyD,OAAzD;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AAqBA,IAAMC,MAAM,gBAAGF,KAAK,CAACG,UAAN,MAIb,kBAaEA,UAbF,EAcK;AAAA,MAZDC,IAYC,QAZDA,IAYC;AAAA,MAXDC,QAWC,QAXDA,QAWC;AAAA,0BAVDC,OAUC;AAAA,MAVDA,OAUC,6BAVS,KAUT;AAAA,MATDC,SASC,QATDA,SASC;AAAA,MARDC,QAQC,QARDA,QAQC;AAAA,0BAPDC,OAOC;AAAA,MAPDA,OAOC,6BAPS,aAOT;AAAA,2BANDC,QAMC;AAAA,MANDA,QAMC,8BANU,KAMV;AAAA,0BALDC,OAKC;AAAA,MALDA,OAKC,6BALS,KAKT;AAAA,yBAJDC,MAIC;AAAA,MAJDA,MAIC,4BAJQ,KAIR;AAAA,MAHEC,KAGF;;AACH,MAAIC,gBAAgB,GAAGP,SAAS,IAAI,EAApC;;AACA,MAAID,OAAJ,EAAa;AACXQ,IAAAA,gBAAgB,IAAI,eAApB;AACD,GAFD,MAEO,IAAIJ,QAAJ,EAAc;AACnBI,IAAAA,gBAAgB,IAAI,iBAApB;AACD,GAFM,MAEA,IAAIH,OAAJ,EAAa;AAClBG,IAAAA,gBAAgB,IAAI,eAApB;AACD,GAFM,MAEA,IAAIF,MAAJ,EAAY;AACjBE,IAAAA,gBAAgB,IAAI,cAApB;AACD,GAFM,MAEA;AACLA,IAAAA,gBAAgB,IAAI,EAApB;AACD;;AAED,SACE;AACE;AACA,IAAA,IAAI,EAAED,KAAK,CAACE,IAAN,IAAc,QAFtB;AAGE,IAAA,SAAS,wCAELN,OAAO,eAAQA,OAAR,CAAP,kBAAmCA,OAAnC,IAA+C,kBAF1C,0BAGLK,gBAHK,eAHX;AAQE,IAAA,QAAQ,EAAER,OAAO,IAAIE,QARvB;AASE,IAAA,GAAG,EAAEL;AATP,KAUMU,KAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYGH,QAAQ,IACP,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEN,IAAvB;AAA6B,IAAA,MAAM,EAAC,IAApC;AAAyC,IAAA,SAAS,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAeGC,QAfH,CADF;AAmBD,CAnDY,CAAf;MAAMH,M;AAqDN,eAAeA,MAAf","sourcesContent":["import React, { HTMLAttributes, PropsWithChildren } from 'react';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ninterface Props {\r\n  loading?: boolean;\r\n  variant?:\r\n  | 'light'\r\n  | 'blue'\r\n  | 'success'\r\n  | 'danger'\r\n  | 'transparent'\r\n  | 'yellow'\r\n  | 'grey'\r\n  // We define here the form property because\r\n  // even if it's a valid attribute on buttons, React or TS complain about it.\r\n  form?: string;\r\n  withIcon?: boolean;\r\n  icon?: IconProp;\r\n  outline?: boolean;\r\n  bouncy?: boolean;\r\n}\r\nexport type Ref = HTMLButtonElement;\r\nconst Button = React.forwardRef<\r\n  Ref,\r\n  PropsWithChildren<Props> & React.ButtonHTMLAttributes<HTMLButtonElement>\r\n>(\r\n  (\r\n    {\r\n      icon,\r\n      children,\r\n      loading = false,\r\n      className,\r\n      disabled,\r\n      variant = 'transparent',\r\n      withIcon = false,\r\n      outline = false,\r\n      bouncy = false,\r\n      ...props\r\n    }: PropsWithChildren<Props> & React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    forwardRef,\r\n  ) => {\r\n    let updatedClassName = className || '';\r\n    if (loading) {\r\n      updatedClassName += ' btn--loading';\r\n    } else if (withIcon) {\r\n      updatedClassName += ' btn--with-icon';\r\n    } else if (outline) {\r\n      updatedClassName += ' btn--outline';\r\n    } else if (bouncy) {\r\n      updatedClassName += ' btn--bouncy';\r\n    } else {\r\n      updatedClassName += '';\r\n    }\r\n\r\n    return (\r\n      <button\r\n        // eslint-disable-next-line react/button-has-type\r\n        type={props.type || 'button'}\r\n        className={`\r\n          btn \r\n          ${variant === `${variant}` ? `btn--${variant}` : 'btn--transparent'} \r\n          ${updatedClassName}\r\n        `}\r\n        disabled={loading || disabled}\r\n        ref={forwardRef}\r\n        {...props}\r\n      >\r\n        {withIcon && (\r\n          <FontAwesomeIcon icon={icon} height=\"24\" className=\"mr-2\" />\r\n        )}\r\n        {children}\r\n      </button>\r\n    );\r\n  },\r\n);\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}