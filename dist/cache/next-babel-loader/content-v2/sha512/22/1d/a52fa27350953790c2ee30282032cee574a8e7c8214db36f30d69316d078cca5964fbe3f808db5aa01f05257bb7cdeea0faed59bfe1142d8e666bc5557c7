{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Highlight\\\\Highlight.tsx\";\nvar __jsx = React.createElement;\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useClipboard } from '~/services/Hooks';\nimport IframeDemo from '../LivePreviewDemo/IframeDemo/IframeDemo';\nimport styles from './Highlight.module.scss';\nexport default function Highlight({\n  language,\n  code,\n  className\n}) {\n  const [preRef, btnRef] = [useRef(null), useRef(null)];\n  const {\n    0: value,\n    1: setValue\n  } = useState(code);\n  useEffect(() => {\n    highlighting();\n  }, []);\n  useClipboard(btnRef);\n\n  const onChange = e => {\n    setValue(e.target.textContent);\n    highlighting();\n  };\n\n  const highlighting = () => {\n    import('~/services/highlight').then(module => {\n      const highlight = module.default;\n      document.querySelectorAll('pre code').forEach(block => {\n        highlight.highlightBlock(block);\n      });\n    });\n    setTimeout(() => {\n      const el = document.getElementById('content');\n      const sel = window.getSelection();\n      const offset = sel.getRangeAt(0).startOffset;\n      el.innerHTML += 'Text needed to be added'; // perform operations here\n\n      const nRange = document.createRange();\n      nRange.setStart(el.childNodes[0], offset);\n      nRange.collapse(true);\n      window.getSelection().removeAllRanges();\n      window.getSelection().addRange(nRange);\n    }, 3000);\n  };\n\n  return __jsx(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: `${styles.highlight} ${className}`,\n    contentEditable: true,\n    onInput: onChange,\n    id: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"pre\", {\n    ref: preRef,\n    className: language,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, code))), __jsx(IframeDemo, {\n    sourceCode: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn--transparent\",\n    \"data-clipboard-text\": code,\n    ref: btnRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(FontAwesomeIcon, {\n    className: \"text-silver\",\n    icon: faCopy,\n    width: \"32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: \"d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \" Copy \")));\n}","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Highlight/Highlight.tsx"],"names":["faCopy","FontAwesomeIcon","React","useEffect","useRef","useState","useClipboard","IframeDemo","styles","Highlight","language","code","className","preRef","btnRef","value","setValue","highlighting","onChange","e","target","textContent","then","module","highlight","default","document","querySelectorAll","forEach","block","highlightBlock","setTimeout","el","getElementById","sel","window","getSelection","offset","getRangeAt","startOffset","innerHTML","nRange","createRange","setStart","childNodes","collapse","removeAllRanges","addRange"],"mappings":"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","sourcesContent":["import { faCopy } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useClipboard } from '~/services/Hooks';\r\nimport IframeDemo from '../LivePreviewDemo/IframeDemo/IframeDemo';\r\n\r\nimport styles from './Highlight.module.scss';\r\n\r\ntype Language = 'html' | 'css' | 'json' | 'javascript';\r\n\r\ninterface Props {\r\n  code: string,\r\n  language: Language,\r\n  className?: string;\r\n}\r\n\r\nexport default function Highlight({ language, code, className }: Props) {\r\n  const [preRef, btnRef] = [useRef(null), useRef(null)];\r\n  const [value, setValue] = useState(code);\r\n\r\n  useEffect(() => {\r\n    highlighting();\r\n  }, []);\r\n\r\n  useClipboard(btnRef);\r\n\r\n  const onChange = (e) => {\r\n    setValue(e.target.textContent);\r\n    highlighting();\r\n  };\r\n\r\n  const highlighting = () => {\r\n    import('~/services/highlight').then((module) => {\r\n      const highlight = module.default;\r\n      document.querySelectorAll('pre code').forEach((block) => {\r\n        highlight.highlightBlock(block);\r\n      });\r\n    });\r\n    setTimeout(() => {\r\n      const el = document.getElementById('content');\r\n      const sel = window.getSelection();\r\n      const offset = sel.getRangeAt(0).startOffset;\r\n\r\n      el.innerHTML += 'Text needed to be added'; // perform operations here\r\n\r\n      const nRange = document.createRange();\r\n      nRange.setStart(el.childNodes[0], offset);\r\n      nRange.collapse(true);\r\n\r\n      window.getSelection().removeAllRanges();\r\n      window.getSelection().addRange(nRange);\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <div className={`${styles.highlight} ${className}`} contentEditable onInput={onChange} id=\"content\">\r\n        <pre ref={preRef} className={language}>\r\n          <code>\r\n            {code}\r\n          </code>\r\n        </pre>\r\n      </div>\r\n\r\n      <IframeDemo sourceCode={value} />\r\n\r\n      <button type=\"button\" className=\"btn--transparent\" data-clipboard-text={code} ref={btnRef}>\r\n        <FontAwesomeIcon className=\"text-silver\" icon={faCopy} width=\"32\" />\r\n        <span className=\"d-block\"> Copy </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}