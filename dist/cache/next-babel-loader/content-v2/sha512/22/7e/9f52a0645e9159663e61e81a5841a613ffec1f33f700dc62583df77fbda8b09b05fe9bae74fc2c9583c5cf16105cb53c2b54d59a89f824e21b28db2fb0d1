{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\LivePreviewDemo\\\\LivePreviewDemo.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useState } from 'react';\nimport BasicEditorLazy from '../Editor/BasicEditor/BasicEditor.lazy';\nimport FolderStructure from '~/services/utils/FolderStructure';\nimport { uuid } from '~/services/Utils';\nimport IframeDemo from './IframeDemo';\nexport default function LivePreviewDemo({\n  code,\n  language\n}) {\n  const codeRef = useRef(null);\n  const {\n    0: value,\n    1: setValue\n  } = useState(code);\n  const defaultFile = {\n    key: uuid(),\n    name: `demo.${language}`,\n    content: code\n  };\n  const folderStructure = new FolderStructure({\n    folders: [],\n    files: [defaultFile]\n  });\n\n  const onEditorChange = e => {\n    const content = e.files.forEach(file => file.content);\n    setValue(content);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(BasicEditorLazy, {\n    ref: codeRef,\n    folderStructure: folderStructure,\n    onChange: onEditorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), __jsx(IframeDemo, {\n    sourceCode: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/LivePreviewDemo/LivePreviewDemo.tsx"],"names":["React","useRef","useState","BasicEditorLazy","FolderStructure","uuid","IframeDemo","LivePreviewDemo","code","language","codeRef","value","setValue","defaultFile","key","name","content","folderStructure","folders","files","onEditorChange","e","forEach","file"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAeA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAzB,EAAqD;AAClE,QAAMC,OAAO,GAAGT,MAAM,CAAC,IAAD,CAAtB;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAACM,IAAD,CAAlC;AAEA,QAAMK,WAAwB,GAAG;AAC/BC,IAAAA,GAAG,EAAET,IAAI,EADsB;AAE/BU,IAAAA,IAAI,EAAG,QAAON,QAAS,EAFQ;AAG/BO,IAAAA,OAAO,EAAER;AAHsB,GAAjC;AAMA,QAAMS,eAAe,GAAG,IAAIb,eAAJ,CAAoB;AAAEc,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,KAAK,EAAE,CAACN,WAAD;AAAtB,GAApB,CAAxB;;AAEA,QAAMO,cAAc,GAAIC,CAAD,IAAO;AAC5B,UAAML,OAAO,GAAGK,CAAC,CAACF,KAAF,CAAQG,OAAR,CAAiBC,IAAD,IAAUA,IAAI,CAACP,OAA/B,CAAhB;AAEAJ,IAAAA,QAAQ,CAACI,OAAD,CAAR;AACD,GAJD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,GAAG,EAAEN,OAAtB;AAA+B,IAAA,eAAe,EAAEO,eAAhD;AAAiE,IAAA,QAAQ,EAAEG,cAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AAAY,IAAA,UAAU,EAAET,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport BasicEditorLazy from '../Editor/BasicEditor/BasicEditor.lazy';\r\nimport FolderStructure from '~/services/utils/FolderStructure';\r\nimport { uuid } from '~/services/Utils';\r\nimport IframeDemo from './IframeDemo';\r\n\r\ninterface Props {\r\n  code: string,\r\n  language: Language,\r\n}\r\n\r\ninterface FilePreview {\r\n  key: string;\r\n  name: string;\r\n  content: string;\r\n}\r\n\r\ntype Language = 'html' | 'css' | 'json' | 'javascript';\r\n\r\nexport default function LivePreviewDemo({ code, language } : Props) {\r\n  const codeRef = useRef(null);\r\n  const [value, setValue] = useState(code);\r\n\r\n  const defaultFile: FilePreview = {\r\n    key: uuid(),\r\n    name: `demo.${language}`,\r\n    content: code,\r\n  };\r\n\r\n  const folderStructure = new FolderStructure({ folders: [], files: [defaultFile] });\r\n\r\n  const onEditorChange = (e) => {\r\n    const content = e.files.forEach((file) => file.content);\r\n\r\n    setValue(content);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BasicEditorLazy ref={codeRef} folderStructure={folderStructure} onChange={onEditorChange} />\r\n      <IframeDemo sourceCode={value} />\r\n    </div>\r\n\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}