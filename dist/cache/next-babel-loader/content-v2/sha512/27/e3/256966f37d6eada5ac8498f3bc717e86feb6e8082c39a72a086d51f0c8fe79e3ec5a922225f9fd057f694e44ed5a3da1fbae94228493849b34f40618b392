{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\ExercisesPage\\\\ExercisesPage.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getLessonById } from '~/services/Constants';\nimport ExerciseService from '~/services/Exercise.service';\nimport LessonExerciseService from '~/services/LessonExercise.service';\nimport ExercisePreview from '../ExercisePreview';\nimport PageContainer from '../PageContainer';\nimport Spinner from '../Spinner';\nimport { SUBMISSION_STATUS } from '~/../shared/SharedConstants';\nimport styles from './ExercisesPage.module.scss';\n\nfunction ExercisesPage({\n  user\n}) {\n  const {\n    0: submissions,\n    1: setSubmissions\n  } = useState(undefined);\n  const {\n    0: lessonExercises,\n    1: setLessonExercises\n  } = useState(undefined);\n  const isLoggedIn = !!user.info;\n  useEffect(() => {\n    LessonExerciseService.getAllLessonExercises().then(exercises => setLessonExercises(exercises)).catch(err => console.error(err));\n\n    if (isLoggedIn) {\n      ExerciseService.getSolvedExercises().then(resp => setSubmissions(resp)).catch(err => console.error(err));\n    } else {\n      setSubmissions([]);\n    }\n  }, []); // merge submission & exercise data to show\n  // ExercisePreview component together with submitted/preview data\n\n  const mergedData = {};\n\n  if (submissions && lessonExercises) {\n    lessonExercises.forEach(ex => {\n      const {\n        lesson\n      } = ex;\n      const matchedSubmission = submissions.find(sub => sub.exercise._id === ex._id);\n      mergedData[lesson] = mergedData[lesson] || [];\n\n      if (matchedSubmission) {\n        mergedData[lesson].push(matchedSubmission);\n      } else {\n        mergedData[lesson].push({\n          _id: ex._id,\n          exercise: ex,\n          feedbacks: [],\n          status: null,\n          readOnly: false\n        });\n      }\n    });\n  }\n\n  return __jsx(PageContainer, {\n    className: styles['exercises-page'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \" Exerci\\u021Bii \"), __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"#\"), \"De ce e important s\\u0103 rezolvi exerci\\u021Biile de pe platform\\u0103?\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Noi suntem convin\\u0219i c\\u0103:\"), __jsx(\"blockquote\", {\n    className: styles['is--center'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Nu conteaz\\u0103 la c\\xE2te tutoriale te ui\\u021Bi, ci c\\xE2t de mult codezi.\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Pentru ca tot procesul s\\u0103 fie unul cu adev\\u0103rat util, dup\\u0103 ce parcurgi lec\\u021Biile de pe platform\\u0103, noi, developeri cu experien\\u021B\\u0103 \\xEE\\u021Bi vom oferi\", ' ', __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"feedback\"), ' ', \"\\u0219i suport. Asta pentru c\\u0103 vrem s\\u0103 ajut\\u0103m c\\xE2t mai mult\\u0103 lume s\\u0103 \\xEEnve\\u021Be despre acest domeniu pe care \\xEEl consider\\u0103m unul dintre cele mai faine \\u0219i nu vom pune pre\\u021B pe aceast\\u0103 experien\\u021B\\u0103. \\u0218i noi am fost la \\xEEnceput \\xEEn drumul nostru \\u0219i \\u0219tim c\\xE2t de greu este de unul singur. A\\u0219a c\\u0103 tot ce se \\xEEnt\\xE2mpl\\u0103 aici e un\", ' ', __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"efort de comunitate, pentru comunitate\"), \".\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Trebuie s\\u0103 \\u0219tii c\\u0103 acesta este un proces de durat\\u0103, ne a\\u0219tept\\u0103m s\\u0103 fie mai multe runde de feedback p\\xE2n\\u0103 s\\u0103 ajungem la rezultatul dorit. De aceea, te rug\\u0103m s\\u0103 ai r\\u0103bdare \\u0219i \\xEEncredere pe tot parcursul t\\u0103u. Nimeni nu le-a \\u0219tiut pe toate din prima. Cu c\\xE2t vei coda mai mult, cu at\\xE2t vei deveni mai bun.\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Po\\u021Bi afla mai multe detalii despre scopul platformei\", __jsx(\"a\", {\n    href: \"https://frontend.ro/intro/despre-noi#introducere\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"aici\"))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"Rezolv\\u0103 exerci\\u021Biile de mai jos iar noi \\xEE\\u021Bi vom trimite feedback pentru fiecare.\"), (!lessonExercises || !submissions) && __jsx(Spinner, {\n    showText: true,\n    text: \"\\xCEnc\\u0103rc\\u0103m exerci\\u021Biile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), Object.keys(mergedData).map(lesson => __jsx(\"section\", {\n    className: styles['lesson-section'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, getLessonById(lesson).type), getLessonById(lesson).title), __jsx(\"div\", {\n    className: styles['exercises-wrapper'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, mergedData[lesson].map(submission => __jsx(ExercisePreview, {\n    key: submission._id,\n    exercise: submission.exercise,\n    href: `rezolva/${submission.exercise._id}`,\n    viewMode: \"STUDENT\",\n    feedbackCount: submission.feedbacks.filter(f => f.type === 'improvement').length,\n    isApproved: submission.status === SUBMISSION_STATUS.DONE,\n    readOnly: [SUBMISSION_STATUS.AWAITING_REVIEW, SUBMISSION_STATUS.DONE].includes(submission.status),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nconst connector = connect(mapStateToProps);\nexport default connector(ExercisesPage);","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/ExercisesPage/ExercisesPage.tsx"],"names":["React","useEffect","useState","connect","getLessonById","ExerciseService","LessonExerciseService","ExercisePreview","PageContainer","Spinner","SUBMISSION_STATUS","styles","ExercisesPage","user","submissions","setSubmissions","undefined","lessonExercises","setLessonExercises","isLoggedIn","info","getAllLessonExercises","then","exercises","catch","err","console","error","getSolvedExercises","resp","mergedData","forEach","ex","lesson","matchedSubmission","find","sub","exercise","_id","push","feedbacks","status","readOnly","Object","keys","map","type","title","submission","filter","f","length","DONE","AWAITING_REVIEW","includes","mapStateToProps","state","connector"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { Submission } from '~/redux/exercise-submissions/types';\r\nimport { Exercise } from '~/redux/user/types';\r\nimport { getLessonById } from '~/services/Constants';\r\nimport ExerciseService from '~/services/Exercise.service';\r\nimport LessonExerciseService from '~/services/LessonExercise.service';\r\nimport ExercisePreview from '../ExercisePreview';\r\nimport PageContainer from '../PageContainer';\r\nimport Spinner from '../Spinner';\r\nimport { SUBMISSION_STATUS } from '~/../shared/SharedConstants';\r\nimport { RootState } from '~/redux/root.reducer';\r\n\r\nimport styles from './ExercisesPage.module.scss';\r\n\r\nfunction ExercisesPage({ user }: ConnectedProps<typeof connector>) {\r\n  const [submissions, setSubmissions] = useState<Submission[]>(undefined);\r\n  const [lessonExercises, setLessonExercises] = useState<Exercise[]>(undefined);\r\n\r\n  const isLoggedIn = !!user.info;\r\n\r\n  useEffect(() => {\r\n    LessonExerciseService.getAllLessonExercises()\r\n      .then((exercises) => setLessonExercises(exercises))\r\n      .catch((err) => console.error(err));\r\n\r\n    if (isLoggedIn) {\r\n      ExerciseService.getSolvedExercises()\r\n        .then((resp) => setSubmissions(resp))\r\n        .catch((err) => console.error(err));\r\n    } else {\r\n      setSubmissions([]);\r\n    }\r\n  }, []);\r\n\r\n  // merge submission & exercise data to show\r\n  // ExercisePreview component together with submitted/preview data\r\n  const mergedData = {};\r\n  if (submissions && lessonExercises) {\r\n    lessonExercises.forEach((ex) => {\r\n      const { lesson } = ex;\r\n      const matchedSubmission = submissions.find(\r\n        (sub) => sub.exercise._id === ex._id,\r\n      );\r\n\r\n      mergedData[lesson] = mergedData[lesson] || [];\r\n      if (matchedSubmission) {\r\n        mergedData[lesson].push(matchedSubmission);\r\n      } else {\r\n        mergedData[lesson].push({\r\n          _id: ex._id,\r\n          exercise: ex,\r\n          feedbacks: [],\r\n          status: null,\r\n          readOnly: false,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PageContainer className={styles['exercises-page']}>\r\n      <h1> Exerciții </h1>\r\n      <section>\r\n        <h2>\r\n          <span>#</span>\r\n          De ce e important să rezolvi exercițiile de pe platformă?\r\n        </h2>\r\n        <p>Noi suntem convinși că:</p>\r\n        <blockquote className={styles['is--center']}>\r\n          Nu contează la câte tutoriale te uiți, ci cât de mult codezi.\r\n        </blockquote>\r\n        <p>\r\n          Pentru ca tot procesul să fie unul cu adevărat util, după ce parcurgi\r\n          lecțiile de pe platformă, noi, developeri cu experiență îți vom oferi\r\n          {' '}\r\n          <strong>feedback</strong>\r\n          {' '}\r\n          și suport. Asta pentru că vrem să ajutăm cât\r\n          mai multă lume să învețe despre acest domeniu pe care îl considerăm\r\n          unul dintre cele mai faine și nu vom pune preț pe această experiență. Și\r\n          noi am fost la început în drumul nostru și știm cât de greu este de\r\n          unul singur. Așa că tot ce se întâmplă aici e un\r\n          {' '}\r\n          <strong>\r\n            efort de comunitate,\r\n            pentru comunitate\r\n          </strong>\r\n          .\r\n        </p>\r\n        <p>\r\n          Trebuie să știi că acesta este un proces de durată, ne așteptăm să fie\r\n          mai multe runde de feedback până să ajungem la rezultatul dorit. De\r\n          aceea, te rugăm să ai răbdare și încredere pe tot parcursul tău.\r\n          Nimeni nu le-a știut pe toate din prima. Cu cât vei coda mai mult, cu\r\n          atât vei deveni mai bun.\r\n        </p>\r\n        <p>\r\n          Poți afla mai multe detalii despre scopul platformei\r\n          <a href=\"https://frontend.ro/intro/despre-noi#introducere\">aici</a>\r\n        </p>\r\n      </section>\r\n      <p>\r\n        Rezolvă exercițiile de mai jos iar noi îți vom trimite feedback pentru\r\n        fiecare.\r\n      </p>\r\n      {(!lessonExercises || !submissions) && (\r\n        <Spinner showText text=\"Încărcăm exercițiile\" />\r\n      )}\r\n      {Object.keys(mergedData).map((lesson) => (\r\n        <section className={styles['lesson-section']}>\r\n          <h2>\r\n            <span>{getLessonById(lesson).type}</span>\r\n            {getLessonById(lesson).title}\r\n          </h2>\r\n          <div className={styles['exercises-wrapper']}>\r\n            {mergedData[lesson].map((submission) => (\r\n              <ExercisePreview\r\n                key={submission._id}\r\n                exercise={submission.exercise}\r\n                href={`rezolva/${submission.exercise._id}`}\r\n                viewMode=\"STUDENT\"\r\n                feedbackCount={\r\n                  submission.feedbacks.filter((f) => f.type === 'improvement')\r\n                    .length\r\n                }\r\n                isApproved={submission.status === SUBMISSION_STATUS.DONE}\r\n                readOnly={[\r\n                  SUBMISSION_STATUS.AWAITING_REVIEW,\r\n                  SUBMISSION_STATUS.DONE,\r\n                ].includes(submission.status)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </section>\r\n      ))}\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(ExercisesPage);\r\n"]},"metadata":{},"sourceType":"module"}