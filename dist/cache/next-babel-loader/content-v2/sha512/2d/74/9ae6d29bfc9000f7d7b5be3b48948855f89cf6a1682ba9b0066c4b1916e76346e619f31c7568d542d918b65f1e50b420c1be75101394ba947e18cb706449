{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { uuid } from '~/services/Utils';\nimport HttpService from './Http.service';\nvar MOCK_NOTIFICATIONS = [{\n  _id: uuid(),\n  username: 'Diana123',\n  name: 'Diana',\n  avatar: 'https://www.gravatar.com/avatar/9d4d790eb85e56d6524faed8a883d6cb?s=500&d=404',\n  message: 'added a new exercise',\n  timestamp: Date.now(),\n  isUnread: true,\n  url: '/'\n}, {\n  _id: uuid(),\n  username: 'AlexPava',\n  name: 'Alex',\n  avatar: 'https://joeschmoe.io/api/v1/josh',\n  message: 'sent you a message',\n  timestamp: Date.now(),\n  isUnread: true,\n  url: ''\n}, {\n  _id: uuid(),\n  username: 'Andrei82',\n  name: 'Andrei',\n  avatar: 'https://joeschmoe.io/api/v1/jon',\n  message: 'added a new exercise',\n  timestamp: Date.now(),\n  isUnread: true,\n  url: ''\n}, {\n  _id: uuid(),\n  username: 'AntoniaBebe',\n  name: 'Antonia',\n  avatar: 'https://joeschmoe.io/api/v1/jess',\n  message: 'sent you a message',\n  timestamp: Date.now(),\n  isUnread: true,\n  url: ''\n}, {\n  _id: uuid(),\n  username: 'Raluca99',\n  name: 'Raluca',\n  avatar: 'https://joeschmoe.io/api/v1/jane',\n  message: 'added a new topic',\n  timestamp: Date.now(),\n  isUnread: true,\n  url: ''\n}];\nvar LOAD_DURATION = 1000;\n\nvar UserService = /*#__PURE__*/function () {\n  function UserService() {\n    _classCallCheck(this, UserService);\n  }\n\n  _createClass(UserService, null, [{\n    key: \"ping\",\n    value: function ping() {\n      return HttpService.get(\"\".concat(process.env.ENDPOINT, \"/auth/ping\")).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(_ref) {\n      var name = _ref.name,\n          email = _ref.email;\n      return HttpService.post(\"\".concat(process.env.ENDPOINT, \"/auth/subscribe\"), {\n        name: name,\n        email: email\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"login\",\n    value: function login(_ref2) {\n      var emailOrUsername = _ref2.emailOrUsername,\n          password = _ref2.password;\n      return HttpService.post(\"\".concat(process.env.ENDPOINT, \"/auth/login\"), {\n        emailOrUsername: emailOrUsername,\n        password: password\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      return HttpService.post(\"\".concat(process.env.ENDPOINT, \"/auth/logout\"));\n    }\n  }, {\n    key: \"checkUsername\",\n    value: function checkUsername(username) {\n      return HttpService.get(\"\".concat(process.env.ENDPOINT, \"/auth/check-username/\").concat(username));\n    }\n  }, {\n    key: \"register\",\n    value: function register(_ref3) {\n      var email = _ref3.email,\n          username = _ref3.username,\n          password = _ref3.password;\n      return HttpService.post(\"\".concat(process.env.ENDPOINT, \"/auth/register\"), {\n        email: email,\n        username: username,\n        password: password\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"updateName\",\n    value: function updateName(payload) {\n      return HttpService.post(\"\".concat(process.env.ENDPOINT, \"/auth/name\"), payload).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"updateDescription\",\n    value: function updateDescription(payload) {\n      return HttpService.post(\"\".concat(process.env.ENDPOINT, \"/auth/description\"), payload).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"updateUsername\",\n    value: function updateUsername(payload) {\n      return HttpService.post(\"\".concat(process.env.ENDPOINT, \"/auth/username\"), payload).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"updateEmail\",\n    value: function updateEmail(payload) {\n      return HttpService.post(\"\".concat(process.env.ENDPOINT, \"/auth/email\"), payload).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(payload) {\n      return HttpService.post(\"\".concat(process.env.ENDPOINT, \"/auth/password\"), payload).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"uploadAvatar\",\n    value: function uploadAvatar(file) {\n      var formData = new FormData();\n      formData.append('file', file);\n      return HttpService.post(\"\".concat(process.env.ENDPOINT, \"/auth/avatar\"), formData).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(password) {\n      return HttpService[\"delete\"](\"\".concat(process.env.ENDPOINT, \"/auth\"), {\n        password: password\n      });\n    }\n  }, {\n    key: \"wait\",\n    value: function wait(mili) {\n      return new Promise(function (resolve) {\n        return setTimeout(resolve, mili);\n      });\n    }\n  }, {\n    key: \"getNotifications\",\n    value: function () {\n      var _getNotifications = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var page,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 0;\n                _context.next = 3;\n                return UserService.wait(LOAD_DURATION);\n\n              case 3:\n                return _context.abrupt(\"return\", MOCK_NOTIFICATIONS);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getNotifications() {\n        return _getNotifications.apply(this, arguments);\n      }\n\n      return getNotifications;\n    }()\n  }, {\n    key: \"markAsRead\",\n    value: function () {\n      var _markAsRead = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return UserService.wait(LOAD_DURATION);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function markAsRead(_x) {\n        return _markAsRead.apply(this, arguments);\n      }\n\n      return markAsRead;\n    }()\n  }, {\n    key: \"markAllAsRead\",\n    value: function () {\n      var _markAllAsRead = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return UserService.wait(LOAD_DURATION);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function markAllAsRead() {\n        return _markAllAsRead.apply(this, arguments);\n      }\n\n      return markAllAsRead;\n    }()\n  }]);\n\n  return UserService;\n}();\n\nexport default UserService;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/services/User.service.ts"],"names":["uuid","HttpService","MOCK_NOTIFICATIONS","_id","username","name","avatar","message","timestamp","Date","now","isUnread","url","LOAD_DURATION","UserService","get","process","env","ENDPOINT","then","resp","json","email","post","emailOrUsername","password","payload","file","formData","FormData","append","mili","Promise","resolve","setTimeout","page","wait","id"],"mappings":"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","sourcesContent":["import { uuid } from '~/services/Utils';\r\nimport { Notification } from '../redux/user/types';\r\nimport HttpService from './Http.service';\r\n\r\nconst MOCK_NOTIFICATIONS: Notification[] = [\r\n  {\r\n    _id: uuid(),\r\n    username: 'Diana123',\r\n    name: 'Diana',\r\n    avatar:\r\n      'https://www.gravatar.com/avatar/9d4d790eb85e56d6524faed8a883d6cb?s=500&d=404',\r\n    message: 'added a new exercise',\r\n    timestamp: Date.now(),\r\n    isUnread: true,\r\n    url: '/',\r\n  },\r\n  {\r\n    _id: uuid(),\r\n    username: 'AlexPava',\r\n    name: 'Alex',\r\n    avatar: 'https://joeschmoe.io/api/v1/josh',\r\n    message: 'sent you a message',\r\n    timestamp: Date.now(),\r\n    isUnread: true,\r\n    url: '',\r\n  },\r\n  {\r\n    _id: uuid(),\r\n    username: 'Andrei82',\r\n    name: 'Andrei',\r\n    avatar: 'https://joeschmoe.io/api/v1/jon',\r\n    message: 'added a new exercise',\r\n    timestamp: Date.now(),\r\n    isUnread: true,\r\n    url: '',\r\n  },\r\n  {\r\n    _id: uuid(),\r\n    username: 'AntoniaBebe',\r\n    name: 'Antonia',\r\n    avatar: 'https://joeschmoe.io/api/v1/jess',\r\n    message: 'sent you a message',\r\n    timestamp: Date.now(),\r\n    isUnread: true,\r\n    url: '',\r\n  },\r\n  {\r\n    _id: uuid(),\r\n    username: 'Raluca99',\r\n    name: 'Raluca',\r\n    avatar: 'https://joeschmoe.io/api/v1/jane',\r\n    message: 'added a new topic',\r\n    timestamp: Date.now(),\r\n    isUnread: true,\r\n    url: '',\r\n  },\r\n];\r\n\r\nconst LOAD_DURATION = 1000;\r\n\r\nclass UserService {\r\n  static ping() {\r\n    return HttpService.get(`${process.env.ENDPOINT}/auth/ping`).then((resp) => resp.json());\r\n  }\r\n\r\n  static subscribe({ name, email }) {\r\n    return HttpService.post(`${process.env.ENDPOINT}/auth/subscribe`, {\r\n      name,\r\n      email,\r\n    }).then((resp) => resp.json());\r\n  }\r\n\r\n  static login({\r\n    emailOrUsername,\r\n    password,\r\n  }: {\r\n    emailOrUsername: string;\r\n    password: string;\r\n  }) {\r\n    return HttpService.post(`${process.env.ENDPOINT}/auth/login`, {\r\n      emailOrUsername,\r\n      password,\r\n    }).then((resp) => resp.json());\r\n  }\r\n\r\n  static logout() {\r\n    return HttpService.post(`${process.env.ENDPOINT}/auth/logout`);\r\n  }\r\n\r\n  static checkUsername(username: string) {\r\n    return HttpService.get(\r\n      `${process.env.ENDPOINT}/auth/check-username/${username}`,\r\n    );\r\n  }\r\n\r\n  static register({\r\n    email,\r\n    username,\r\n    password,\r\n  }: {\r\n    email: string;\r\n    username: string;\r\n    password: string;\r\n  }) {\r\n    return HttpService.post(`${process.env.ENDPOINT}/auth/register`, {\r\n      email,\r\n      username,\r\n      password,\r\n    }).then((resp) => resp.json());\r\n  }\r\n\r\n  static updateName(payload: {name: string, password: string}) {\r\n    return HttpService\r\n      .post(`${process.env.ENDPOINT}/auth/name`, payload)\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static updateDescription(payload: {description: string, password: string}) {\r\n    return HttpService\r\n      .post(`${process.env.ENDPOINT}/auth/description`, payload)\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static updateUsername(payload: {username: string, password: string}) {\r\n    return HttpService\r\n      .post(`${process.env.ENDPOINT}/auth/username`, payload)\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static updateEmail(payload: {email: string, password: string}) {\r\n    return HttpService\r\n      .post(`${process.env.ENDPOINT}/auth/email`, payload)\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static updatePassword(payload: {newPassword: string, password: string}) {\r\n    return HttpService\r\n      .post(`${process.env.ENDPOINT}/auth/password`, payload)\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static uploadAvatar(file: Blob): Promise<any> {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    return HttpService\r\n      .post(`${process.env.ENDPOINT}/auth/avatar`, formData)\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static delete(password: string) {\r\n    return HttpService\r\n      .delete(`${process.env.ENDPOINT}/auth`, { password });\r\n  }\r\n\r\n  static wait(mili) {\r\n    return new Promise((resolve) => setTimeout(resolve, mili));\r\n  }\r\n\r\n  static async getNotifications(page = 0) {\r\n    await UserService.wait(LOAD_DURATION);\r\n    return MOCK_NOTIFICATIONS;\r\n  }\r\n\r\n  static async markAsRead(id) {\r\n    await UserService.wait(LOAD_DURATION);\r\n  }\r\n\r\n  static async markAllAsRead() {\r\n    await UserService.wait(LOAD_DURATION);\r\n  }\r\n}\r\n\r\nexport default UserService;\r\n"]},"metadata":{},"sourceType":"module"}