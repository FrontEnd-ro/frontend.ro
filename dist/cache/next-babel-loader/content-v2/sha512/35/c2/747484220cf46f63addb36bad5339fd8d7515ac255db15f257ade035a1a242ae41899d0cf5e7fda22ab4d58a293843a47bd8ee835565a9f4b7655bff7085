{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\event\\\\WaitListConfirmation\\\\WaitListConfirmation.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Button from '~/components/Button';\nimport EventService from '~/services/api/Event.service';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport styles from './WaitListConfirmation.module.scss';\n\nfunction WaitListConfirmation({\n  id,\n  userData\n}) {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n\n  const addToWaitlist = async () => {\n    setIsLoading(true);\n\n    try {\n      await EventService.addToWaitlist(id, userData);\n      SweetAlertService.toast({\n        type: 'success',\n        text: 'Te-am adăugat pe lista de așteptare, te vom contacta în curând!'\n      });\n    } catch (err) {\n      SweetAlertService.toast({\n        type: 'error',\n        text: err.message || 'Ne pare rău! Nu am putut să te adăugam pe lista de așteptare. Te rugăm să mai încerci o dată.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: `${styles['waitlist-confirmation']}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Ne pare r\\u0103u, dar locurile la acest eveniment s-au ocupat.\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"E posibil ca unii participan\\u021Bi s\\u0103 se retrag\\u0103, deci dac\\u0103 vrei, te putem pune pe o list\\u0103 de a\\u0219teptare.\"), __jsx(\"div\", {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    variant: \"light\",\n    onClick: SweetAlertService.closePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Nu, m-am r\\u0103zg\\xE2ndit\"), __jsx(Button, {\n    variant: \"blue\",\n    className: `mb-2 ${isLoading ? 'btn--loading' : ''}`,\n    disabled: isLoading,\n    onClick: addToWaitlist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Adaug\\u0103-m\\u0103 pe list\\u0103\")));\n}\n\nexport default WaitListConfirmation;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/event/WaitListConfirmation/WaitListConfirmation.tsx"],"names":["React","useState","Button","EventService","SweetAlertService","styles","WaitListConfirmation","id","userData","isLoading","setIsLoading","addToWaitlist","toast","type","text","err","message","closePopup"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;AAEA,OAAOC,MAAP,MAAmB,oCAAnB;;AAWA,SAASC,oBAAT,CAA8B;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAA9B,EAAuD;AACrD,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMU,aAAa,GAAG,YAAY;AAChCD,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACF,YAAMP,YAAY,CAACQ,aAAb,CAA2BJ,EAA3B,EAA+BC,QAA/B,CAAN;AACAJ,MAAAA,iBAAiB,CAACQ,KAAlB,CAAwB;AACtBC,QAAAA,IAAI,EAAE,SADgB;AAEtBC,QAAAA,IAAI,EAAE;AAFgB,OAAxB;AAID,KAND,CAME,OAAOC,GAAP,EAAY;AACZX,MAAAA,iBAAiB,CAACQ,KAAlB,CAAwB;AACtBC,QAAAA,IAAI,EAAE,OADgB;AAEtBC,QAAAA,IAAI,EAAEC,GAAG,CAACC,OAAJ,IAAe;AAFC,OAAxB;AAID,KAXD,SAWU;AACRN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAjBD;;AAmBA,SACE;AAAK,IAAA,SAAS,EAAG,GAAEL,MAAM,CAAC,uBAAD,CAA0B,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0IAFF,EAME;AAAK,IAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,OAAO,EAAED,iBAAiB,CAACa,UAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAOE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,SAAS,EAAG,QAAOR,SAAS,GAAG,cAAH,GAAoB,EAAG,EAFrD;AAGE,IAAA,QAAQ,EAAEA,SAHZ;AAIE,IAAA,OAAO,EAAEE,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAPF,CANF,CADF;AAyBD;;AAED,eAAeL,oBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '~/components/Button';\r\nimport EventService from '~/services/api/Event.service';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\n\r\nimport styles from './WaitListConfirmation.module.scss';\r\n\r\ninterface Props {\r\n  id: string;\r\n  userData: {\r\n    name: string;\r\n    tel: string;\r\n    email: string;\r\n  }\r\n}\r\n\r\nfunction WaitListConfirmation({ id, userData }: Props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const addToWaitlist = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await EventService.addToWaitlist(id, userData);\r\n      SweetAlertService.toast({\r\n        type: 'success',\r\n        text: 'Te-am adăugat pe lista de așteptare, te vom contacta în curând!',\r\n      });\r\n    } catch (err) {\r\n      SweetAlertService.toast({\r\n        type: 'error',\r\n        text: err.message || 'Ne pare rău! Nu am putut să te adăugam pe lista de așteptare. Te rugăm să mai încerci o dată.',\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles['waitlist-confirmation']}`}>\r\n      <p>Ne pare rău, dar locurile la acest eveniment s-au ocupat.</p>\r\n      <p>\r\n        E posibil ca unii participanți să se retragă, deci dacă vrei, te putem\r\n        pune pe o listă de așteptare.\r\n      </p>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <Button\r\n          variant=\"light\"\r\n          onClick={SweetAlertService.closePopup as any}\r\n        >\r\n          Nu, m-am răzgândit\r\n        </Button>\r\n        <Button\r\n          variant=\"blue\"\r\n          className={`mb-2 ${isLoading ? 'btn--loading' : ''}`}\r\n          disabled={isLoading}\r\n          onClick={addToWaitlist}\r\n        >\r\n          Adaugă-mă pe listă\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WaitListConfirmation;\r\n"]},"metadata":{},"sourceType":"module"}