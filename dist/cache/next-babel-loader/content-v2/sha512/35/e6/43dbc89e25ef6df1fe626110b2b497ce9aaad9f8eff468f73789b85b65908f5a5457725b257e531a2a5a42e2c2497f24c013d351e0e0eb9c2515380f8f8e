{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\create-view-edit-exercise\\\\NewExercise.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport Form from '../Form';\nimport Login from '../login';\nimport Button from '../Button';\nimport MarkdownTextarea from '../MarkdownTextarea';\nimport PrivacyControls from './PrivacyControls/PrivacyControls';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport svgCover from './dev-focus.svg';\nimport styles from './NewExercise.module.scss';\nimport ExerciseService from '~/services/Exercise.service';\nimport ChapterControls from './ChapterControls/ChapterControls';\nimport LessonSelect from './LessonSelect/LessonSelect';\nimport BasicEditorLazy from '../Editor/BasicEditor/BasicEditor.lazy';\nimport { uploadFiles, uploadMedia } from '.';\n\nfunction NewExercise({\n  user\n}) {\n  const router = useRouter();\n  const markdownWrapper = useRef(null);\n  const exampleRef = useRef(null);\n  const solutionRef = useRef(null);\n  const {\n    0: body,\n    1: setBody\n  } = useState('');\n  const {\n    0: bodyError,\n    1: setBodyError\n  } = useState(false);\n  const {\n    0: solutionError,\n    1: setSolutionError\n  } = useState(false);\n  const {\n    0: showExampleEditor,\n    1: setShowExampleEditor\n  } = useState(false);\n  const {\n    0: showSolutionEditor,\n    1: setShowSolutionEditor\n  } = useState(false);\n  const {\n    0: isPrivate,\n    1: setIsPrivate\n  } = useState(false);\n  const {\n    0: isCreating,\n    1: setIsCreating\n  } = useState(false);\n  const {\n    0: suggestion,\n    1: setSuggestion\n  } = useState(null);\n  const filesToUpload = useRef({});\n\n  const onMarkdownInput = text => {\n    setBody(text);\n    setBodyError(false);\n  };\n\n  const updateMarkdownWithUploadedFiles = (newMarkdown, newFiles) => {\n    setBody(newMarkdown);\n    Object.keys(newFiles).forEach(fileId => {\n      filesToUpload.current[fileId] = newFiles[fileId];\n    });\n  };\n\n  const onSubmit = formData => {\n    if (user.info) {\n      createExercise(formData, user.info);\n    } else {\n      SweetAlertService.content(Login, 'Autentifică-te', {\n        onSuccess(userInfo) {\n          SweetAlertService.closePopup();\n          createExercise(formData, userInfo);\n        }\n\n      });\n    }\n  };\n\n  const createExercise = async (formData, userInfo) => {\n    if (!validateRequiredData()) {\n      return;\n    }\n\n    let newBody = body;\n    setIsCreating(true);\n\n    try {\n      const uploadInfo = await uploadMedia(body, filesToUpload.current);\n      newBody = replaceMarkdownWithUploads(uploadInfo);\n    } catch (err) {\n      SweetAlertService.toast({\n        type: 'error',\n        text: err.message || 'Fișierul nu a putut fi încărcat. Încearcă din nou!'\n      });\n      return;\n    }\n\n    try {\n      await ExerciseService.createExercise({\n        suggestion,\n        body: newBody,\n        type: formData.type,\n        private: formData.private === 'true',\n        example: exampleRef.current ? exampleRef.current.getFolderStructure() : null,\n        solution: solutionRef.current ? solutionRef.current.getFolderStructure() : null\n      });\n      SweetAlertService.toast({\n        type: 'success',\n        text: 'Exercițiul a fost creat cu succes!'\n      });\n      router.push(`/${userInfo.username}`);\n    } catch (err) {\n      SweetAlertService.toast({\n        text: (err === null || err === void 0 ? void 0 : err.message) || 'Oops! Nu am putut crea exercițiul',\n        type: 'error'\n      });\n    } finally {\n      setIsCreating(false);\n    }\n  };\n\n  const validateRequiredData = () => {\n    let isValid = true;\n\n    if (!body) {\n      setBodyError(true);\n      markdownWrapper.current.scrollIntoView();\n      isValid = false;\n    }\n\n    if (!solutionRef.current) {\n      setSolutionError(true);\n      isValid = false;\n    } else {\n      let folderStructure = solutionRef.current.getFolderStructure();\n\n      if (!folderStructure) {\n        setSolutionError(true);\n        isValid = false;\n      }\n    }\n\n    return isValid;\n  };\n\n  const replaceMarkdownWithUploads = uploadedInfo => {\n    let newBody = body;\n    Object.keys(filesToUpload.current).forEach(id => {\n      const uploadInfo = uploadedInfo.find(info => info.name === id);\n\n      if (!uploadInfo) {\n        newBody = newBody.replaceAll(filesToUpload.current[id].markdownToReplace, '');\n      } else {\n        newBody = newBody.replaceAll(filesToUpload.current[id].markdownToReplace, `![${uploadInfo.name}](${uploadInfo.url})`);\n      }\n    });\n    setBody(newBody);\n    return newBody;\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: `${styles.cta} relative`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \" Creeaz\\u0103 un nou exerci\\u021Biu\"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, \"\\xCEl po\\u021Bi folosi \\xEEn propriile traininguri sau,\", ' ', __jsx(\"strong\", {\n    className: \"text-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, \"dac\\u0103 vrei s\\u0103 contribui la acest proiect\"), \", sugereaz\\u0103 acest exerci\\u021Biu pentru una dintre lec\\u021Biile noastre.\")), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: svgCover\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    className: styles['new-exercise'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    withStyles: false,\n    onSubmit: onSubmit,\n    className: \"relative\",\n    id: \"createForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    ref: markdownWrapper,\n    className: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, __jsx(MarkdownTextarea, {\n    title: \"Descrie exerci\\u021Biul\",\n    markdown: body,\n    onUpload: (files, cursorPosition) => uploadFiles(files, cursorPosition, body, updateMarkdownWithUploadedFiles),\n    onInput: onMarkdownInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }), bodyError && __jsx(\"p\", {\n    className: `${styles['error-message']} text-right text-bold absolute`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 27\n    }\n  }, \" Nu po\\u021Bi crea un exerci\\u021Biu f\\u0103r\\u0103 descriere \\uD83D\\uDC46\"))), __jsx(\"div\", {\n    className: styles['example-wrapper'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, showExampleEditor ? __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }, \" Cod de \\xEEnceput \"), __jsx(BasicEditorLazy, {\n    ref: exampleRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  })) : __jsx(Button, {\n    variant: \"light\",\n    onClick: () => setShowExampleEditor(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, \"Adaug\\u0103 cod de \\xEEnceput\")), __jsx(\"div\", {\n    className: `${styles['example-wrapper']} relative`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, showSolutionEditor ? __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }, \" Solu\\u021Bie\"), __jsx(BasicEditorLazy, {\n    ref: solutionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 19\n    }\n  }), solutionError && __jsx(\"p\", {\n    className: `${styles['error-message']} absolute text-right text-bold`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, \"Nu po\\u021Bi crea un exerci\\u021Biu f\\u0103r\\u0103 solu\\u021Bie \\uD83D\\uDC46\")) : __jsx(\"button\", {\n    type: \"button\",\n    className: `btn ${solutionError ? 'btn--danger' : 'btn--light'}`,\n    onClick: () => setShowSolutionEditor(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"Adaug\\u0103 solu\\u021Bia exerci\\u021Biului\")), __jsx(ChapterControls, {\n    form: \"createForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }), __jsx(PrivacyControls, {\n    form: \"createForm\",\n    isPrivate: isPrivate,\n    onPrivacyChange: setIsPrivate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }), __jsx(\"footer\", {\n    className: \"d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, __jsx(LessonSelect, {\n    onChange: value => setSuggestion(value.label),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    form: \"createForm\",\n    type: \"submit\",\n    disabled: isCreating,\n    className: `btn btn--blue ${isCreating ? 'btn--loading' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, \"Creeaz\\u0103\")))));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nconst connector = connect(mapStateToProps);\nexport default connector(NewExercise);","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/create-view-edit-exercise/NewExercise.tsx"],"names":["React","useRef","useState","connect","useRouter","Form","Login","Button","MarkdownTextarea","PrivacyControls","SweetAlertService","svgCover","styles","ExerciseService","ChapterControls","LessonSelect","BasicEditorLazy","uploadFiles","uploadMedia","NewExercise","user","router","markdownWrapper","exampleRef","solutionRef","body","setBody","bodyError","setBodyError","solutionError","setSolutionError","showExampleEditor","setShowExampleEditor","showSolutionEditor","setShowSolutionEditor","isPrivate","setIsPrivate","isCreating","setIsCreating","suggestion","setSuggestion","filesToUpload","onMarkdownInput","text","updateMarkdownWithUploadedFiles","newMarkdown","newFiles","Object","keys","forEach","fileId","current","onSubmit","formData","info","createExercise","content","onSuccess","userInfo","closePopup","validateRequiredData","newBody","uploadInfo","replaceMarkdownWithUploads","err","toast","type","message","private","example","getFolderStructure","solution","push","username","isValid","scrollIntoView","folderStructure","uploadedInfo","id","find","name","replaceAll","markdownToReplace","url","cta","__html","files","cursorPosition","value","label","mapStateToProps","state","connector"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport Form from '../Form';\r\nimport Login from '../login';\r\nimport Button from '../Button';\r\nimport MarkdownTextarea from '../MarkdownTextarea';\r\nimport { RootState } from '~/redux/root.reducer';\r\nimport PrivacyControls from './PrivacyControls/PrivacyControls';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\n\r\nimport svgCover from './dev-focus.svg';\r\nimport styles from './NewExercise.module.scss';\r\nimport ExerciseService from '~/services/Exercise.service';\r\nimport ChapterControls from './ChapterControls/ChapterControls';\r\nimport LessonSelect from './LessonSelect/LessonSelect';\r\nimport BasicEditorLazy from '../Editor/BasicEditor/BasicEditor.lazy';\r\nimport FolderStructure from '~/services/utils/FolderStructure';\r\nimport { ChapterType } from '~/redux/exercise-submissions/types';\r\nimport { UserState } from '~/redux/user/types';\r\nimport {\r\n  MediaUploadResp,\r\n  FileDictionary,\r\n  uploadFiles,\r\n  uploadMedia,\r\n} from '.';\r\n\r\nfunction NewExercise({ user }: ConnectedProps<typeof connector>) {\r\n  const router = useRouter();\r\n\r\n  const markdownWrapper = useRef(null);\r\n  const exampleRef = useRef(null);\r\n  const solutionRef = useRef(null);\r\n\r\n  const [body, setBody] = useState('');\r\n  const [bodyError, setBodyError] = useState(false);\r\n  const [solutionError, setSolutionError] = useState(false);\r\n  const [showExampleEditor, setShowExampleEditor] = useState(false);\r\n  const [showSolutionEditor, setShowSolutionEditor] = useState(false);\r\n  const [isPrivate, setIsPrivate] = useState(false);\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [suggestion, setSuggestion] = useState(null);\r\n\r\n  const filesToUpload = useRef<FileDictionary>({});\r\n\r\n  const onMarkdownInput = (text) => {\r\n    setBody(text);\r\n    setBodyError(false);\r\n  };\r\n\r\n  const updateMarkdownWithUploadedFiles = (newMarkdown, newFiles) => {\r\n    setBody(newMarkdown);\r\n    Object.keys(newFiles).forEach((fileId) => {\r\n      filesToUpload.current[fileId] = newFiles[fileId];\r\n    });\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    if (user.info) {\r\n      createExercise(formData, user.info);\r\n    } else {\r\n      SweetAlertService.content(\r\n        Login,\r\n        'Autentifică-te',\r\n        {\r\n          onSuccess(userInfo: UserState['info']) {\r\n            SweetAlertService.closePopup();\r\n            createExercise(formData, userInfo);\r\n          },\r\n        },\r\n      );\r\n    }\r\n  };\r\n\r\n  const createExercise = async (\r\n    formData: {\r\n      type: ChapterType,\r\n      private: 'true' | 'false'\r\n    },\r\n    userInfo: UserState['info'],\r\n  ) => {\r\n    if (!validateRequiredData()) {\r\n      return;\r\n    }\r\n\r\n    let newBody = body;\r\n    setIsCreating(true);\r\n\r\n    try {\r\n      const uploadInfo = await uploadMedia(body, filesToUpload.current);\r\n      newBody = replaceMarkdownWithUploads(uploadInfo);\r\n    } catch (err) {\r\n      SweetAlertService.toast({\r\n        type: 'error',\r\n        text: err.message || 'Fișierul nu a putut fi încărcat. Încearcă din nou!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await ExerciseService.createExercise({\r\n        suggestion,\r\n        body: newBody,\r\n        type: formData.type,\r\n        private: formData.private === 'true',\r\n        example: exampleRef.current ? exampleRef.current.getFolderStructure() : null,\r\n        solution: solutionRef.current ? solutionRef.current.getFolderStructure() : null,\r\n      });\r\n\r\n      SweetAlertService.toast({\r\n        type: 'success',\r\n        text: 'Exercițiul a fost creat cu succes!',\r\n      });\r\n\r\n      router.push(`/${userInfo.username}`);\r\n    } catch (err) {\r\n      SweetAlertService.toast({\r\n        text: err?.message || 'Oops! Nu am putut crea exercițiul',\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  const validateRequiredData = () => {\r\n    let isValid = true;\r\n\r\n    if (!body) {\r\n      setBodyError(true);\r\n      markdownWrapper.current.scrollIntoView();\r\n      isValid = false;\r\n    }\r\n\r\n    if (!solutionRef.current) {\r\n      setSolutionError(true);\r\n      isValid = false;\r\n    } else {\r\n      let folderStructure: FolderStructure = solutionRef.current.getFolderStructure();\r\n      if (!folderStructure) {\r\n        setSolutionError(true);\r\n        isValid = false;\r\n      }\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const replaceMarkdownWithUploads = (uploadedInfo: MediaUploadResp[]) => {\r\n    let newBody = body;\r\n\r\n    Object.keys(filesToUpload.current).forEach((id) => {\r\n      const uploadInfo = uploadedInfo.find((info) => info.name === id);\r\n\r\n      if (!uploadInfo) {\r\n        newBody = newBody.replaceAll(filesToUpload.current[id].markdownToReplace, '');\r\n      } else {\r\n        newBody = newBody.replaceAll(\r\n          filesToUpload.current[id].markdownToReplace,\r\n          `![${uploadInfo.name}](${uploadInfo.url})`,\r\n        );\r\n      }\r\n    });\r\n\r\n    setBody(newBody);\r\n    return newBody;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section className={`${styles.cta} relative`}>\r\n        <div>\r\n          <h1> Creează un nou exercițiu</h1>\r\n          <h2>\r\n            Îl poți folosi în propriile traininguri sau,\r\n            {' '}\r\n            <strong className=\"text-blue\">dacă vrei să contribui la acest proiect</strong>\r\n            ,\r\n            sugerează acest exercițiu pentru una dintre lecțiile noastre.\r\n          </h2>\r\n        </div>\r\n        {/* eslint-disable-next-line react/no-danger */}\r\n        <div dangerouslySetInnerHTML={{\r\n          __html: svgCover,\r\n        }}\r\n        />\r\n      </section>\r\n      <main className={styles['new-exercise']}>\r\n        <Form withStyles={false} onSubmit={onSubmit} className=\"relative\" id=\"createForm\">\r\n          <div ref={markdownWrapper} className=\"relative\">\r\n            <MarkdownTextarea\r\n              title=\"Descrie exercițiul\"\r\n              markdown={body}\r\n              onUpload={(files, cursorPosition) => uploadFiles(\r\n                files, cursorPosition, body, updateMarkdownWithUploadedFiles,\r\n              )}\r\n              onInput={onMarkdownInput}\r\n            />\r\n            {bodyError && <p className={`${styles['error-message']} text-right text-bold absolute`}> Nu poți crea un exercițiu fără descriere 👆</p>}\r\n          </div>\r\n        </Form>\r\n        <div className={styles['example-wrapper']}>\r\n          {\r\n            showExampleEditor\r\n              ? (\r\n                <>\r\n                  <h3> Cod de început </h3>\r\n                  <BasicEditorLazy ref={exampleRef} />\r\n                </>\r\n              )\r\n              : (\r\n                <Button\r\n                  variant=\"light\"\r\n                  onClick={() => setShowExampleEditor(true)}\r\n                >\r\n                  Adaugă cod de început\r\n                </Button>\r\n              )\r\n          }\r\n        </div>\r\n        <div className={`${styles['example-wrapper']} relative`}>\r\n          {\r\n            showSolutionEditor\r\n              ? (\r\n                <>\r\n                  <h3> Soluție</h3>\r\n                  <BasicEditorLazy ref={solutionRef} />\r\n                  {solutionError && (\r\n                    <p className={`${styles['error-message']} absolute text-right text-bold`}>\r\n                      Nu poți crea un exercițiu fără soluție 👆\r\n                    </p>\r\n                  )}\r\n                </>\r\n              )\r\n              : (\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn ${solutionError ? 'btn--danger' : 'btn--light'}`}\r\n                  onClick={() => setShowSolutionEditor(true)}\r\n                >\r\n                  Adaugă soluția exercițiului\r\n                </button>\r\n              )\r\n          }\r\n        </div>\r\n        <ChapterControls form=\"createForm\" />\r\n        <PrivacyControls form=\"createForm\" isPrivate={isPrivate} onPrivacyChange={setIsPrivate} />\r\n        <footer className=\"d-flex align-items-center justify-content-between\">\r\n          <LessonSelect onChange={(value) => setSuggestion(value.label)} />\r\n          <div>\r\n            <button\r\n              form=\"createForm\"\r\n              type=\"submit\"\r\n              disabled={isCreating}\r\n              className={`btn btn--blue ${isCreating ? 'btn--loading' : ''}`}\r\n            >\r\n              Creează\r\n            </button>\r\n          </div>\r\n        </footer>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(NewExercise);\r\n"]},"metadata":{},"sourceType":"module"}