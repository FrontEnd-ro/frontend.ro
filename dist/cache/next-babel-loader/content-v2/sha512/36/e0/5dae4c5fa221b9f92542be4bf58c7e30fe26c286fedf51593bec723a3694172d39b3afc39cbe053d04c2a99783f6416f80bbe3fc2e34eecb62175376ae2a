{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\create-view-edit-exercise\\\\ViewOrEditExercise.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport FolderStructure from '~/services/utils/FolderStructure';\nimport { uploadFiles, uploadMedia } from '.';\nimport BasicEditorLazy from '../Editor/BasicEditor/BasicEditor.lazy';\nimport Form from '../Form';\nimport MarkdownTextarea from '../MarkdownTextarea';\nimport ChapterControls from './ChapterControls/ChapterControls';\nimport LessonSelect from './LessonSelect/LessonSelect';\nimport styles from './NewExercise.module.scss';\nimport PrivacyControls from './PrivacyControls/PrivacyControls';\nimport viewCover from './the-search.svg';\nimport editCover from './coding.svg';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport ExerciseService from '~/services/Exercise.service';\n\nfunction ViewOrEditExercise(_ref) {\n  _s();\n\n  var exercise = _ref.exercise,\n      userInfo = _ref.userInfo;\n  var isOwnExercise = userInfo && userInfo.username === exercise.user.username;\n  var nameOrUsername = exercise.user.name || exercise.user.username;\n\n  var _useState = useState(exercise.body),\n      body = _useState[0],\n      setBody = _useState[1];\n\n  var _useState2 = useState(exercise.suggestion),\n      suggestion = _useState2[0],\n      setSuggestion = _useState2[1];\n\n  var _useState3 = useState(null),\n      bodyError = _useState3[0],\n      setBodyError = _useState3[1];\n\n  var _useState4 = useState(null),\n      solutionError = _useState4[0],\n      setSolutionError = _useState4[1];\n\n  var filesToUpload = useRef({});\n\n  var _useState5 = useState(exercise[\"private\"]),\n      isPrivate = _useState5[0],\n      setIsPrivate = _useState5[1];\n\n  var _useState6 = useState(false),\n      isEditing = _useState6[0],\n      setIsEditing = _useState6[1];\n\n  var _useState7 = useState(false),\n      isDeleting = _useState7[0],\n      setIsDeleting = _useState7[1];\n\n  var _useState8 = useState(false),\n      showExampleEditor = _useState8[0],\n      setShowExampleEditor = _useState8[1];\n\n  var _useState9 = useState(false),\n      showSolutionEditor = _useState9[0],\n      setShowSolutionEditor = _useState9[1];\n\n  var markdownWrapper = useRef(null);\n  var _ref2 = [useRef(null), useRef(null)],\n      exampleRef = _ref2[0],\n      solutionRef = _ref2[1];\n  var router = useRouter();\n\n  var onMarkdownInput = function onMarkdownInput(text) {\n    setBody(text);\n    setBodyError(false);\n  };\n\n  var updateMarkdownWithUploadedFiles = function updateMarkdownWithUploadedFiles(newMarkdown, newFiles) {\n    setBody(newMarkdown);\n    Object.keys(newFiles).forEach(function (fileId) {\n      filesToUpload.current[fileId] = newFiles[fileId];\n    });\n  };\n\n  var updateExercise = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {\n      var newBody, uploadInfo;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (validateRequiredData()) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", false);\n\n            case 2:\n              newBody = body;\n              setIsEditing(true);\n              _context.prev = 4;\n              _context.next = 7;\n              return uploadMedia(body, filesToUpload.current);\n\n            case 7:\n              uploadInfo = _context.sent;\n              newBody = replaceMarkdownWithUploads(uploadInfo);\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](4);\n              SweetAlertService.toast({\n                type: 'error',\n                text: _context.t0.message || 'Fișierul nu a putut fi încărcat. Încearcă din nou!'\n              });\n              return _context.abrupt(\"return\", false);\n\n            case 15:\n              _context.prev = 15;\n              _context.next = 18;\n              return ExerciseService.updateExercise(exercise._id, {\n                suggestion: suggestion,\n                body: newBody,\n                type: formData.type,\n                \"private\": formData[\"private\"] === 'true',\n                example: exampleRef.current ? exampleRef.current.getFolderStructure() : null,\n                solution: solutionRef.current ? solutionRef.current.getFolderStructure() : null\n              });\n\n            case 18:\n              SweetAlertService.toast({\n                type: 'success',\n                text: 'Exercițiul a fost modificat cu succes!'\n              });\n              router.push(\"/\".concat(userInfo.username));\n              _context.next = 25;\n              break;\n\n            case 22:\n              _context.prev = 22;\n              _context.t1 = _context[\"catch\"](15);\n              SweetAlertService.toast({\n                text: (_context.t1 === null || _context.t1 === void 0 ? void 0 : _context.t1.message) || 'Oops! Nu am putut crea exercițiul',\n                type: 'error'\n              });\n\n            case 25:\n              _context.prev = 25;\n              setIsEditing(false);\n              return _context.finish(25);\n\n            case 28:\n              return _context.abrupt(\"return\", false);\n\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 11], [15, 22, 25, 28]]);\n    }));\n\n    return function updateExercise(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var deleteExercise = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return SweetAlertService.confirm({\n                title: 'Șterge exercițiul',\n                text: 'Ești sigur? Această decizie e permanentă.',\n                confirmButtonText: 'Da, șterge exercițiul'\n              });\n\n            case 2:\n              result = _context2.sent;\n\n              if (result.isConfirmed) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 5:\n              _context2.prev = 5;\n              setIsDeleting(true);\n              _context2.next = 9;\n              return ExerciseService[\"delete\"](exercise._id);\n\n            case 9:\n              SweetAlertService.toast({\n                type: 'success',\n                text: 'Exercițiu șters cu success'\n              });\n              router.replace(\"/\".concat(userInfo.username));\n              _context2.next = 17;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](5);\n              console.error('[deleteExercise]', _context2.t0);\n              SweetAlertService.toast({\n                type: 'error',\n                text: _context2.t0.message || 'Oops. Se pare că nu am putut șterge exercițiul. Încearcă din nou'\n              });\n\n            case 17:\n              _context2.prev = 17;\n              setIsDeleting(false);\n              return _context2.finish(17);\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[5, 13, 17, 20]]);\n    }));\n\n    return function deleteExercise() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var validateRequiredData = function validateRequiredData() {\n    var isValid = true;\n\n    if (!body) {\n      setBodyError(true);\n      markdownWrapper.current.scrollIntoView();\n      isValid = false;\n    }\n\n    if (!solutionRef.current) {\n      setSolutionError(true);\n      isValid = false;\n    } else {\n      var folderStructure = solutionRef.current.getFolderStructure();\n\n      if (!folderStructure) {\n        setSolutionError(true);\n        isValid = false;\n      }\n    }\n\n    return isValid;\n  };\n\n  var replaceMarkdownWithUploads = function replaceMarkdownWithUploads(uploadedInfo) {\n    var newBody = body;\n    Object.keys(filesToUpload.current).forEach(function (id) {\n      var uploadInfo = uploadedInfo.find(function (info) {\n        return info.name === id;\n      });\n\n      if (!uploadInfo) {\n        newBody = newBody.replaceAll(filesToUpload.current[id].markdownToReplace, '');\n      } else {\n        newBody = newBody.replaceAll(filesToUpload.current[id].markdownToReplace, \"![\".concat(uploadInfo.name, \"](\").concat(uploadInfo.url, \")\"));\n      }\n    });\n    setBody(newBody);\n    return newBody;\n  };\n\n  var exerciseBody = exercise.example ? new FolderStructure(JSON.parse(exercise.example)) : null;\n  var exerciseSolution = exercise.solution ? new FolderStructure(JSON.parse(exercise.solution)) : null;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: \"\".concat(styles.cta, \" relative\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, isOwnExercise ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, \" Modific\\u0103 exerci\\u021Biul \"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, \"Dac\\u0103 acest exerci\\u021Biu este folosit \\xEEntr-una dintre lec\\u021Bii, modific\\u0103rile tale vor avea efect abia dup\\u0103 aprobarea unui admin.\")) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"Exerci\\u021Biu\", ' ', __jsx(Link, {\n    href: \"/lec\\u021Bii\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    className: \"text-blue uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, exercise.type))), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, ' ', __jsx(Link, {\n    href: \"/\".concat(exercise.user.username),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    className: \"text-bold text-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, nameOrUsername)), ' ', \"a scris un exerci\\u021Biu despre\", ' ', __jsx(\"strong\", {\n    className: \"uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, exercise.type), \". \\xCEl po\\u021Bi folosi \\xEEn trainingurile tale at\\xE2ta timp c\\xE2t oferi atribuire autorului.\")), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: isOwnExercise ? editCover : viewCover\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    className: styles['new-exercise'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    withStyles: false,\n    onSubmit: updateExercise,\n    className: \"relative\",\n    id: \"createForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    ref: markdownWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, __jsx(MarkdownTextarea, {\n    title: \"Descrie exerci\\u021Biul\",\n    disabled: !isOwnExercise,\n    markdown: body,\n    initialTab: \"PREVIEW\",\n    onInput: onMarkdownInput,\n    onUpload: function onUpload(files, cursorPosition) {\n      return uploadFiles(files, cursorPosition, body, updateMarkdownWithUploadedFiles);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }), bodyError && __jsx(\"p\", {\n    className: \"\".concat(styles['error-message'], \" text-right text-bold absolute\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, \"Fiecare exerci\\u021Biu trebuie s\\u0103 aib\\u0103 o descriere \\uD83D\\uDC46\"))), __jsx(\"section\", {\n    className: styles['example-wrapper'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, exerciseBody && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }, \" Cod de \\xEEnceput\"), __jsx(BasicEditorLazy, {\n    ref: exampleRef,\n    readOnly: !isOwnExercise,\n    folderStructure: exerciseBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  })), !exerciseBody && isOwnExercise && !showExampleEditor && __jsx(\"button\", {\n    className: \"btn btn--light\",\n    type: \"button\",\n    onClick: function onClick() {\n      return setShowExampleEditor(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, \"Adaug\\u0103 cod de \\xEEnceput\"), !exerciseBody && isOwnExercise && showExampleEditor && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, \" Cod de \\xEEnceput\"), __jsx(BasicEditorLazy, {\n    ref: exampleRef,\n    readOnly: !isOwnExercise,\n    folderStructure: exerciseBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }))), __jsx(\"section\", {\n    className: \"\".concat(styles['example-wrapper'], \" relative\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, \" Solu\\u021Bie\"), __jsx(BasicEditorLazy, {\n    ref: solutionRef,\n    readOnly: !isOwnExercise,\n    folderStructure: exerciseSolution,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }), solutionError && __jsx(\"p\", {\n    className: \"\".concat(styles['error-message'], \" absolute text-right text-bold\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }, \"Fiecare exerci\\u021Biu trebuie s\\u0103 aib\\u0103 o solu\\u021Bie \\uD83D\\uDC46\")), isOwnExercise && __jsx(React.Fragment, null, __jsx(ChapterControls, {\n    form: \"createForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }\n  }), __jsx(PrivacyControls, {\n    form: \"createForm\",\n    isPrivate: isPrivate,\n    onPrivacyChange: setIsPrivate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }), __jsx(\"footer\", {\n    className: \"d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, __jsx(LessonSelect, {\n    selectedId: exercise.suggestion,\n    onChange: function onChange(value) {\n      return setSuggestion(value.label);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 15\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    onClick: deleteExercise,\n    disabled: isEditing || isDeleting,\n    className: \"btn btn--danger mr-2 \".concat(isDeleting ? 'btn--loading' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  }, \"\\u0218terge\"), __jsx(\"button\", {\n    form: \"createForm\",\n    type: \"submit\",\n    disabled: isEditing || isDeleting,\n    className: \"btn btn--blue \".concat(isEditing ? 'btn--loading' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, \"Modific\\u0103\"))))));\n}\n\n_s(ViewOrEditExercise, \"ySUweIyQG9AwOQ6uXw0M+8/UiLo=\", false, function () {\n  return [useRouter];\n});\n\n_c = ViewOrEditExercise;\n\nfunction mapStateToProps(state) {\n  return {\n    userInfo: state.user.info\n  };\n}\n\nvar connector = connect(mapStateToProps);\nexport default _c2 = connector(ViewOrEditExercise);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ViewOrEditExercise\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/create-view-edit-exercise/ViewOrEditExercise.tsx"],"names":["Link","React","useState","useRef","connect","useRouter","FolderStructure","uploadFiles","uploadMedia","BasicEditorLazy","Form","MarkdownTextarea","ChapterControls","LessonSelect","styles","PrivacyControls","viewCover","editCover","SweetAlertService","ExerciseService","ViewOrEditExercise","exercise","userInfo","isOwnExercise","username","user","nameOrUsername","name","body","setBody","suggestion","setSuggestion","bodyError","setBodyError","solutionError","setSolutionError","filesToUpload","isPrivate","setIsPrivate","isEditing","setIsEditing","isDeleting","setIsDeleting","showExampleEditor","setShowExampleEditor","showSolutionEditor","setShowSolutionEditor","markdownWrapper","exampleRef","solutionRef","router","onMarkdownInput","text","updateMarkdownWithUploadedFiles","newMarkdown","newFiles","Object","keys","forEach","fileId","current","updateExercise","formData","validateRequiredData","newBody","uploadInfo","replaceMarkdownWithUploads","toast","type","message","_id","example","getFolderStructure","solution","push","deleteExercise","confirm","title","confirmButtonText","result","isConfirmed","replace","console","error","isValid","scrollIntoView","folderStructure","uploadedInfo","id","find","info","replaceAll","markdownToReplace","url","exerciseBody","JSON","parse","exerciseSolution","cta","__html","files","cursorPosition","value","label","mapStateToProps","state","connector"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport React, { useState, useRef } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport { RootState } from '~/redux/root.reducer';\r\nimport { Exercise } from '~/redux/user/types';\r\nimport FolderStructure from '~/services/utils/FolderStructure';\r\nimport {\r\n  FileDictionary,\r\n  MediaUploadResp,\r\n  uploadFiles,\r\n  uploadMedia,\r\n} from '.';\r\nimport BasicEditorLazy from '../Editor/BasicEditor/BasicEditor.lazy';\r\nimport Form from '../Form';\r\nimport MarkdownTextarea from '../MarkdownTextarea';\r\nimport ChapterControls from './ChapterControls/ChapterControls';\r\nimport LessonSelect from './LessonSelect/LessonSelect';\r\n\r\nimport styles from './NewExercise.module.scss';\r\nimport PrivacyControls from './PrivacyControls/PrivacyControls';\r\n\r\nimport viewCover from './the-search.svg';\r\nimport editCover from './coding.svg';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\nimport ExerciseService from '~/services/Exercise.service';\r\nimport { ChapterType } from '~/redux/exercise-submissions/types';\r\n\r\nfunction ViewOrEditExercise({\r\n  exercise,\r\n  userInfo,\r\n}: ConnectedProps<typeof connector> & { exercise: Exercise }) {\r\n  const isOwnExercise = userInfo && (userInfo.username === exercise.user.username);\r\n  const nameOrUsername = exercise.user.name || exercise.user.username;\r\n\r\n  const [body, setBody] = useState(exercise.body);\r\n  const [suggestion, setSuggestion] = useState(exercise.suggestion);\r\n  const [bodyError, setBodyError] = useState(null);\r\n  const [solutionError, setSolutionError] = useState(null);\r\n\r\n  const filesToUpload = useRef<FileDictionary>({});\r\n\r\n  const [isPrivate, setIsPrivate] = useState(exercise.private);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n  const [showExampleEditor, setShowExampleEditor] = useState(false);\r\n  const [showSolutionEditor, setShowSolutionEditor] = useState(false);\r\n\r\n  const markdownWrapper = useRef(null);\r\n  const [exampleRef, solutionRef] = [useRef(null), useRef(null)];\r\n\r\n  const router = useRouter();\r\n\r\n  const onMarkdownInput = (text) => {\r\n    setBody(text);\r\n    setBodyError(false);\r\n  };\r\n\r\n  const updateMarkdownWithUploadedFiles = (newMarkdown, newFiles) => {\r\n    setBody(newMarkdown);\r\n    Object.keys(newFiles).forEach((fileId) => {\r\n      filesToUpload.current[fileId] = newFiles[fileId];\r\n    });\r\n  };\r\n\r\n  const updateExercise = async (\r\n    formData: {\r\n      type: ChapterType,\r\n      private: 'true' | 'false'\r\n    },\r\n  ) => {\r\n    if (!validateRequiredData()) {\r\n      return false;\r\n    }\r\n\r\n    let newBody = body;\r\n    setIsEditing(true);\r\n\r\n    try {\r\n      const uploadInfo = await uploadMedia(body, filesToUpload.current);\r\n      newBody = replaceMarkdownWithUploads(uploadInfo);\r\n    } catch (err) {\r\n      SweetAlertService.toast({\r\n        type: 'error',\r\n        text: err.message || 'Fișierul nu a putut fi încărcat. Încearcă din nou!',\r\n      });\r\n\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      await ExerciseService.updateExercise(\r\n        exercise._id,\r\n        {\r\n          suggestion,\r\n          body: newBody,\r\n          type: formData.type,\r\n          private: formData.private === 'true',\r\n          example: exampleRef.current ? exampleRef.current.getFolderStructure() : null,\r\n          solution: solutionRef.current ? solutionRef.current.getFolderStructure() : null,\r\n        },\r\n      );\r\n\r\n      SweetAlertService.toast({\r\n        type: 'success',\r\n        text: 'Exercițiul a fost modificat cu succes!',\r\n      });\r\n\r\n      router.push(`/${userInfo.username}`);\r\n    } catch (err) {\r\n      SweetAlertService.toast({\r\n        text: err?.message || 'Oops! Nu am putut crea exercițiul',\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setIsEditing(false);\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const deleteExercise = async () => {\r\n    const result = await SweetAlertService.confirm({\r\n      title: 'Șterge exercițiul',\r\n      text: 'Ești sigur? Această decizie e permanentă.',\r\n      confirmButtonText: 'Da, șterge exercițiul',\r\n    });\r\n\r\n    if (!result.isConfirmed) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsDeleting(true);\r\n      await ExerciseService.delete(exercise._id);\r\n      SweetAlertService.toast({\r\n        type: 'success',\r\n        text: 'Exercițiu șters cu success',\r\n      });\r\n\r\n      router.replace(`/${userInfo.username}`);\r\n    } catch (err) {\r\n      console.error('[deleteExercise]', err);\r\n      SweetAlertService.toast({\r\n        type: 'error',\r\n        text: err.message || 'Oops. Se pare că nu am putut șterge exercițiul. Încearcă din nou',\r\n      });\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  const validateRequiredData = () => {\r\n    let isValid = true;\r\n\r\n    if (!body) {\r\n      setBodyError(true);\r\n      markdownWrapper.current.scrollIntoView();\r\n      isValid = false;\r\n    }\r\n\r\n    if (!solutionRef.current) {\r\n      setSolutionError(true);\r\n      isValid = false;\r\n    } else {\r\n      let folderStructure: FolderStructure = solutionRef.current.getFolderStructure();\r\n      if (!folderStructure) {\r\n        setSolutionError(true);\r\n        isValid = false;\r\n      }\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const replaceMarkdownWithUploads = (uploadedInfo: MediaUploadResp[]) => {\r\n    let newBody = body;\r\n\r\n    Object.keys(filesToUpload.current).forEach((id) => {\r\n      const uploadInfo = uploadedInfo.find((info) => info.name === id);\r\n\r\n      if (!uploadInfo) {\r\n        newBody = newBody.replaceAll(filesToUpload.current[id].markdownToReplace, '');\r\n      } else {\r\n        newBody = newBody.replaceAll(\r\n          filesToUpload.current[id].markdownToReplace,\r\n          `![${uploadInfo.name}](${uploadInfo.url})`,\r\n        );\r\n      }\r\n    });\r\n\r\n    setBody(newBody);\r\n    return newBody;\r\n  };\r\n\r\n  const exerciseBody = exercise.example ? new FolderStructure(JSON.parse(exercise.example)) : null;\r\n  const exerciseSolution = exercise.solution\r\n    ? new FolderStructure(JSON.parse(exercise.solution))\r\n    : null;\r\n\r\n  return (\r\n    <div>\r\n      <section className={`${styles.cta} relative`}>\r\n        {isOwnExercise ? (\r\n          <div>\r\n            <h1> Modifică exercițiul </h1>\r\n            <h2>\r\n              Dacă acest exercițiu este folosit într-una dintre lecții,\r\n              modificările tale vor avea efect abia după aprobarea unui admin.\r\n            </h2>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h1>\r\n              Exercițiu\r\n              {' '}\r\n              <Link href=\"/lecții\">\r\n                <a className=\"text-blue uppercase\">\r\n                  {exercise.type}\r\n                </a>\r\n              </Link>\r\n\r\n            </h1>\r\n            <h2>\r\n              {' '}\r\n              <Link href={`/${exercise.user.username}`}>\r\n                <a className=\"text-bold text-blue\">\r\n                  {nameOrUsername}\r\n                </a>\r\n              </Link>\r\n              {' '}\r\n              a scris un exercițiu despre\r\n              {' '}\r\n              <strong className=\"uppercase\">\r\n                {exercise.type}\r\n              </strong>\r\n              . Îl poți folosi în trainingurile\r\n              tale atâta timp cât oferi atribuire\r\n              autorului.\r\n            </h2>\r\n          </div>\r\n        )}\r\n        {/* eslint-disable-next-line react/no-danger */}\r\n        <div dangerouslySetInnerHTML={{\r\n          __html: isOwnExercise ? editCover : viewCover,\r\n        }}\r\n        />\r\n      </section>\r\n      <main className={styles['new-exercise']}>\r\n        <Form withStyles={false} onSubmit={updateExercise} className=\"relative\" id=\"createForm\">\r\n          <div ref={markdownWrapper}>\r\n            <MarkdownTextarea\r\n              title=\"Descrie exercițiul\"\r\n              disabled={!isOwnExercise}\r\n              markdown={body}\r\n              initialTab=\"PREVIEW\"\r\n              onInput={onMarkdownInput}\r\n              onUpload={(files, cursorPosition) => uploadFiles(\r\n                files, cursorPosition, body, updateMarkdownWithUploadedFiles\r\n              )}\r\n            />\r\n            {bodyError && (\r\n            <p className={`${styles['error-message']} text-right text-bold absolute`}>\r\n              Fiecare exercițiu trebuie să aibă o descriere 👆\r\n            </p>\r\n            )}\r\n          </div>\r\n        </Form>\r\n\r\n        <section className={styles['example-wrapper']}>\r\n          {exerciseBody && (\r\n            <>\r\n              <h3> Cod de început</h3>\r\n              <BasicEditorLazy\r\n                ref={exampleRef}\r\n                readOnly={!isOwnExercise}\r\n                folderStructure={exerciseBody}\r\n              />\r\n            </>\r\n          )}\r\n          {(!exerciseBody && isOwnExercise && !showExampleEditor) && (\r\n            <button\r\n              className=\"btn btn--light\"\r\n              type=\"button\"\r\n              onClick={() => setShowExampleEditor(true)}\r\n            >\r\n              Adaugă cod de început\r\n            </button>\r\n          )}\r\n          {(!exerciseBody && isOwnExercise && showExampleEditor) && (\r\n            <>\r\n              <h3> Cod de început</h3>\r\n              <BasicEditorLazy\r\n                ref={exampleRef}\r\n                readOnly={!isOwnExercise}\r\n                folderStructure={exerciseBody}\r\n              />\r\n            </>\r\n          )}\r\n        </section>\r\n\r\n        <section className={`${styles['example-wrapper']} relative`}>\r\n          <h3> Soluție</h3>\r\n          <BasicEditorLazy\r\n            ref={solutionRef}\r\n            readOnly={!isOwnExercise}\r\n            folderStructure={exerciseSolution}\r\n          />\r\n          {solutionError && (\r\n          <p className={`${styles['error-message']} absolute text-right text-bold`}>\r\n            Fiecare exercițiu trebuie să aibă o soluție 👆\r\n          </p>\r\n          )}\r\n        </section>\r\n\r\n        {isOwnExercise && (\r\n          <>\r\n            <ChapterControls form=\"createForm\" />\r\n            <PrivacyControls form=\"createForm\" isPrivate={isPrivate} onPrivacyChange={setIsPrivate} />\r\n            <footer className=\"d-flex align-items-center justify-content-between\">\r\n              <LessonSelect\r\n                selectedId={exercise.suggestion}\r\n                onChange={(value) => setSuggestion(value.label)}\r\n              />\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={deleteExercise}\r\n                  disabled={isEditing || isDeleting}\r\n                  className={`btn btn--danger mr-2 ${isDeleting ? 'btn--loading' : ''}`}\r\n                >\r\n                  Șterge\r\n                </button>\r\n\r\n                <button\r\n                  form=\"createForm\"\r\n                  type=\"submit\"\r\n                  disabled={isEditing || isDeleting}\r\n                  className={`btn btn--blue ${isEditing ? 'btn--loading' : ''}`}\r\n                >\r\n                  Modifică\r\n                </button>\r\n              </div>\r\n            </footer>\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    userInfo: state.user.info,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(ViewOrEditExercise);\r\n"]},"metadata":{},"sourceType":"module"}