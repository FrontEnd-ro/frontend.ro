{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\layout\\\\AsideMenu\\\\AsideMenu.tsx\";\nvar __jsx = React.createElement;\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useRef } from 'react';\nimport { useOutsideClick } from '~/services/Hooks';\nimport styles from './AsideMenu.module.scss';\n\nfunction AsideMenu({\n  title,\n  isOpen,\n  close,\n  children,\n  className = '',\n  hideScrollOnBody = false\n}) {\n  const ref = useRef(null);\n  useOutsideClick(ref, close);\n  useEffect(() => {\n    if (!hideScrollOnBody) {\n      return;\n    }\n\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'initial';\n    }\n  }, [isOpen]);\n  return __jsx(\"aside\", {\n    ref: ref,\n    className: `${styles['aside-menu']}${isOpen ? ` ${styles['aside-menu--open']}` : ''} ${className} bg-black text-white`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    className: \"aside-menu__header d-flex justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, title), isOpen && __jsx(\"button\", {\n    type: \"button\",\n    onClick: close,\n    className: \"btn--transparent text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }))), children);\n}\n\nexport default AsideMenu;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/layout/AsideMenu/AsideMenu.tsx"],"names":["faTimes","FontAwesomeIcon","React","useEffect","useRef","useOutsideClick","styles","AsideMenu","title","isOpen","close","children","className","hideScrollOnBody","ref","document","body","style","overflow"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,mCAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA8CC,MAA9C,QAA4D,OAA5D;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;AAUA,SAASC,SAAT,CAAmB;AACjBC,EAAAA,KADiB;AAEjBC,EAAAA,MAFiB;AAGjBC,EAAAA,KAHiB;AAIjBC,EAAAA,QAJiB;AAKjBC,EAAAA,SAAS,GAAG,EALK;AAMjBC,EAAAA,gBAAgB,GAAG;AANF,CAAnB,EAO6B;AAC3B,QAAMC,GAAG,GAAGV,MAAM,CAAC,IAAD,CAAlB;AACAC,EAAAA,eAAe,CAACS,GAAD,EAAMJ,KAAN,CAAf;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,gBAAL,EAAuB;AACrB;AACD;;AAED,QAAIJ,MAAJ,EAAY;AACVM,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,QAA/B;AACD,KAFD,MAEO;AACLH,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,SAA/B;AACD;AACF,GAVQ,EAUN,CAACT,MAAD,CAVM,CAAT;AAYA,SACE;AAAO,IAAA,GAAG,EAAEK,GAAZ;AAAiB,IAAA,SAAS,EAAG,GAAER,MAAM,CAAC,YAAD,CAAe,GAAEG,MAAM,GAAI,IAAGH,MAAM,CAAC,kBAAD,CAAqB,EAAlC,GAAsC,EAAG,IAAGM,SAAU,sBAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,sEAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KADH,CADF,EAIGC,MAAM,IACL;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEC,KAA/B;AAAsC,IAAA,SAAS,EAAC,6BAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEV,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALJ,CADF,EAWGW,QAXH,CADF;AAeD;;AAED,eAAeJ,SAAf","sourcesContent":["import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, PropsWithChildren, useRef } from 'react';\r\nimport { useOutsideClick } from '~/services/Hooks';\r\n\r\nimport styles from './AsideMenu.module.scss';\r\n\r\ninterface Props {\r\n  title: string;\r\n  isOpen: boolean;\r\n  close: () => void;\r\n  className?: string;\r\n  hideScrollOnBody?: boolean;\r\n}\r\n\r\nfunction AsideMenu({\r\n  title,\r\n  isOpen,\r\n  close,\r\n  children,\r\n  className = '',\r\n  hideScrollOnBody = false,\r\n}: PropsWithChildren<Props>) {\r\n  const ref = useRef(null);\r\n  useOutsideClick(ref, close);\r\n\r\n  useEffect(() => {\r\n    if (!hideScrollOnBody) {\r\n      return;\r\n    }\r\n\r\n    if (isOpen) {\r\n      document.body.style.overflow = 'hidden';\r\n    } else {\r\n      document.body.style.overflow = 'initial';\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <aside ref={ref} className={`${styles['aside-menu']}${isOpen ? ` ${styles['aside-menu--open']}` : ''} ${className} bg-black text-white`}>\r\n      <header className=\"aside-menu__header d-flex justify-content-between align-items-center\">\r\n        <h2>\r\n          {title}\r\n        </h2>\r\n        {isOpen && (\r\n          <button type=\"button\" onClick={close} className=\"btn--transparent text-white\">\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        )}\r\n      </header>\r\n      {children}\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default AsideMenu;\r\n"]},"metadata":{},"sourceType":"module"}