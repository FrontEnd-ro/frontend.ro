{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Button\\\\Button.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nfunction Button({\n  loading = false,\n  disabled = false,\n  variant = 'blue',\n  className,\n  children,\n  type = 'button',\n  props\n}) {\n  return __jsx(\"button\", _extends({\n    type: type === 'button' ? 'button' : 'submit',\n    className: `btn ${variant === `${variant}` ? `btn--${variant}` : 'btn--light'}\n      ${loading} ? 'btn--loading' : '' \n      ${className}`,\n    disabled: disabled || loading\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }), children);\n}\n\nexport default Button;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Button/Button.tsx"],"names":["React","Button","loading","disabled","variant","className","children","type","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;;AAWA,SAASC,MAAT,CAAgB;AACdC,EAAAA,OAAO,GAAG,KADI;AACGC,EAAAA,QAAQ,GAAG,KADd;AACqBC,EAAAA,OAAO,GAAG,MAD/B;AACuCC,EAAAA,SADvC;AACkDC,EAAAA,QADlD;AAC4DC,EAAAA,IAAI,GAAG,QADnE;AAC6EC,EAAAA;AAD7E,CAAhB,EAEuE;AACrE,SACE;AACE,IAAA,IAAI,EAAED,IAAI,KAAK,QAAT,GAAoB,QAApB,GAA+B,QADvC;AAEE,IAAA,SAAS,EAAG,OACVH,OAAO,KAAM,GAAEA,OAAQ,EAAvB,GAA4B,QAAOA,OAAQ,EAA3C,GAA+C,YAChD;AACP,QAAQF,OAAQ;AAChB,QAAQG,SAAU,EANd;AAOE,IAAA,QAAQ,EAAEF,QAAQ,IAAID;AAPxB,KAQMM,KARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUIF,QAVJ,CADF;AAcD;;AACD,eAAeL,MAAf","sourcesContent":["import React, { PropsWithChildren } from 'react';\r\n\r\ninterface Props {\r\n  type?: 'button' | 'submit';\r\n  loading?: boolean;\r\n  disabled?: boolean;\r\n  variant: 'blue' | 'success' | 'danger' | 'yellow' | 'grey' | 'bouncy' | 'with--icon' | 'outline' ;\r\n  className?: string;\r\n  props: any;\r\n}\r\n\r\nfunction Button({\r\n  loading = false, disabled = false, variant = 'blue', className, children, type = 'button', props,\r\n}: PropsWithChildren<Props> & React.HTMLAttributes<HTMLButtonElement>) {\r\n  return (\r\n    <button\r\n      type={type === 'button' ? 'button' : 'submit'}\r\n      className={`btn ${\r\n        variant === `${variant}` ? `btn--${variant}` : 'btn--light'\r\n      }\r\n      ${loading} ? 'btn--loading' : '' \r\n      ${className}`}\r\n      disabled={disabled || loading}\r\n      {...props}\r\n    >\r\n      { children}\r\n    </button>\r\n  );\r\n}\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}