{"ast":null,"code":"import _extends from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Button\\\\Button.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nfunction Button(_ref) {\n  var _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? false : _ref$loading,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      variant = _ref.variant,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      children = _ref.children,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'button' : _ref$type,\n      props = _objectWithoutProperties(_ref, [\"loading\", \"disabled\", \"variant\", \"className\", \"children\", \"type\"]);\n\n  var updatedClassName = className;\n\n  if (loading) {\n    updatedClassName += ' btn--loading';\n  }\n\n  return __jsx(\"button\", _extends({\n    type: type === 'button' ? 'button' : 'submit',\n    className: \"btn \".concat(variant === \"\".concat(variant) ? \"btn--\".concat(variant) : 'btn--transparent', \" \").concat(updatedClassName),\n    disabled: disabled || loading\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }), children);\n}\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Button/Button.tsx"],"names":["React","Button","loading","disabled","variant","className","children","type","props","updatedClassName"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;;AAUA,SAASC,MAAT,OAEyG;AAAA,0BADvGC,OACuG;AAAA,MADvGA,OACuG,6BAD7F,KAC6F;AAAA,2BADtFC,QACsF;AAAA,MADtFA,QACsF,8BAD3E,KAC2E;AAAA,MADpEC,OACoE,QADpEA,OACoE;AAAA,4BAD3DC,SAC2D;AAAA,MAD3DA,SAC2D,+BAD/C,EAC+C;AAAA,MAD3CC,QAC2C,QAD3CA,QAC2C;AAAA,uBADjCC,IACiC;AAAA,MADjCA,IACiC,0BAD1B,QAC0B;AAAA,MADbC,KACa;;AACvG,MAAIC,gBAAgB,GAAGJ,SAAvB;;AACA,MAAIH,OAAJ,EAAa;AACXO,IAAAA,gBAAgB,IAAI,eAApB;AACD;;AAED,SACE;AACE,IAAA,IAAI,EAAEF,IAAI,KAAK,QAAT,GAAoB,QAApB,GAA+B,QADvC;AAEE,IAAA,SAAS,gBAASH,OAAO,eAAQA,OAAR,CAAP,kBAAmCA,OAAnC,IAA+C,kBAAxD,cAA8EK,gBAA9E,CAFX;AAGE,IAAA,QAAQ,EAAEN,QAAQ,IAAID;AAHxB,KAIMM,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMIF,QANJ,CADF;AAUD;;KAlBQL,M;AAmBT,eAAeA,MAAf","sourcesContent":["import React, { PropsWithChildren } from 'react';\r\n\r\ninterface Props {\r\n  type?: 'button' | 'submit';\r\n  loading?: boolean;\r\n  disabled?: boolean;\r\n  variant: 'light' | 'blue' | 'success' | 'danger' | 'transparent' | 'yellow' | 'grey' | 'bouncy' | 'with--icon' | 'outline' ;\r\n  className?: string;\r\n}\r\n\r\nfunction Button({\r\n  loading = false, disabled = false, variant, className = '', children, type = 'button', ...props\r\n}: PropsWithChildren<Props> & React.HTMLAttributes<HTMLButtonElement> & React.MutableRefObject<unknown>) {\r\n  let updatedClassName = className;\r\n  if (loading) {\r\n    updatedClassName += ' btn--loading';\r\n  }\r\n\r\n  return (\r\n    <button\r\n      type={type === 'button' ? 'button' : 'submit'}\r\n      className={`btn ${variant === `${variant}` ? `btn--${variant}` : 'btn--transparent'} ${updatedClassName}`}\r\n      disabled={disabled || loading}\r\n      {...props}\r\n    >\r\n      { children}\r\n    </button>\r\n  );\r\n}\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}