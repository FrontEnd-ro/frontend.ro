{"ast":null,"code":"import _toConsumableArray from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\LivePreviewDemo\\\\IframeDemo\\\\IframeDemo.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport styles from './IframeDemo.module.scss';\nexport default function IframeDemo(_ref) {\n  _s();\n\n  var sourceCode = _ref.sourceCode;\n  var iframeRef = useRef(null);\n  useEffect(function () {\n    var doc = iframeRef.current.contentDocument;\n    doc.head.innerHTML = \"<style> \\n      img {\\n        max-width: 100%; \\n        max-height: 100%; \\n        border-radius: 0.5em\\n      };\\n</style>\";\n    doc.body.innerHTML = sourceCode;\n    doc.body.style.margin = 0;\n\n    var refresh = function refresh() {\n      var bodyHeight = doc.body.offsetHeight;\n      iframeRef.current.style.height = \"\".concat(bodyHeight, \"px\");\n    };\n\n    var images = _toConsumableArray(doc.body.querySelectorAll('img'));\n\n    images.forEach(function (img) {\n      img.addEventListener('load', refresh);\n    });\n\n    var videos = _toConsumableArray(doc.body.querySelectorAll('video'));\n\n    videos.forEach(function (video) {\n      video.addEventListener('load', refresh);\n    });\n    refresh();\n  }, [sourceCode]);\n  return __jsx(\"iframe\", {\n    frameBorder: \"0\",\n    ref: iframeRef,\n    title: \"iframe\",\n    className: styles.iframe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(IframeDemo, \"xrPm9S+7ob9FwtLVsZjNguOLSgs=\");\n\n_c = IframeDemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"IframeDemo\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/LivePreviewDemo/IframeDemo/IframeDemo.tsx"],"names":["React","useEffect","useRef","styles","IframeDemo","sourceCode","iframeRef","doc","current","contentDocument","head","innerHTML","body","style","margin","refresh","bodyHeight","offsetHeight","height","images","querySelectorAll","forEach","img","addEventListener","videos","video","iframe"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAMA,eAAe,SAASC,UAAT,OAA2C;AAAA;;AAAA,MAArBC,UAAqB,QAArBA,UAAqB;AACxD,MAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIM,GAAG,GAAGD,SAAS,CAACE,OAAV,CAAkBC,eAA5B;AAEAF,IAAAA,GAAG,CAACG,IAAJ,CAASC,SAAT;AAQAJ,IAAAA,GAAG,CAACK,IAAJ,CAASD,SAAT,GAAqBN,UAArB;AACAE,IAAAA,GAAG,CAACK,IAAJ,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAAxB;;AAEA,QAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,UAAIC,UAAU,GAAGT,GAAG,CAACK,IAAJ,CAASK,YAA1B;AACAX,MAAAA,SAAS,CAACE,OAAV,CAAkBK,KAAlB,CAAwBK,MAAxB,aAAoCF,UAApC;AACD,KAHD;;AAKA,QAAIG,MAAM,sBAAOZ,GAAG,CAACK,IAAJ,CAASQ,gBAAT,CAA0B,KAA1B,CAAP,CAAV;;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAe,UAACC,GAAD,EAAS;AACtBA,MAAAA,GAAG,CAACC,gBAAJ,CAAqB,MAArB,EAA6BR,OAA7B;AACD,KAFD;;AAIA,QAAIS,MAAM,sBAAOjB,GAAG,CAACK,IAAJ,CAASQ,gBAAT,CAA0B,OAA1B,CAAP,CAAV;;AACAI,IAAAA,MAAM,CAACH,OAAP,CAAe,UAACI,KAAD,EAAW;AACxBA,MAAAA,KAAK,CAACF,gBAAN,CAAuB,MAAvB,EAA+BR,OAA/B;AACD,KAFD;AAIAA,IAAAA,OAAO;AACR,GA9BQ,EA8BN,CAACV,UAAD,CA9BM,CAAT;AAgCA,SACE;AACE,IAAA,WAAW,EAAC,GADd;AAEE,IAAA,GAAG,EAAEC,SAFP;AAGE,IAAA,KAAK,EAAC,QAHR;AAIE,IAAA,SAAS,EAAEH,MAAM,CAACuB,MAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD;;GA3CuBtB,U;;KAAAA,U","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport styles from './IframeDemo.module.scss';\r\n\r\ninterface Props {\r\n  sourceCode: string;\r\n}\r\n\r\nexport default function IframeDemo({ sourceCode }: Props) {\r\n  const iframeRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let doc = iframeRef.current.contentDocument;\r\n\r\n    doc.head.innerHTML = `<style> \r\n      img {\r\n        max-width: 100%; \r\n        max-height: 100%; \r\n        border-radius: 0.5em\r\n      };\r\n</style>`;\r\n\r\n    doc.body.innerHTML = sourceCode;\r\n    doc.body.style.margin = 0;\r\n\r\n    const refresh = () => {\r\n      let bodyHeight = doc.body.offsetHeight;\r\n      iframeRef.current.style.height = `${bodyHeight}px`;\r\n    };\r\n\r\n    let images = [...doc.body.querySelectorAll('img')];\r\n    images.forEach((img) => {\r\n      img.addEventListener('load', refresh);\r\n    });\r\n\r\n    let videos = [...doc.body.querySelectorAll('video')];\r\n    videos.forEach((video) => {\r\n      video.addEventListener('load', refresh);\r\n    });\r\n\r\n    refresh();\r\n  }, [sourceCode]);\r\n\r\n  return (\r\n    <iframe\r\n      frameBorder=\"0\"\r\n      ref={iframeRef}\r\n      title=\"iframe\"\r\n      className={styles.iframe}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}