{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Highlight\\\\Highlight.tsx\";\nvar __jsx = React.createElement;\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useRef, useState } from 'react';\nimport { useClipboard } from '~/services/Hooks';\nimport BasicEditorLazy from '../Editor/BasicEditor/BasicEditor.lazy'; // import IframeDemo from '../LivePreviewDemo/IframeDemo/IframeDemo';\n\nexport default function Highlight({\n  language,\n  code,\n  className\n}) {\n  const [codeRef, btnRef] = [useRef(null), useRef(null)];\n  const {\n    0: value,\n    1: setValue\n  } = useState(null); // useEffect(() => {\n  //   highlighting();\n  // }, []);\n\n  useClipboard(btnRef); // const onChange = (e) => {\n  //   setValue(e.target.textContent);\n  // };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(BasicEditorLazy, {\n    ref: codeRef,\n    folderStructure: language,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn--transparent\",\n    \"data-clipboard-text\": code,\n    ref: btnRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(FontAwesomeIcon, {\n    className: \"text-silver\",\n    icon: faCopy,\n    width: \"32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: \"d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \" Copy \")));\n}","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Highlight/Highlight.tsx"],"names":["faCopy","FontAwesomeIcon","React","useRef","useState","useClipboard","BasicEditorLazy","Highlight","language","code","className","codeRef","btnRef","value","setValue"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,mCAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,IAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,eAAP,MAA4B,wCAA5B,C,CACA;;AAYA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAnB,EAAyD;AACtE,QAAM,CAACC,OAAD,EAAUC,MAAV,IAAoB,CAACT,MAAM,CAAC,IAAD,CAAP,EAAeA,MAAM,CAAC,IAAD,CAArB,CAA1B;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,IAAD,CAAlC,CAFsE,CAItE;AACA;AACA;;AAEAC,EAAAA,YAAY,CAACO,MAAD,CAAZ,CARsE,CAUtE;AACA;AACA;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,GAAG,EAAED,OAAtB;AAA+B,IAAA,eAAe,EAAEH,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,kBAAhC;AAAmD,2BAAqBC,IAAxE;AAA8E,IAAA,GAAG,EAAEG,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,aAA3B;AAAyC,IAAA,IAAI,EAAEZ,MAA/C;AAAuD,IAAA,KAAK,EAAC,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAJF,CADF;AAWD","sourcesContent":["import { faCopy } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport FolderStructure from '~/services/utils/FolderStructure';\r\nimport { useClipboard } from '~/services/Hooks';\r\nimport BasicEditorLazy from '../Editor/BasicEditor/BasicEditor.lazy';\r\n// import IframeDemo from '../LivePreviewDemo/IframeDemo/IframeDemo';\r\n\r\nimport styles from './Highlight.module.scss';\r\n\r\ntype Language = 'html' | 'css' | 'json' | 'javascript';\r\n\r\ninterface Props {\r\n  code: string,\r\n  language: Language,\r\n  className?: string;\r\n}\r\n\r\nexport default function Highlight({ language, code, className }: Props) {\r\n  const [codeRef, btnRef] = [useRef(null), useRef(null)];\r\n  const [value, setValue] = useState(null);\r\n\r\n  // useEffect(() => {\r\n  //   highlighting();\r\n  // }, []);\r\n\r\n  useClipboard(btnRef);\r\n\r\n  // const onChange = (e) => {\r\n  //   setValue(e.target.textContent);\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <BasicEditorLazy ref={codeRef} folderStructure={language} />\r\n      {/* <IframeDemo sourceCode={value} /> */}\r\n\r\n      <button type=\"button\" className=\"btn--transparent\" data-clipboard-text={code} ref={btnRef}>\r\n        <FontAwesomeIcon className=\"text-silver\" icon={faCopy} width=\"32\" />\r\n        <span className=\"d-block\"> Copy </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}