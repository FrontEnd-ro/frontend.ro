{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Settings\\\\components\\\\ChangePassword.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Button from '~/components/Button';\nimport Form, { FormGroup, PasswordReveal } from '~/components/Form';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport UserService from '~/services/User.service';\n\nfunction ChangePassword(_ref) {\n  _s();\n\n  var onSuccess = _ref.onSuccess;\n\n  var _useState = useState(null),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      isChanging = _useState2[0],\n      setIsChanging = _useState2[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {\n      var newPassword, passwordConfirm, shouldResetForm, _updatedUser;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              newPassword = formData.newPassword, passwordConfirm = formData.passwordConfirm;\n              setIsChanging(true);\n              shouldResetForm = true;\n              _context.prev = 3;\n              _context.next = 6;\n              return UserService.updatePassword({\n                newPassword: newPassword,\n                password: passwordConfirm\n              });\n\n            case 6:\n              _updatedUser = _context.sent;\n              SweetAlertService.toast({\n                type: 'success',\n                text: 'Parola a fost schimbat cu succes!'\n              });\n              onSuccess(_updatedUser);\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](3);\n              shouldResetForm = false;\n              setError(_context.t0.message || 'Nu am putut să-ți schimbăm parola. Încearcă din nou!');\n\n            case 15:\n              _context.prev = 15;\n              setIsChanging(false);\n              return _context.finish(15);\n\n            case 18:\n              return _context.abrupt(\"return\", shouldResetForm);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 11, 15, 18]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Form, {\n    onInput: function onInput() {\n      return setError(null);\n    },\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: \"mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Schimb\\u0103 parola\"), __jsx(\"div\", {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"Noua parol\\u0103*\"), __jsx(PasswordReveal, {\n    required: true,\n    autoComplete: \"new-password\",\n    name: \"newPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }))), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"Parola curent\\u0103*\"), __jsx(PasswordReveal, {\n    required: true,\n    autoComplete: \"new-password\",\n    name: \"passwordConfirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }))), error && __jsx(\"p\", {\n    className: \"text-red text-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"\\u274C\", ' ', error)), __jsx(Button, {\n    type: \"submit\",\n    variant: \"blue\",\n    loading: isChanging,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Schimb\\u0103 parola\")));\n}\n\n_s(ChangePassword, \"hSF/JMVgNAfSoh60QW7Svo7w5yo=\");\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Settings/components/ChangePassword.tsx"],"names":["React","useState","Button","Form","FormGroup","PasswordReveal","SweetAlertService","UserService","ChangePassword","onSuccess","error","setError","isChanging","setIsChanging","onSubmit","formData","newPassword","passwordConfirm","shouldResetForm","updatePassword","password","updatedUser","toast","type","text","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '~/components/Button';\r\nimport Form, { FormGroup, PasswordReveal } from '~/components/Form';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\nimport UserService from '~/services/User.service';\r\n\r\ninterface Props {\r\n  onSuccess: (updatedUser: any) => void;\r\n}\r\n\r\nfunction ChangePassword({ onSuccess }: Props) {\r\n  const [error, setError] = useState(null);\r\n  const [isChanging, setIsChanging] = useState(false);\r\n\r\n  const onSubmit = async (formData) => {\r\n    const { newPassword, passwordConfirm } = formData;\r\n\r\n    setIsChanging(true);\r\n    let shouldResetForm = true;\r\n\r\n    try {\r\n      const updatedUser = await UserService.updatePassword({\r\n        newPassword,\r\n        password: passwordConfirm,\r\n      });\r\n\r\n      SweetAlertService.toast({\r\n        type: 'success',\r\n        text: 'Parola a fost schimbat cu succes!',\r\n      });\r\n\r\n      onSuccess(updatedUser);\r\n    } catch (err) {\r\n      shouldResetForm = false;\r\n      setError(err.message || 'Nu am putut să-ți schimbăm parola. Încearcă din nou!');\r\n    } finally {\r\n      setIsChanging(false);\r\n    }\r\n\r\n    return shouldResetForm;\r\n  };\r\n\r\n  return (\r\n    <Form onInput={() => setError(null)} onSubmit={onSubmit}>\r\n      <h3 className=\"mt-0\">Schimbă parola</h3>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <div>\r\n          <FormGroup className=\"mb-4\">\r\n            <label>\r\n              <span className=\"label\">\r\n                Noua parolă*\r\n              </span>\r\n              <PasswordReveal required autoComplete=\"new-password\" name=\"newPassword\" />\r\n            </label>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <label>\r\n              <span className=\"label\">\r\n                Parola curentă*\r\n              </span>\r\n              <PasswordReveal required autoComplete=\"new-password\" name=\"passwordConfirm\" />\r\n            </label>\r\n          </FormGroup>\r\n          {error && (\r\n            <p className=\"text-red text-bold\">\r\n              ❌\r\n              {' '}\r\n              {error}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"blue\"\r\n          loading={isChanging}\r\n        >\r\n          Schimbă parola\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n"]},"metadata":{},"sourceType":"module"}