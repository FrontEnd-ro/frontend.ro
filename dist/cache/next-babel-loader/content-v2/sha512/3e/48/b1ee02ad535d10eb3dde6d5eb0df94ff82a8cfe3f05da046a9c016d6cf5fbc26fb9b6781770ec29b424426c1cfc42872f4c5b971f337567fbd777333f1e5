{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Landing\\\\LandingStats\\\\CounterCard\\\\CounterCard.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport CountUp from 'react-countup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from './CounterCard.module.scss';\nexport default function CounterCard({\n  icon,\n  counter,\n  description,\n  withAnimation = true\n}) {\n  let counterWrapperRef = useRef(null);\n  useEffect(() => {\n    initIntersectionObserver();\n  }, []);\n\n  const initIntersectionObserver = () => {\n    const options = {\n      threshold: 0.5\n    };\n    let observer = new IntersectionObserver(detectIntersection, options);\n    observer.observe(counterWrapperRef.current);\n  };\n\n  const detectIntersection = entries => {\n    entries.forEach(entry => {\n      if (entry.intersectionRatio > 0.5) {\n        console.log(entry);\n\n        __jsx(CountUp, {\n          start: 0,\n          end: counter,\n          delay: 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }\n        }, ({\n          countUpRef\n        }) => __jsx(\"p\", {\n          ref: withAnimation && countUpRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }\n        }, counter));\n      }\n    });\n  };\n\n  return (// <CountUp start={0} end={counter} delay={0}>\n    //   {({ countUpRef }) => (\n    __jsx(\"div\", {\n      ref: counterWrapperRef,\n      className: `${styles['counter-card']} text-center`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      className: `${styles['icon-box']} d-flex justify-content-center align-items-center`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, __jsx(FontAwesomeIcon, {\n      width: \"30\",\n      height: \"30\",\n      color: \"#fff\",\n      icon: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      className: styles['counter-details'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, counter), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, description))) //   )}\n    // </CountUp>\n\n  );\n}","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Landing/LandingStats/CounterCard/CounterCard.tsx"],"names":["React","useEffect","useRef","CountUp","FontAwesomeIcon","styles","CounterCard","icon","counter","description","withAnimation","counterWrapperRef","initIntersectionObserver","options","threshold","observer","IntersectionObserver","detectIntersection","observe","current","entries","forEach","entry","intersectionRatio","console","log","countUpRef"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;AASA,eAAe,SAASC,WAAT,CAAqB;AAClCC,EAAAA,IADkC;AAElCC,EAAAA,OAFkC;AAGlCC,EAAAA,WAHkC;AAIlCC,EAAAA,aAAa,GAAG;AAJkB,CAArB,EAKL;AACR,MAAIC,iBAAiB,GAAGT,MAAM,CAAC,IAAD,CAA9B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,wBAAwB;AACzB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,wBAAwB,GAAG,MAAM;AACrC,UAAMC,OAAO,GAAG;AACdC,MAAAA,SAAS,EAAE;AADG,KAAhB;AAIA,QAAIC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBC,kBAAzB,EAA6CJ,OAA7C,CAAf;AACAE,IAAAA,QAAQ,CAACG,OAAT,CAAiBP,iBAAiB,CAACQ,OAAnC;AACD,GAPD;;AASA,QAAMF,kBAAkB,GAAIG,OAAD,IAAa;AACtCA,IAAAA,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAW;AACzB,UAAIA,KAAK,CAACC,iBAAN,GAA0B,GAA9B,EAAmC;AACjCC,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,cAAC,OAAD;AAAS,UAAA,KAAK,EAAE,CAAhB;AAAmB,UAAA,GAAG,EAAEd,OAAxB;AAAiC,UAAA,KAAK,EAAE,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,CAAC;AAAEkB,UAAAA;AAAF,SAAD,KACC;AAAG,UAAA,GAAG,EAAEhB,aAAa,IAAIgB,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsClB,OAAtC,CAFJ;AAKD;AACF,KATD;AAUD,GAXD;;AAaA,SACA;AACA;AACE;AAAK,MAAA,GAAG,EAAEG,iBAAV;AAA6B,MAAA,SAAS,EAAG,GAAEN,MAAM,CAAC,cAAD,CAAiB,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAG,GAAEA,MAAM,CAAC,UAAD,CAAa,mDADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,MAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,IAAvB;AAA4B,MAAA,MAAM,EAAC,IAAnC;AAAwC,MAAA,KAAK,EAAC,MAA9C;AAAqD,MAAA,IAAI,EAAEE,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,EAME;AAAK,MAAA,SAAS,EAAEF,MAAM,CAAC,iBAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIG,OAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,WAAJ,CAFF,CANF,CAHF,CAcA;AACA;;AAfA;AAiBD","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport CountUp from 'react-countup';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport styles from './CounterCard.module.scss';\r\n\r\ninterface Props {\r\n  icon: IconProp;\r\n  counter: number;\r\n  description: string;\r\n  withAnimation?: boolean;\r\n}\r\n\r\nexport default function CounterCard({\r\n  icon,\r\n  counter,\r\n  description,\r\n  withAnimation = true,\r\n}: Props) {\r\n  let counterWrapperRef = useRef(null);\r\n  useEffect(() => {\r\n    initIntersectionObserver();\r\n  }, []);\r\n\r\n  const initIntersectionObserver = () => {\r\n    const options = {\r\n      threshold: 0.5,\r\n    };\r\n\r\n    let observer = new IntersectionObserver(detectIntersection, options);\r\n    observer.observe(counterWrapperRef.current);\r\n  };\r\n\r\n  const detectIntersection = (entries) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.intersectionRatio > 0.5) {\r\n        console.log(entry);\r\n        <CountUp start={0} end={counter} delay={0}>\r\n          {({ countUpRef }) => (\r\n            <p ref={withAnimation && countUpRef}>{counter}</p>\r\n          )}\r\n        </CountUp>;\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n  // <CountUp start={0} end={counter} delay={0}>\r\n  //   {({ countUpRef }) => (\r\n    <div ref={counterWrapperRef} className={`${styles['counter-card']} text-center`}>\r\n      <div\r\n        className={`${styles['icon-box']} d-flex justify-content-center align-items-center`}\r\n      >\r\n        <FontAwesomeIcon width=\"30\" height=\"30\" color=\"#fff\" icon={icon} />\r\n      </div>\r\n      <div className={styles['counter-details']}>\r\n        <p>{counter}</p>\r\n        <p>{description}</p>\r\n      </div>\r\n    </div>\r\n  //   )}\r\n  // </CountUp>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}