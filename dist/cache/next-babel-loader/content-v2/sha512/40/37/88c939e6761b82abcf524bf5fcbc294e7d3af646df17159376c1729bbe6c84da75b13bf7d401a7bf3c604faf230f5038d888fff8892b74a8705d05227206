{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\ExercisesPage\\\\ExercisesPage.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getLessonById } from '~/services/Constants';\nimport ExerciseService from '~/services/Exercise.service';\nimport LessonExerciseService from '~/services/LessonExercise.service';\nimport ExercisePreview from '../ExercisePreview';\nimport PageContainer from '../PageContainer';\nimport Spinner from '../Spinner';\nimport { SUBMISSION_STATUS } from '~/../shared/SharedConstants';\nimport styles from './ExercisesPage.module.scss';\n\nfunction ExercisesPage(_ref) {\n  _s();\n\n  var _this = this;\n\n  var user = _ref.user;\n\n  var _useState = useState(undefined),\n      submissions = _useState[0],\n      setSubmissions = _useState[1];\n\n  var _useState2 = useState(undefined),\n      lessonExercises = _useState2[0],\n      setLessonExercises = _useState2[1];\n\n  var isLoggedIn = !!user.info;\n  useEffect(function () {\n    LessonExerciseService.getAllLessonExercises().then(function (exercises) {\n      return setLessonExercises(exercises);\n    })[\"catch\"](function (err) {\n      return console.error(err);\n    });\n\n    if (isLoggedIn) {\n      ExerciseService.getSolvedExercises().then(function (resp) {\n        return setSubmissions(resp);\n      })[\"catch\"](function (err) {\n        return console.error(err);\n      });\n    } else {\n      setSubmissions([]);\n    }\n  }, []); // merge submission & exercise data to show\n  // ExercisePreview component together with submitted/preview data\n\n  var mergedData = {};\n\n  if (submissions && lessonExercises) {\n    lessonExercises.forEach(function (ex) {\n      var lesson = ex.lesson;\n      var matchedSubmission = submissions.find(function (sub) {\n        return sub.exercise._id === ex._id;\n      });\n      mergedData[lesson] = mergedData[lesson] || [];\n\n      if (matchedSubmission) {\n        mergedData[lesson].push(matchedSubmission);\n      } else {\n        mergedData[lesson].push({\n          _id: ex._id,\n          exercise: ex,\n          feedbacks: [],\n          status: null,\n          readOnly: false\n        });\n      }\n    });\n  }\n\n  return __jsx(PageContainer, {\n    className: styles['exercises-page'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \" Exerci\\u021Bii \"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Focusul nostru e s\\u0103 facem Code review, pentru c\\u0103 \\u0219tim c\\u0103 aceasta este cea mai bun\\u0103 metod\\u0103 de a \\xEEnv\\u0103\\u021Ba.\", ' '), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Pentru ca tot procesul s\\u0103 fie unul cu adev\\u0103rat util, dup\\u0103 ce parcurgi lec\\u021Biile de pe platform\\u0103, noi, developeri cu experien\\u021B\\u0103 \\xEE\\u021Bi vom oferi\", ' ', __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"feedback\"), ' ', \"\\u0219i suport.\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Asta pentru c\\u0103 vrem s\\u0103 ajut\\u0103m c\\xE2t mai mult\\u0103 lume s\\u0103 \\xEEnve\\u021Be despre acest domeniu pe care \\xEEl consider\\u0103m unul dintre cele mai faine \\u0219i nu vom pune pre\\u021B pe aceast\\u0103 experien\\u021B\\u0103. \\u0218i noi am fost la \\xEEnceput \\xEEn drumul nostru \\u0219i \\u0219tim c\\xE2t de greu este de unul singur. A\\u0219a c\\u0103 tot ce se \\xEEnt\\xE2mpl\\u0103 aici e un\", ' ', __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"efort de comunitate, pentru comunitate\"), \".\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Po\\u021Bi afla mai multe detalii despre scopul platformei\", __jsx(\"a\", {\n    href: \"https://frontend.ro/intro/despre-noi#introducere\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \" aici\"), \".\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Ai mai jos exerci\\u021Biile pe care le po\\u021Bi rezolva, iar noi \\xEE\\u021Bi vom trimite feedback pentru fiecare. Ele sunt \\xEEmp\\u0103r\\u021Bite pe lec\\u021Bii.\"), (!lessonExercises || !submissions) && __jsx(Spinner, {\n    showText: true,\n    text: \"\\xCEnc\\u0103rc\\u0103m exerci\\u021Biile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), Object.keys(mergedData).map(function (lesson) {\n    return __jsx(\"section\", {\n      className: styles['lesson-section'],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, getLessonById(lesson).type), getLessonById(lesson).title), __jsx(\"div\", {\n      className: styles['exercises-wrapper'],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, mergedData[lesson].map(function (submission) {\n      return __jsx(ExercisePreview, {\n        key: submission._id,\n        exercise: submission.exercise,\n        href: \"rezolva/\".concat(submission.exercise._id),\n        viewMode: \"STUDENT\",\n        feedbackCount: submission.feedbacks.filter(function (f) {\n          return f.type === 'improvement';\n        }).length,\n        isApproved: submission.status === SUBMISSION_STATUS.DONE,\n        readOnly: [SUBMISSION_STATUS.AWAITING_REVIEW, SUBMISSION_STATUS.DONE].includes(submission.status),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      });\n    })));\n  }));\n}\n\n_s(ExercisesPage, \"WZM71zerQO1gyABRSJamI14E9PU=\");\n\n_c = ExercisesPage;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nvar connector = connect(mapStateToProps);\nexport default _c2 = connector(ExercisesPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ExercisesPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/ExercisesPage/ExercisesPage.tsx"],"names":["React","useEffect","useState","connect","getLessonById","ExerciseService","LessonExerciseService","ExercisePreview","PageContainer","Spinner","SUBMISSION_STATUS","styles","ExercisesPage","user","undefined","submissions","setSubmissions","lessonExercises","setLessonExercises","isLoggedIn","info","getAllLessonExercises","then","exercises","err","console","error","getSolvedExercises","resp","mergedData","forEach","ex","lesson","matchedSubmission","find","sub","exercise","_id","push","feedbacks","status","readOnly","Object","keys","map","type","title","submission","filter","f","length","DONE","AWAITING_REVIEW","includes","mapStateToProps","state","connector"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { Submission } from '~/redux/exercise-submissions/types';\r\nimport { Exercise } from '~/redux/user/types';\r\nimport { getLessonById } from '~/services/Constants';\r\nimport ExerciseService from '~/services/Exercise.service';\r\nimport LessonExerciseService from '~/services/LessonExercise.service';\r\nimport ExercisePreview from '../ExercisePreview';\r\nimport PageContainer from '../PageContainer';\r\nimport Spinner from '../Spinner';\r\nimport { SUBMISSION_STATUS } from '~/../shared/SharedConstants';\r\nimport { RootState } from '~/redux/root.reducer';\r\n\r\nimport styles from './ExercisesPage.module.scss';\r\n\r\nfunction ExercisesPage({ user }: ConnectedProps<typeof connector>) {\r\n  const [submissions, setSubmissions] = useState<Submission[]>(undefined);\r\n  const [lessonExercises, setLessonExercises] = useState<Exercise[]>(undefined);\r\n\r\n  const isLoggedIn = !!user.info;\r\n\r\n  useEffect(() => {\r\n    LessonExerciseService.getAllLessonExercises()\r\n      .then((exercises) => setLessonExercises(exercises))\r\n      .catch((err) => console.error(err));\r\n\r\n    if (isLoggedIn) {\r\n      ExerciseService.getSolvedExercises()\r\n        .then((resp) => setSubmissions(resp))\r\n        .catch((err) => console.error(err));\r\n    } else {\r\n      setSubmissions([]);\r\n    }\r\n  }, []);\r\n\r\n  // merge submission & exercise data to show\r\n  // ExercisePreview component together with submitted/preview data\r\n  const mergedData = {};\r\n  if (submissions && lessonExercises) {\r\n    lessonExercises.forEach((ex) => {\r\n      const { lesson } = ex;\r\n      const matchedSubmission = submissions.find(\r\n        (sub) => sub.exercise._id === ex._id,\r\n      );\r\n\r\n      mergedData[lesson] = mergedData[lesson] || [];\r\n      if (matchedSubmission) {\r\n        mergedData[lesson].push(matchedSubmission);\r\n      } else {\r\n        mergedData[lesson].push({\r\n          _id: ex._id,\r\n          exercise: ex,\r\n          feedbacks: [],\r\n          status: null,\r\n          readOnly: false,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PageContainer className={styles['exercises-page']}>\r\n      <h1> Exerciții </h1>\r\n      <p>\r\n        Focusul nostru e să facem Code review, pentru că știm că aceasta este\r\n        cea mai bună metodă de a învăța.\r\n        {' '}\r\n      </p>\r\n      <p>\r\n        Pentru ca tot procesul să fie unul cu adevărat util, după ce parcurgi\r\n        lecțiile de pe platformă, noi, developeri cu experiență îți vom oferi\r\n        {' '}\r\n        <strong>feedback</strong>\r\n        {' '}\r\n        și suport.\r\n      </p>\r\n      <p>\r\n        Asta pentru că vrem să ajutăm cât mai multă lume să învețe despre acest\r\n        domeniu pe care îl considerăm unul dintre cele mai faine și nu vom pune\r\n        preț pe această experiență. Și noi am fost la început în drumul nostru\r\n        și știm cât de greu este de unul singur. Așa că tot ce se întâmplă aici\r\n        e un\r\n        {' '}\r\n        <strong>efort de comunitate, pentru comunitate</strong>\r\n        .\r\n      </p>\r\n      <p>\r\n        Poți afla mai multe detalii despre scopul platformei\r\n        <a href=\"https://frontend.ro/intro/despre-noi#introducere\"> aici</a>\r\n        .\r\n      </p>\r\n      <p>\r\n        Ai mai jos exercițiile pe care le poți rezolva, iar noi îți vom trimite\r\n        feedback pentru fiecare. Ele sunt împărțite pe lecții.\r\n      </p>\r\n\r\n      {(!lessonExercises || !submissions) && (\r\n        <Spinner showText text=\"Încărcăm exercițiile\" />\r\n      )}\r\n      {Object.keys(mergedData).map((lesson) => (\r\n        <section className={styles['lesson-section']}>\r\n          <h2>\r\n            <span>{getLessonById(lesson).type}</span>\r\n            {getLessonById(lesson).title}\r\n          </h2>\r\n          <div className={styles['exercises-wrapper']}>\r\n            {mergedData[lesson].map((submission) => (\r\n              <ExercisePreview\r\n                key={submission._id}\r\n                exercise={submission.exercise}\r\n                href={`rezolva/${submission.exercise._id}`}\r\n                viewMode=\"STUDENT\"\r\n                feedbackCount={\r\n                  submission.feedbacks.filter((f) => f.type === 'improvement')\r\n                    .length\r\n                }\r\n                isApproved={submission.status === SUBMISSION_STATUS.DONE}\r\n                readOnly={[\r\n                  SUBMISSION_STATUS.AWAITING_REVIEW,\r\n                  SUBMISSION_STATUS.DONE,\r\n                ].includes(submission.status)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </section>\r\n      ))}\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(ExercisesPage);\r\n"]},"metadata":{},"sourceType":"module"}