{"ast":null,"code":"import _toConsumableArray from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Editor\\\\CompleteEditor\\\\CompleteEditor.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport * as Monaco from '../monaco';\nimport FileIcons from '~/services/utils/FileIcons';\nimport SubmissionService from '~/services/Submission.service';\nimport FolderStructure from '~/services/utils/FolderStructure';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport Feedbacks from '../Feedbacks';\nimport MonacoBase from '../Monaco.base';\nimport InitForm from '../InitForm/InitForm';\nimport AskTooltip from './AskTooltip/AskTooltip';\nimport ViewTooltip from './ViewTooltip/ViewTooltip';\nimport FileSwitcher from '../FileSwitcher/FileSwitcher';\nimport styles from '../Editor.module.scss';\n\nvar MonacoEditor = /*#__PURE__*/function (_MonacoBase) {\n  _inherits(MonacoEditor, _MonacoBase);\n\n  var _super = _createSuper(MonacoEditor);\n\n  // FIXME ðŸ‘‡\n  // FIXME ðŸ‘‡\n  function MonacoEditor(props) {\n    var _this;\n\n    _classCallCheck(this, MonacoEditor);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"decorationsMap\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"oldDecorations\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"initEditor\", function () {\n      var _this$Feedbacks;\n\n      var _this$props = _this.props,\n          readOnly = _this$props.readOnly,\n          askTooltip = _this$props.askTooltip;\n      var _this$state = _this.state,\n          folderStructure = _this$state.folderStructure,\n          selectedFileKey = _this$state.selectedFileKey;\n\n      if (!folderStructure.files.length && !folderStructure.folders.length) {\n        return;\n      }\n\n      var _folderStructure$getF = folderStructure.getFile(selectedFileKey),\n          file = _folderStructure$getF.file;\n\n      _this.editor = Monaco.create(_this.editorRef.current, {\n        value: file ? file.content : '',\n        readOnly: readOnly,\n        hover: {\n          enabled: true\n        },\n        scrollBeyondLastLine: false\n      });\n\n      (_this$Feedbacks = _this.Feedbacks).add.apply(_this$Feedbacks, _toConsumableArray(_this.props.feedbacks));\n\n      Monaco.extendWithDecorate(_this.editor);\n      Monaco.extendWithHover(_this.editor, _this.showViewTooltip, _this.hideViewTooltip);\n\n      if (file) {\n        _this.onFileSelect(file.key);\n\n        _this.updateLanguageBasedOnFileName(file.name);\n\n        _this.Feedbacks.getAll().filter(function (f) {\n          return f.file_key === file.key;\n        }).forEach(function (f) {\n          return _this.decorate(f.getDecorationData());\n        });\n      }\n\n      if (askTooltip) {\n        Monaco.extendWithCursorSelectionTooltip(_this.editor, function (tooltipPosition, cursorSelection) {\n          _this.setState({\n            cursorSelection: cursorSelection,\n            tooltips: Object.assign(_this.state.tooltips, {\n              ask: _objectSpread({\n                visible: true\n              }, tooltipPosition)\n            })\n          });\n        }, _this.hideAskTooltip);\n      }\n\n      _this.oldDecorations = _this.editor.getCustomDecorations();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showViewTooltip\", function (feedback, tooltipPosition) {\n      clearTimeout(_this.timeoutId);\n\n      if (tooltipPosition === undefined) {\n        tooltipPosition = _this.editor.getBestTooltipPosition(feedback.position[0], (feedback.position[1] + feedback.position[3]) / 2);\n      }\n\n      _this.setState({\n        tooltips: Object.assign(_this.state.tooltips, {\n          view: _objectSpread({\n            id: feedback._id || feedback.timestamp,\n            timestamp: feedback.timestamp,\n            visible: true\n          }, tooltipPosition)\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideViewTooltip\", function () {\n      _this.timeoutId = setTimeout(function () {\n        _this.setState({\n          tooltips: Object.assign(_this.state.tooltips, {\n            view: {\n              id: _this.state.tooltips.view.id,\n              visible: false\n            }\n          })\n        });\n      }, 500);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFeedbackDone\", function (feedbackId) {\n      _this.props.onFeedbackDone(feedbackId);\n\n      _this.Feedbacks[\"delete\"](feedbackId);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"decorate\", function (decorationData) {\n      var _this$editor;\n\n      (_this$editor = _this.editor).decorate.apply(_this$editor, [decorationData].concat(_toConsumableArray(decorationData.position)));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onGiveFeedback\", function (feedback) {\n      var newFeedback = _this.Feedbacks.add(Object.assign(feedback, {\n        position: [_this.state.cursorSelection.startLineNumber, _this.state.cursorSelection.startColumn, _this.state.cursorSelection.endLineNumber, _this.state.cursorSelection.endColumn],\n        readOnly: true,\n        file_key: _this.state.selectedFileKey\n      }))[0];\n\n      if (_this.props.onFeedbackAdded) {\n        _this.props.onFeedbackAdded(_this.Feedbacks);\n      }\n\n      _this.editor.decorate(newFeedback.getDecorationData(), _this.state.cursorSelection);\n\n      _this.hideAskTooltip();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideAskTooltip\", function () {\n      _this.setState({\n        cursorSelection: null,\n        tooltips: Object.assign(_this.state.tooltips, {\n          ask: {\n            visible: false\n          }\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onModelChange\", function () {\n      var _this$state2 = _this.state,\n          folderStructure = _this$state2.folderStructure,\n          selectedFileKey = _this$state2.selectedFileKey;\n      folderStructure.setContent(selectedFileKey, _this.editor.getValue());\n\n      if (typeof _this.props.onChange === 'function') {\n        _this.props.onChange(_this.getFolderStructure());\n      }\n\n      var emptyDecorations = _this.editor.getEmptyDecorations();\n\n      if (!emptyDecorations.length) {\n        _this.oldDecorations = _this.editor.getCustomDecorations();\n      } else {\n        emptyDecorations.forEach(function (dec) {\n          return _this.unDecorate(dec.id);\n        });\n        SweetAlertService.confirm({\n          title: 'Hold on!',\n          text: 'UrmeazÄƒ sÄƒ È™tergi niÈ™te cod ce conÈ›ine feedback-uri. EÈ™ti sigur?',\n          confirmButtonText: 'Continue',\n          preConfirm: function preConfirm() {\n            SweetAlertService.toggleLoading();\n            return Promise.all(emptyDecorations.map(function (dec) {\n              return SubmissionService.markFeedbackAsDone(dec._id);\n            })).then(function (resp) {\n              resp.forEach(function (_, index) {\n                return _this.onFeedbackDone(emptyDecorations[index].id);\n              });\n              return resp;\n            });\n          }\n        }).then(function (result) {\n          // FIXME ðŸ‘‡ (correct types)\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          if (result.value) {// mark feedback as done\n          } else {\n            _this._baseModelChangeListener.dispose();\n\n            _this.editor.getModel().undo();\n\n            emptyDecorations.forEach(function (dec) {\n              var matchingOldDecId = Object.keys(_this.oldDecorations).find(function (decId) {\n                return _this.oldDecorations[decId].data.id === dec.id;\n              });\n\n              _this.editor.decorate(dec, _this.oldDecorations[matchingOldDecId].range);\n            });\n            _this._baseModelChangeListener = _this.editor.onDidChangeModelContent(_this.onModelChange);\n\n            if (typeof _this.props.onChange === 'function') {\n              _this.props.onChange(_this.getFolderStructure());\n            }\n          }\n        });\n      }\n    });\n\n    _this.Feedbacks = new Feedbacks(_assertThisInitialized(_this));\n    _this.state = {\n      tooltips: {\n        ask: {},\n        view: {}\n      },\n      folderStructure: new FolderStructure(props.folderStructure)\n    };\n    _this.timeoutId = null;\n    _this.decorationsMap = {};\n    _this.getValue = _this.getValue.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MonacoEditor, [{\n    key: \"getConfiguration\",\n    value: function getConfiguration() {\n      return this.editor.getConfiguration();\n    }\n  }, {\n    key: \"unDecorate\",\n    value: function unDecorate(idOrtimestamp) {\n      if (!this.editor.decorationsMap) {\n        return;\n      }\n\n      var decorationEntry = Object.entries(this.editor.decorationsMap).find(function (entry) {\n        return entry[1].id === idOrtimestamp || entry[1].timestamp === idOrtimestamp;\n      });\n\n      if (decorationEntry) {\n        this.editor.unDecorate(decorationEntry[0]);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          askTooltip = _this$props2.askTooltip,\n          readOnly = _this$props2.readOnly,\n          feedbacks = _this$props2.feedbacks;\n      var _this$state3 = this.state,\n          folderStructure = _this$state3.folderStructure,\n          selectedFileKey = _this$state3.selectedFileKey,\n          fixedHeight = _this$state3.fixedHeight,\n          fileSwitcherWidth = _this$state3.fileSwitcherWidth,\n          isDropable = _this$state3.isDropable;\n      var className = this.props.className || '';\n      var selectedFile = folderStructure.getFile(selectedFileKey).file;\n      return __jsx(\"div\", {\n        className: \"\\n          \".concat(className, \"\\n          \").concat(styles['editor-wrapper'], \" \\n          \").concat(isDropable ? styles['is--dropable'] : '', \"\\n        \"),\n        style: {\n          height: fixedHeight ? \"\".concat(fixedHeight, \"px\") : 'initial'\n        },\n        onDragEnter: this.onDragEnter,\n        onDragLeave: this.onDragLeave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 7\n        }\n      }, folderStructure.files.length || folderStructure.folders.length ? __jsx(React.Fragment, null, __jsx(FileSwitcher // FIXME ðŸ‘‡\n      , {\n        maxHeight: 500,\n        feedbacks: feedbacks,\n        folderStructure: folderStructure,\n        selectedFileKey: selectedFileKey,\n        readOnly: readOnly,\n        onFileAdd: this.onFileAdd,\n        onFolderAdd: this.onFolderAdd,\n        onSelect: this.onFileSelect,\n        onFileRename: this.onFileRename,\n        onFolderRename: this.onFolderRename,\n        onFileDelete: this.onFileDelete,\n        onFolderDelete: this.onFolderDelete,\n        onDownload: this.onDownload,\n        onResize: this.onResize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }\n      }), __jsx(\"div\", {\n        className: \"\\n                \".concat(styles.editor, \"\\n                \").concat(selectedFileKey ? '' : styles['has--no-selected-file'], \"\\n              \"),\n        style: {\n          width: \"calc(100% - \".concat(fileSwitcherWidth, \"px)\"),\n          maxWidth: \"calc(100% - \".concat(fileSwitcherWidth, \"px)\"),\n          // without this it doesn't resize in FF\n          height: fixedHeight ? \"\".concat(fixedHeight, \"px\") : ''\n        },\n        ref: this.editorRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }\n      }), selectedFile && __jsx(\"p\", {\n        className: \"\".concat(styles['selected-file'], \" d-flex justify-content-center align-items-center\"),\n        title: selectedFile.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }\n      }, __jsx(\"img\", {\n        width: \"20\",\n        src: FileIcons.getIconUrl(selectedFile.name),\n        alt: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }\n      }), __jsx(\"span\", {\n        className: \"ellipsis-overflow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 17\n        }\n      }, selectedFile.name)), __jsx(\"label\", {\n        className: \"upload-label pin-full center--flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }\n      }, __jsx(\"span\", {\n        className: \"icon-check mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 17\n        }\n      }), \"Drop to replace\"), __jsx(\"input\", {\n        className: \"pin-full\",\n        type: \"file\",\n        multiple: true,\n        onChange: this.onReplace,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }\n      }))) : __jsx(InitForm, {\n        createFirstFile: this.createFirstFile,\n        uploadStructure: this.uploadStructure,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }\n      }), __jsx(ViewTooltip, {\n        onFeedbackDone: this.onFeedbackDone,\n        visible: this.state.tooltips.view.visible,\n        feedback: this.Feedbacks.get(this.state.tooltips.view.id || {}),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 9\n        }\n      }), askTooltip && this.state.tooltips.ask && __jsx(AskTooltip, {\n        visible: this.state.tooltips.ask.visible,\n        onAsk: this.onGiveFeedback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return MonacoEditor;\n}(MonacoBase);\n\nexport default MonacoEditor;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Editor/CompleteEditor/CompleteEditor.tsx"],"names":["React","Monaco","FileIcons","SubmissionService","FolderStructure","SweetAlertService","Feedbacks","MonacoBase","InitForm","AskTooltip","ViewTooltip","FileSwitcher","styles","MonacoEditor","props","readOnly","askTooltip","state","folderStructure","selectedFileKey","files","length","folders","getFile","file","editor","create","editorRef","current","value","content","hover","enabled","scrollBeyondLastLine","add","feedbacks","extendWithDecorate","extendWithHover","showViewTooltip","hideViewTooltip","onFileSelect","key","updateLanguageBasedOnFileName","name","getAll","filter","f","file_key","forEach","decorate","getDecorationData","extendWithCursorSelectionTooltip","tooltipPosition","cursorSelection","setState","tooltips","Object","assign","ask","visible","hideAskTooltip","oldDecorations","getCustomDecorations","feedback","clearTimeout","timeoutId","undefined","getBestTooltipPosition","position","view","id","_id","timestamp","setTimeout","feedbackId","onFeedbackDone","decorationData","newFeedback","startLineNumber","startColumn","endLineNumber","endColumn","onFeedbackAdded","setContent","getValue","onChange","getFolderStructure","emptyDecorations","getEmptyDecorations","dec","unDecorate","confirm","title","text","confirmButtonText","preConfirm","toggleLoading","Promise","all","map","markFeedbackAsDone","then","resp","_","index","result","_baseModelChangeListener","dispose","getModel","undo","matchingOldDecId","keys","find","decId","data","range","onDidChangeModelContent","onModelChange","decorationsMap","bind","getConfiguration","idOrtimestamp","decorationEntry","entries","entry","fixedHeight","fileSwitcherWidth","isDropable","className","selectedFile","height","onDragEnter","onDragLeave","onFileAdd","onFolderAdd","onFileRename","onFolderRename","onFileDelete","onFolderDelete","onDownload","onResize","width","maxWidth","getIconUrl","onReplace","createFirstFile","uploadStructure","get","onGiveFeedback"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as Monaco from '../monaco';\r\nimport FileIcons from '~/services/utils/FileIcons';\r\nimport SubmissionService from '~/services/Submission.service';\r\nimport FolderStructure from '~/services/utils/FolderStructure';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\n\r\nimport Feedbacks from '../Feedbacks';\r\nimport MonacoBase from '../Monaco.base';\r\nimport InitForm from '../InitForm/InitForm';\r\nimport AskTooltip from './AskTooltip/AskTooltip';\r\nimport ViewTooltip from './ViewTooltip/ViewTooltip';\r\nimport FileSwitcher from '../FileSwitcher/FileSwitcher';\r\n\r\nimport styles from '../Editor.module.scss';\r\n\r\nclass MonacoEditor extends MonacoBase {\r\n  // FIXME ðŸ‘‡\r\n  private decorationsMap: any;\r\n\r\n  // FIXME ðŸ‘‡\r\n  private oldDecorations: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.Feedbacks = new Feedbacks(this);\r\n    this.state = {\r\n      tooltips: {\r\n        ask: {},\r\n        view: {},\r\n      },\r\n      folderStructure: new FolderStructure(props.folderStructure),\r\n    };\r\n\r\n    this.timeoutId = null;\r\n    this.decorationsMap = {};\r\n\r\n    this.getValue = this.getValue.bind(this);\r\n  }\r\n\r\n  initEditor = () => {\r\n    const { readOnly, askTooltip } = this.props;\r\n    const { folderStructure, selectedFileKey } = this.state;\r\n\r\n    if (!folderStructure.files.length && !folderStructure.folders.length) {\r\n      return;\r\n    }\r\n\r\n    let { file } = folderStructure.getFile(selectedFileKey);\r\n\r\n    this.editor = Monaco.create(this.editorRef.current, {\r\n      value: file ? file.content : '',\r\n      readOnly,\r\n      hover: {\r\n        enabled: true,\r\n      },\r\n      scrollBeyondLastLine: false,\r\n    });\r\n    this.Feedbacks.add(...this.props.feedbacks);\r\n\r\n    Monaco.extendWithDecorate(this.editor);\r\n    Monaco.extendWithHover(this.editor, this.showViewTooltip, this.hideViewTooltip);\r\n\r\n    if (file) {\r\n      this.onFileSelect(file.key);\r\n      this.updateLanguageBasedOnFileName(file.name);\r\n\r\n      this.Feedbacks.getAll()\r\n        .filter((f) => f.file_key === file.key)\r\n        .forEach((f) => this.decorate(f.getDecorationData()));\r\n    }\r\n\r\n    if (askTooltip) {\r\n      Monaco.extendWithCursorSelectionTooltip(\r\n        this.editor,\r\n        (tooltipPosition, cursorSelection) => {\r\n          this.setState({\r\n            cursorSelection,\r\n            tooltips: Object.assign(this.state.tooltips, {\r\n              ask: { visible: true, ...tooltipPosition },\r\n            }),\r\n          });\r\n        },\r\n        this.hideAskTooltip,\r\n      );\r\n    }\r\n    this.oldDecorations = this.editor.getCustomDecorations();\r\n  }\r\n\r\n  showViewTooltip = (feedback, tooltipPosition) => {\r\n    clearTimeout(this.timeoutId);\r\n\r\n    if (tooltipPosition === undefined) {\r\n      tooltipPosition = this.editor.getBestTooltipPosition(\r\n        feedback.position[0],\r\n        (feedback.position[1] + feedback.position[3]) / 2,\r\n      );\r\n    }\r\n\r\n    this.setState({\r\n      tooltips: Object.assign(this.state.tooltips, {\r\n        view: {\r\n\r\n          id: feedback._id || feedback.timestamp,\r\n          timestamp: feedback.timestamp,\r\n          visible: true,\r\n          ...tooltipPosition,\r\n        },\r\n      }),\r\n    });\r\n  }\r\n\r\n  hideViewTooltip = () => {\r\n    this.timeoutId = setTimeout(() => {\r\n      this.setState({\r\n        tooltips: Object.assign(this.state.tooltips, {\r\n          view: {\r\n            id: this.state.tooltips.view.id,\r\n            visible: false,\r\n          },\r\n        }),\r\n      });\r\n    }, 500);\r\n  }\r\n\r\n  getConfiguration() {\r\n    return this.editor.getConfiguration();\r\n  }\r\n\r\n  onFeedbackDone = (feedbackId) => {\r\n    this.props.onFeedbackDone(feedbackId);\r\n    this.Feedbacks.delete(feedbackId);\r\n  }\r\n\r\n  decorate = (decorationData) => {\r\n    this.editor.decorate(decorationData, ...decorationData.position);\r\n  }\r\n\r\n  unDecorate(idOrtimestamp) {\r\n    if (!this.editor.decorationsMap) {\r\n      return;\r\n    }\r\n\r\n    let decorationEntry = Object.entries(this.editor.decorationsMap).find(\r\n      (entry: any) => entry[1].id === idOrtimestamp || entry[1].timestamp === idOrtimestamp,\r\n    );\r\n\r\n    if (decorationEntry) {\r\n      this.editor.unDecorate(decorationEntry[0]);\r\n    }\r\n  }\r\n\r\n  onGiveFeedback = (feedback) => {\r\n    const newFeedback = this.Feedbacks.add(\r\n      Object.assign(feedback, {\r\n        position: [\r\n          this.state.cursorSelection.startLineNumber,\r\n          this.state.cursorSelection.startColumn,\r\n          this.state.cursorSelection.endLineNumber,\r\n          this.state.cursorSelection.endColumn,\r\n        ],\r\n        readOnly: true,\r\n        file_key: this.state.selectedFileKey,\r\n      }),\r\n    )[0];\r\n\r\n    if (this.props.onFeedbackAdded) {\r\n      this.props.onFeedbackAdded(this.Feedbacks);\r\n    }\r\n\r\n    this.editor.decorate(newFeedback.getDecorationData(), this.state.cursorSelection);\r\n    this.hideAskTooltip();\r\n  }\r\n\r\n  hideAskTooltip = () => {\r\n    this.setState({\r\n      cursorSelection: null,\r\n      tooltips: Object.assign(this.state.tooltips, {\r\n        ask: {\r\n          visible: false,\r\n        },\r\n      }),\r\n    });\r\n  }\r\n\r\n  onModelChange = () => {\r\n    const { folderStructure, selectedFileKey } = this.state;\r\n    folderStructure.setContent(selectedFileKey, this.editor.getValue());\r\n\r\n    if (typeof this.props.onChange === 'function') {\r\n      this.props.onChange(this.getFolderStructure());\r\n    }\r\n\r\n    const emptyDecorations = this.editor.getEmptyDecorations();\r\n\r\n    if (!emptyDecorations.length) {\r\n      this.oldDecorations = this.editor.getCustomDecorations();\r\n    } else {\r\n      emptyDecorations.forEach((dec) => this.unDecorate(dec.id));\r\n\r\n      SweetAlertService.confirm({\r\n        title: 'Hold on!',\r\n        text: 'UrmeazÄƒ sÄƒ È™tergi niÈ™te cod ce conÈ›ine feedback-uri. EÈ™ti sigur?',\r\n        confirmButtonText: 'Continue',\r\n        preConfirm: () => {\r\n          SweetAlertService.toggleLoading();\r\n          return Promise.all(\r\n            emptyDecorations.map((dec) => SubmissionService.markFeedbackAsDone(dec._id)),\r\n          ).then((resp) => {\r\n            resp.forEach((_, index) => this.onFeedbackDone(emptyDecorations[index].id));\r\n            return resp;\r\n          });\r\n        },\r\n      }).then((result) => {\r\n        // FIXME ðŸ‘‡ (correct types)\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        if (result.value) {\r\n          // mark feedback as done\r\n        } else {\r\n          this._baseModelChangeListener.dispose();\r\n\r\n          this.editor.getModel().undo();\r\n\r\n          emptyDecorations.forEach((dec) => {\r\n            const matchingOldDecId = Object.keys(\r\n              this.oldDecorations,\r\n            ).find((decId) => this.oldDecorations[decId].data.id === dec.id);\r\n            this.editor.decorate(dec, this.oldDecorations[matchingOldDecId].range);\r\n          });\r\n\r\n          this._baseModelChangeListener = this.editor.onDidChangeModelContent(this.onModelChange);\r\n\r\n          if (typeof this.props.onChange === 'function') {\r\n            this.props.onChange(this.getFolderStructure());\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      askTooltip,\r\n      readOnly,\r\n      feedbacks,\r\n    } = this.props;\r\n    const {\r\n      folderStructure, selectedFileKey, fixedHeight, fileSwitcherWidth, isDropable,\r\n    } = this.state;\r\n    const className = this.props.className || '';\r\n    const selectedFile = folderStructure.getFile(selectedFileKey).file;\r\n\r\n    return (\r\n      <div\r\n        className={`\r\n          ${className}\r\n          ${styles['editor-wrapper']} \r\n          ${isDropable ? styles['is--dropable'] : ''}\r\n        `}\r\n        style={{\r\n          height: fixedHeight ? `${fixedHeight}px` : 'initial',\r\n        }}\r\n        onDragEnter={this.onDragEnter}\r\n        onDragLeave={this.onDragLeave}\r\n      >\r\n        {/* {toggleableHeight && (\r\n        <button\r\n          className={\r\n            `editor-wrapper__fit-btn\r\n            icon-btn\r\n            ${fixedHeight ? 'icon-minimize-2' : 'icon-maximize-2'\r\n        }`\r\n}\r\n          title={fixedHeight ? 'Fixed size' : 'Fit to code'}\r\n          onClick={this.toggleFit}\r\n        />\r\n        )} */}\r\n        {folderStructure.files.length || folderStructure.folders.length ? (\r\n          <>\r\n            <FileSwitcher\r\n              // FIXME ðŸ‘‡\r\n              maxHeight={500}\r\n              feedbacks={feedbacks}\r\n              folderStructure={folderStructure}\r\n              selectedFileKey={selectedFileKey}\r\n              readOnly={readOnly}\r\n              onFileAdd={this.onFileAdd}\r\n              onFolderAdd={this.onFolderAdd}\r\n              onSelect={this.onFileSelect}\r\n              onFileRename={this.onFileRename}\r\n              onFolderRename={this.onFolderRename}\r\n              onFileDelete={this.onFileDelete}\r\n              onFolderDelete={this.onFolderDelete}\r\n              onDownload={this.onDownload}\r\n              onResize={this.onResize}\r\n            />\r\n            <div\r\n              className={`\r\n                ${styles.editor}\r\n                ${selectedFileKey ? '' : styles['has--no-selected-file']}\r\n              `}\r\n              style={{\r\n                width: `calc(100% - ${fileSwitcherWidth}px)`,\r\n                maxWidth: `calc(100% - ${fileSwitcherWidth}px)`, // without this it doesn't resize in FF\r\n                height: fixedHeight ? `${fixedHeight}px` : '',\r\n              }}\r\n              ref={this.editorRef}\r\n            />\r\n            {selectedFile && (\r\n              <p className={`${styles['selected-file']} d-flex justify-content-center align-items-center`} title={selectedFile.name}>\r\n                <img width=\"20\" src={FileIcons.getIconUrl(selectedFile.name)} alt=\"icon\" />\r\n                <span className=\"ellipsis-overflow\">{selectedFile.name}</span>\r\n              </p>\r\n            )}\r\n            <label className=\"upload-label pin-full center--flex\">\r\n              <p>\r\n                <span className=\"icon-check mr-2\" />\r\n                Drop to replace\r\n              </p>\r\n              <input className=\"pin-full\" type=\"file\" multiple onChange={this.onReplace} />\r\n            </label>\r\n          </>\r\n        ) : (\r\n          <InitForm\r\n            createFirstFile={this.createFirstFile}\r\n            uploadStructure={this.uploadStructure}\r\n          />\r\n        )}\r\n        <ViewTooltip\r\n          onFeedbackDone={this.onFeedbackDone}\r\n          visible={this.state.tooltips.view.visible}\r\n          feedback={this.Feedbacks.get(this.state.tooltips.view.id || {})}\r\n        />\r\n        {askTooltip && this.state.tooltips.ask && (\r\n          <AskTooltip\r\n            visible={this.state.tooltips.ask.visible}\r\n            onAsk={this.onGiveFeedback}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MonacoEditor;\r\n"]},"metadata":{},"sourceType":"module"}