{"ast":null,"code":"import HttpService from './Http.service';\n\nclass ExerciseService {\n  static getExercise(exerciseId) {\n    return HttpService.get(`${process.env.ENDPOINT}/exercises/${exerciseId}`).then(resp => resp.json());\n  }\n\n  static uploadMedia(name, file) {\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('file', file);\n    return HttpService.post(`${process.env.ENDPOINT}/exercises/media`, formData).then(resp => resp.json());\n  }\n\n  static createExercise(payload) {\n    return HttpService.post(`${process.env.ENDPOINT}/exercises`, payload).then(resp => resp.json());\n  }\n\n  static updateExercise(id, payload) {\n    return HttpService.put(`${process.env.ENDPOINT}/exercises/${id}`, payload).then(resp => resp.json());\n  }\n\n  static getSolvedExercises() {\n    return HttpService.get(`${process.env.ENDPOINT}/exercises/solved`).then(response => response.json());\n  }\n\n  static getCreatedExercises() {\n    return HttpService.get(`${process.env.ENDPOINT}/exercises`).then(response => response.json());\n  }\n\n  static getPublicCreatedExercises(username) {\n    return HttpService.get(`${process.env.ENDPOINT}/exercises/public/${username}`).then(response => response.json());\n  }\n\n  static delete(id) {\n    return HttpService.delete(`${process.env.ENDPOINT}/exercises/${id}`);\n  }\n\n}\n\nexport default ExerciseService;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/services/Exercise.service.ts"],"names":["HttpService","ExerciseService","getExercise","exerciseId","get","process","env","ENDPOINT","then","resp","json","uploadMedia","name","file","formData","FormData","append","post","createExercise","payload","updateExercise","id","put","getSolvedExercises","response","getCreatedExercises","getPublicCreatedExercises","username","delete"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;;AAWA,MAAMC,eAAN,CAAsB;AACpB,SAAOC,WAAP,CAAmBC,UAAnB,EAAuC;AACrC,WAAOH,WAAW,CACfI,GADI,CACC,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,cAAaJ,UAAW,EADhD,EAEJK,IAFI,CAEEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAFX,CAAP;AAGD;;AAED,SAAOC,WAAP,CAAmBC,IAAnB,EAAiCC,IAAjC,EAA2D;AACzD,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;AACAE,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB;AAEA,WAAOb,WAAW,CACfiB,IADI,CACE,GAAEZ,OAAO,CAACC,GAAR,CAAYC,QAAS,kBADzB,EAC4CO,QAD5C,EAEJN,IAFI,CAEEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAFX,CAAP;AAGD;;AAED,SAAOQ,cAAP,CAAsBC,OAAtB,EAAiE;AAC/D,WAAOnB,WAAW,CACfiB,IADI,CACE,GAAEZ,OAAO,CAACC,GAAR,CAAYC,QAAS,YADzB,EACsCY,OADtC,EAEJX,IAFI,CAEEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAFX,CAAP;AAGD;;AAED,SAAOU,cAAP,CAAsBC,EAAtB,EAAkCF,OAAlC,EAA6E;AAC3E,WAAOnB,WAAW,CACfsB,GADI,CACC,GAAEjB,OAAO,CAACC,GAAR,CAAYC,QAAS,cAAac,EAAG,EADxC,EAC2CF,OAD3C,EAEJX,IAFI,CAEEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAFX,CAAP;AAGD;;AAED,SAAOa,kBAAP,GAA4B;AAC1B,WAAOvB,WAAW,CAACI,GAAZ,CAAiB,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,mBAAxC,EACJC,IADI,CACEgB,QAAD,IAAcA,QAAQ,CAACd,IAAT,EADf,CAAP;AAED;;AAED,SAAOe,mBAAP,GAA6B;AAC3B,WAAOzB,WAAW,CAACI,GAAZ,CAAiB,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,YAAxC,EACJC,IADI,CACEgB,QAAD,IAAcA,QAAQ,CAACd,IAAT,EADf,CAAP;AAED;;AAED,SAAOgB,yBAAP,CAAiCC,QAAjC,EAAmD;AACjD,WAAO3B,WAAW,CAACI,GAAZ,CAAiB,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,qBAAoBoB,QAAS,EAArE,EACJnB,IADI,CACEgB,QAAD,IAAcA,QAAQ,CAACd,IAAT,EADf,CAAP;AAED;;AAED,SAAOkB,MAAP,CAAcP,EAAd,EAA0B;AACxB,WAAOrB,WAAW,CAAC4B,MAAZ,CAAoB,GAAEvB,OAAO,CAACC,GAAR,CAAYC,QAAS,cAAac,EAAG,EAA3D,CAAP;AACD;;AA9CmB;;AAgDtB,eAAepB,eAAf","sourcesContent":["import HttpService from './Http.service';\r\n\r\ninterface NewExercisePayload {\r\n  body: string;\r\n  private: boolean;\r\n  type: string;\r\n  solution: string;\r\n  example?: string;\r\n  suggestion?: string;\r\n}\r\n\r\nclass ExerciseService {\r\n  static getExercise(exerciseId: string) {\r\n    return HttpService\r\n      .get(`${process.env.ENDPOINT}/exercises/${exerciseId}`)\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static uploadMedia(name: string, file: File): Promise<any> {\r\n    const formData = new FormData();\r\n    formData.append('name', name);\r\n    formData.append('file', file);\r\n\r\n    return HttpService\r\n      .post(`${process.env.ENDPOINT}/exercises/media`, formData)\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static createExercise(payload: NewExercisePayload): Promise<any> {\r\n    return HttpService\r\n      .post(`${process.env.ENDPOINT}/exercises`, payload)\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static updateExercise(id: string, payload: NewExercisePayload): Promise<any> {\r\n    return HttpService\r\n      .put(`${process.env.ENDPOINT}/exercises/${id}`, payload)\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static getSolvedExercises() {\r\n    return HttpService.get(`${process.env.ENDPOINT}/exercises/solved`)\r\n      .then((response) => response.json());\r\n  }\r\n\r\n  static getCreatedExercises() {\r\n    return HttpService.get(`${process.env.ENDPOINT}/exercises`)\r\n      .then((response) => response.json());\r\n  }\r\n\r\n  static getPublicCreatedExercises(username: string) {\r\n    return HttpService.get(`${process.env.ENDPOINT}/exercises/public/${username}`)\r\n      .then((response) => response.json());\r\n  }\r\n\r\n  static delete(id: string) {\r\n    return HttpService.delete(`${process.env.ENDPOINT}/exercises/${id}`);\r\n  }\r\n}\r\nexport default ExerciseService;\r\n"]},"metadata":{},"sourceType":"module"}