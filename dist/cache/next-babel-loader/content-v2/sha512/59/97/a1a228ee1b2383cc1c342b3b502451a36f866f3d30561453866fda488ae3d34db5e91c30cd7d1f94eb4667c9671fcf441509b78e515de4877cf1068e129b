{"ast":null,"code":"import _toConsumableArray from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\r\n * timestamp,\r\n * id,\r\n * position,\r\n * type,\r\n * body,\r\n * file_key\r\n */\nvar Feedbacks = /*#__PURE__*/function () {\n  function Feedbacks(MonacoEditor) {\n    var feedbacksArr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, Feedbacks);\n\n    _defineProperty(this, \"feedbacksArr\", void 0);\n\n    _defineProperty(this, \"MonacoEditor\", void 0);\n\n    _defineProperty(this, \"timeoutId\", void 0);\n\n    this.feedbacksArr = [];\n    this.MonacoEditor = MonacoEditor;\n    this.timeoutId = null;\n    this.add.apply(this, _toConsumableArray(feedbacksArr));\n  }\n\n  _createClass(Feedbacks, [{\n    key: \"getAll\",\n    value: function getAll() {\n      return _toConsumableArray(this.feedbacksArr);\n    }\n  }, {\n    key: \"getTypesByFileKey\",\n    value: function getTypesByFileKey() {\n      var result = {}; // eslint-disable-next-line camelcase\n\n      this.feedbacksArr.forEach(function (_ref) {\n        var file_key = _ref.file_key,\n            type = _ref.type;\n        result[file_key] = result[file_key] || [];\n\n        if (!result[file_key].includes(type)) {\n          result[file_key].push(type);\n        }\n      });\n      return result;\n    }\n  }, {\n    key: \"get\",\n    value: function get(idOrTimestamp) {\n      return _objectSpread({}, this.feedbacksArr.find(function (f) {\n        return f._id === idOrTimestamp || f.timestamp === idOrTimestamp;\n      }));\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      var _this$feedbacksArr;\n\n      for (var _len = arguments.length, feedbacks = new Array(_len), _key = 0; _key < _len; _key++) {\n        feedbacks[_key] = arguments[_key];\n      }\n\n      // eslint-disable-next-line no-param-reassign\n      feedbacks = feedbacks.map(function (f) {\n        return _objectSpread(_objectSpread({\n          timestamp: Date.now()\n        }, f), {}, {\n          getDecorationData: function getDecorationData() {\n            var data = _objectSpread({}, this);\n\n            delete data.body;\n            return data;\n          }\n        });\n      });\n\n      (_this$feedbacksArr = this.feedbacksArr).push.apply(_this$feedbacksArr, _toConsumableArray(feedbacks));\n\n      return feedbacks;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(timestampOrId) {\n      var indexToDelete = this.feedbacksArr.findIndex(function (f) {\n        return f.timestamp === timestampOrId || f._id === timestampOrId;\n      });\n\n      if (indexToDelete >= 0) {\n        this.MonacoEditor.unDecorate(this.feedbacksArr[indexToDelete].id);\n        this.feedbacksArr.splice(indexToDelete, 1);\n      }\n    }\n  }, {\n    key: \"changeType\",\n    value: function changeType(timestamp, newType) {\n      var f = this.feedbacksArr.find(function (f) {\n        return f.timestamp === timestamp;\n      });\n      f.type = newType;\n      this.MonacoEditor.unDecorate(timestamp);\n      this.MonacoEditor.decorate(f.getDecorationData());\n    }\n  }, {\n    key: \"changeBody\",\n    value: function changeBody(timestamp, newBody) {\n      var f = this.feedbacksArr.find(function (f) {\n        return f.timestamp === timestamp;\n      });\n      f.body = newBody;\n    }\n  }, {\n    key: \"undecorateAll\",\n    value: function undecorateAll() {\n      var _this = this;\n\n      this.feedbacksArr.forEach(function (f) {\n        return _this.MonacoEditor.unDecorate(f.timestamp);\n      });\n    }\n  }]);\n\n  return Feedbacks;\n}();\n\nexport default Feedbacks;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Editor/Feedbacks.ts"],"names":["Feedbacks","MonacoEditor","feedbacksArr","timeoutId","add","result","forEach","file_key","type","includes","push","idOrTimestamp","find","f","_id","timestamp","feedbacks","map","Date","now","getDecorationData","data","body","timestampOrId","indexToDelete","findIndex","unDecorate","id","splice","newType","decorate","newBody"],"mappings":"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","sourcesContent":["/**\r\n * timestamp,\r\n * id,\r\n * position,\r\n * type,\r\n * body,\r\n * file_key\r\n */\r\nclass Feedbacks {\r\n  private feedbacksArr: any[];\r\n\r\n  private MonacoEditor: any;\r\n\r\n  private timeoutId: any;\r\n\r\n  constructor(MonacoEditor, feedbacksArr = []) {\r\n    this.feedbacksArr = [];\r\n    this.MonacoEditor = MonacoEditor;\r\n    this.timeoutId = null;\r\n\r\n    this.add(...feedbacksArr);\r\n  }\r\n\r\n  getAll() {\r\n    return [...this.feedbacksArr];\r\n  }\r\n\r\n  getTypesByFileKey() {\r\n    let result = {};\r\n\r\n    // eslint-disable-next-line camelcase\r\n    this.feedbacksArr.forEach(({ file_key, type }) => {\r\n      result[file_key] = result[file_key] || [];\r\n      if (!result[file_key].includes(type)) {\r\n        result[file_key].push(type);\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  get(idOrTimestamp) {\r\n    return {\r\n\r\n      ...this.feedbacksArr.find(\r\n        (f) => f._id === idOrTimestamp || f.timestamp === idOrTimestamp,\r\n      ),\r\n    };\r\n  }\r\n\r\n  add(...feedbacks) {\r\n    // eslint-disable-next-line no-param-reassign\r\n    feedbacks = feedbacks.map((f) => ({\r\n      timestamp: Date.now(),\r\n      ...f,\r\n      getDecorationData() {\r\n        let data = { ...this };\r\n        delete data.body;\r\n\r\n        return data;\r\n      },\r\n    }));\r\n\r\n    this.feedbacksArr.push(...feedbacks);\r\n\r\n    return feedbacks;\r\n  }\r\n\r\n  delete(timestampOrId) {\r\n    let indexToDelete = this.feedbacksArr.findIndex(\r\n      (f) => f.timestamp === timestampOrId || f._id === timestampOrId,\r\n    );\r\n    if (indexToDelete >= 0) {\r\n      this.MonacoEditor.unDecorate(this.feedbacksArr[indexToDelete].id);\r\n      this.feedbacksArr.splice(indexToDelete, 1);\r\n    }\r\n  }\r\n\r\n  changeType(timestamp, newType) {\r\n    let f = this.feedbacksArr.find((f) => f.timestamp === timestamp);\r\n    f.type = newType;\r\n\r\n    this.MonacoEditor.unDecorate(timestamp);\r\n    this.MonacoEditor.decorate(f.getDecorationData());\r\n  }\r\n\r\n  changeBody(timestamp, newBody) {\r\n    let f = this.feedbacksArr.find((f) => f.timestamp === timestamp);\r\n    f.body = newBody;\r\n  }\r\n\r\n  undecorateAll() {\r\n    this.feedbacksArr.forEach((f) => this.MonacoEditor.unDecorate(f.timestamp));\r\n  }\r\n}\r\n\r\nexport default Feedbacks;\r\n"]},"metadata":{},"sourceType":"module"}