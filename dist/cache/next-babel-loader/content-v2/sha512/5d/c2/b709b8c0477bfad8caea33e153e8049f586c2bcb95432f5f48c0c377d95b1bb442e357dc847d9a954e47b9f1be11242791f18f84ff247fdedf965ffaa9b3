{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Editor\\\\CompleteEditor\\\\AskTooltip\\\\AskTooltip.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react'; // FIXME\n\nimport marked from 'marked';\nimport { FEEDBACK_TYPES } from '~/services/Constants';\nimport Form, { Checkbox } from '~/components/Form';\nimport styles from './AskTooltip.module.scss';\nimport editorTooltipStyles from '../EditorTooltip.module.scss';\n\nclass AskTooltip extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"timeoutId\", void 0);\n\n    _defineProperty(this, \"formRef\", void 0);\n\n    _defineProperty(this, \"markdownRef\", void 0);\n\n    _defineProperty(this, \"textareaRef\", void 0);\n\n    _defineProperty(this, \"onAsk\", e => {\n      const {\n        type,\n        body\n      } = this.state;\n      const {\n        onAsk\n      } = this.props;\n\n      if (body) {\n        onAsk({\n          type,\n          body\n        });\n        this.setState({\n          body: '',\n          forceShow: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"onMouseEnter\", () => {\n      clearTimeout(this.timeoutId);\n      this.setState({\n        forceShow: true\n      });\n    });\n\n    _defineProperty(this, \"onMouseLeave\", () => {\n      this.timeoutId = setTimeout(() => {\n        this.setState({\n          forceShow: false\n        });\n      }, 500);\n    });\n\n    _defineProperty(this, \"onKeyDown\", e => {\n      if ((e.key === 'Enter' || e.keyCode === 13) && e.ctrlKey) {\n        const submitEvent = document.createEvent('Event');\n        submitEvent.initEvent('submit', true, true);\n        this.formRef.current.dispatchEvent(submitEvent);\n      }\n    });\n\n    _defineProperty(this, \"onBodyChange\", e => {\n      this.setState({\n        body: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"changeType\", newType => {\n      this.setState({\n        type: newType\n      });\n    });\n\n    _defineProperty(this, \"toggleMarkdown\", () => {\n      const {\n        body,\n        showMarkdown\n      } = this.state;\n      this.setState({\n        showMarkdown: !showMarkdown\n      });\n\n      if (!showMarkdown) {\n        this.markdownRef.current.innerHTML = marked(body);\n      } else {\n        this.markdownRef.current.innerHTML = null;\n        setTimeout(() => {\n          this.textareaRef.current.focus();\n        }, 100);\n      }\n    });\n\n    this.state = {\n      body: '',\n      type: FEEDBACK_TYPES.IMPROVEMENT,\n      forceShow: false,\n      showMarkdown: false\n    };\n    this.timeoutId = null;\n    this.formRef = /*#__PURE__*/React.createRef();\n    this.markdownRef = /*#__PURE__*/React.createRef();\n    this.textareaRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      visible\n    } = this.props;\n\n    if (visible && this.textareaRef.current) {\n      setTimeout(() => this.textareaRef.current.focus(), 0);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      visible\n    } = this.props;\n\n    if (visible && !prevProps.visible) {\n      setTimeout(() => this.textareaRef.current.focus(), 0);\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeoutId);\n  }\n\n  render() {\n    const {\n      visible\n    } = this.props;\n    const {\n      body,\n      type,\n      forceShow,\n      showMarkdown\n    } = this.state;\n    return __jsx(Form, {\n      ref: this.formRef,\n      onSubmit: this.onAsk,\n      className: `\n          ${styles['ask-tooltip']}\n          ${editorTooltipStyles['feedback-tooltip']}\n          ${editorTooltipStyles[`feedback--${type}`]}\n          ${visible || forceShow ? editorTooltipStyles['feedback-tooltip--visible'] : ''}\n        `,\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: `${showMarkdown ? styles.markdown : ''}`,\n      ref: this.markdownRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }), __jsx(\"textarea\", {\n      required: true,\n      rows: 8,\n      ref: this.textareaRef,\n      style: {\n        display: showMarkdown ? 'none' : 'block'\n      },\n      value: body,\n      onChange: this.onBodyChange,\n      onKeyDown: this.onKeyDown,\n      spellCheck: false,\n      placeholder: \"Ofer\\u0103 feedback (psst: suport\\u0103 markdown)\" // eslint-disable-next-line jsx-a11y/no-autofocus\n      ,\n      autoFocus: visible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: styles['feedback-tooltip__controls'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, Object.keys(FEEDBACK_TYPES).map(feedbackType => __jsx(Checkbox, {\n      className: \"d-block\",\n      type: \"radio\",\n      name: \"feedback-type\",\n      onChange: () => this.changeType(FEEDBACK_TYPES[feedbackType]),\n      checked: type === FEEDBACK_TYPES[feedbackType],\n      value: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, FEEDBACK_TYPES[feedbackType])), __jsx(\"div\", {\n      className: styles.separator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }), __jsx(Checkbox, {\n      type: \"checkbox\",\n      name: \"feedback-type\",\n      value: \"showMarkdown\",\n      defaultChecked: showMarkdown,\n      onChange: this.toggleMarkdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, \"Preview\")), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn--light\",\n      title: \"Mark as done\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, \"Done\"))));\n  }\n\n}\n\nexport default AskTooltip;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Editor/CompleteEditor/AskTooltip/AskTooltip.tsx"],"names":["React","marked","FEEDBACK_TYPES","Form","Checkbox","styles","editorTooltipStyles","AskTooltip","Component","constructor","props","e","type","body","state","onAsk","setState","forceShow","clearTimeout","timeoutId","setTimeout","key","keyCode","ctrlKey","submitEvent","document","createEvent","initEvent","formRef","current","dispatchEvent","target","value","newType","showMarkdown","markdownRef","innerHTML","textareaRef","focus","IMPROVEMENT","createRef","componentDidMount","visible","componentDidUpdate","prevProps","componentWillUnmount","render","onMouseEnter","onMouseLeave","markdown","display","onBodyChange","onKeyDown","Object","keys","map","feedbackType","changeType","separator","toggleMarkdown"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// FIXME\r\nimport marked from 'marked';\r\nimport { FEEDBACK_TYPES } from '~/services/Constants';\r\nimport Form, { Checkbox } from '~/components/Form';\r\n\r\nimport styles from './AskTooltip.module.scss';\r\nimport editorTooltipStyles from '../EditorTooltip.module.scss';\r\n\r\ninterface State {\r\n  body: string;\r\n  type: string;\r\n  forceShow: boolean;\r\n  showMarkdown: boolean;\r\n}\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  onAsk: ({ type, body }: { type: string, body: string }) => void\r\n}\r\n\r\nclass AskTooltip extends React.Component<Props, State> {\r\n  private timeoutId: NodeJS.Timeout;\r\n\r\n  private formRef: React.RefObject<HTMLFormElement>;\r\n\r\n  private markdownRef: React.RefObject<HTMLDivElement>;\r\n\r\n  private textareaRef: React.RefObject<HTMLTextAreaElement>;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      body: '',\r\n      type: FEEDBACK_TYPES.IMPROVEMENT,\r\n      forceShow: false,\r\n      showMarkdown: false,\r\n    };\r\n\r\n    this.timeoutId = null;\r\n    this.formRef = React.createRef();\r\n    this.markdownRef = React.createRef();\r\n    this.textareaRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { visible } = this.props;\r\n\r\n    if (visible && this.textareaRef.current) {\r\n      setTimeout(() => this.textareaRef.current.focus(), 0);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { visible } = this.props;\r\n\r\n    if (visible && !prevProps.visible) {\r\n      setTimeout(() => this.textareaRef.current.focus(), 0);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timeoutId);\r\n  }\r\n\r\n  onAsk = (e) => {\r\n    const { type, body } = this.state;\r\n    const { onAsk } = this.props;\r\n\r\n    if (body) {\r\n      onAsk({ type, body });\r\n\r\n      this.setState({\r\n        body: '',\r\n        forceShow: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  onMouseEnter = () => {\r\n    clearTimeout(this.timeoutId);\r\n    this.setState({\r\n      forceShow: true,\r\n    });\r\n  }\r\n\r\n  onMouseLeave = () => {\r\n    this.timeoutId = setTimeout(() => {\r\n      this.setState({\r\n        forceShow: false,\r\n      });\r\n    }, 500);\r\n  }\r\n\r\n  onKeyDown = (e) => {\r\n    if ((e.key === 'Enter' || e.keyCode === 13) && e.ctrlKey) {\r\n      const submitEvent = document.createEvent('Event');\r\n      submitEvent.initEvent('submit', true, true);\r\n\r\n      this.formRef.current.dispatchEvent(submitEvent);\r\n    }\r\n  }\r\n\r\n  onBodyChange = (e) => {\r\n    this.setState({\r\n      body: e.target.value,\r\n    });\r\n  }\r\n\r\n  changeType = (newType) => {\r\n    this.setState({ type: newType });\r\n  }\r\n\r\n  toggleMarkdown = () => {\r\n    const { body, showMarkdown } = this.state;\r\n    this.setState({\r\n      showMarkdown: !showMarkdown,\r\n    });\r\n\r\n    if (!showMarkdown) {\r\n      this.markdownRef.current.innerHTML = marked(body);\r\n    } else {\r\n      this.markdownRef.current.innerHTML = null;\r\n      setTimeout(() => {\r\n        this.textareaRef.current.focus();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { visible } = this.props;\r\n    const {\r\n      body,\r\n      type,\r\n      forceShow,\r\n      showMarkdown,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Form\r\n        ref={this.formRef}\r\n        onSubmit={this.onAsk}\r\n        className={`\r\n          ${styles['ask-tooltip']}\r\n          ${editorTooltipStyles['feedback-tooltip']}\r\n          ${editorTooltipStyles[`feedback--${type}`]}\r\n          ${visible || forceShow ? editorTooltipStyles['feedback-tooltip--visible'] : ''}\r\n        `}\r\n        onMouseEnter={this.onMouseEnter}\r\n        onMouseLeave={this.onMouseLeave}\r\n      >\r\n        <div className={`${showMarkdown ? styles.markdown : ''}`} ref={this.markdownRef} />\r\n        <textarea\r\n          required\r\n          rows={8}\r\n          ref={this.textareaRef}\r\n          style={{\r\n            display: showMarkdown ? 'none' : 'block',\r\n          }}\r\n          value={body}\r\n          onChange={this.onBodyChange}\r\n          onKeyDown={this.onKeyDown}\r\n          spellCheck={false}\r\n          placeholder=\"Oferă feedback (psst: suportă markdown)\"\r\n          // eslint-disable-next-line jsx-a11y/no-autofocus\r\n          autoFocus={visible}\r\n        />\r\n        <div className={styles['feedback-tooltip__controls']}>\r\n          <div>\r\n            {Object.keys(FEEDBACK_TYPES).map((feedbackType) => (\r\n              <Checkbox\r\n                className=\"d-block\"\r\n                type=\"radio\"\r\n                name=\"feedback-type\"\r\n                onChange={() => this.changeType(FEEDBACK_TYPES[feedbackType])}\r\n                checked={type === FEEDBACK_TYPES[feedbackType]}\r\n                value={type}\r\n              >\r\n                {FEEDBACK_TYPES[feedbackType]}\r\n              </Checkbox>\r\n            ))}\r\n\r\n            <div className={styles.separator} />\r\n            <Checkbox\r\n              type=\"checkbox\"\r\n              name=\"feedback-type\"\r\n              value=\"showMarkdown\"\r\n              defaultChecked={showMarkdown}\r\n              onChange={this.toggleMarkdown}\r\n            >\r\n              Preview\r\n            </Checkbox>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn--light\" title=\"Mark as done\">\r\n            <span>Done</span>\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AskTooltip;\r\n"]},"metadata":{},"sourceType":"module"}