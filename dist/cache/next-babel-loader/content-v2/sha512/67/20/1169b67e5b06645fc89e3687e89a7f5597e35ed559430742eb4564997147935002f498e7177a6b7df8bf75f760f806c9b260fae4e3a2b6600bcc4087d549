{"ast":null,"code":"import HttpService from '../Http.service';\n\nclass EventService {\n  static async getSeatsInfo(id) {\n    const resp = await HttpService.get(`${process.env.ENDPOINT}/events/${id}/seats`);\n    const jsonResp = await resp.json();\n    return jsonResp;\n  }\n\n  static async register(id, payload) {\n    await HttpService.post(`${process.env.ENDPOINT}/events/${id}/register`, payload);\n  }\n\n  static async addToWaitlist(id, payload) {\n    await HttpService.post(`${process.env.ENDPOINT}/events/${id}/waitlist`, payload);\n  }\n\n}\n\nexport default EventService;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/services/api/Event.service.ts"],"names":["HttpService","EventService","getSeatsInfo","id","resp","get","process","env","ENDPOINT","jsonResp","json","register","payload","post","addToWaitlist"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iBAAxB;;AAcA,MAAMC,YAAN,CAAmB;AACjB,eAAaC,YAAb,CAA0BC,EAA1B,EAA0D;AACxD,UAAMC,IAAI,GAAG,MAAMJ,WAAW,CAACK,GAAZ,CAAiB,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,WAAUL,EAAG,QAArD,CAAnB;AACA,UAAMM,QAAQ,GAAG,MAAML,IAAI,CAACM,IAAL,EAAvB;AAEA,WAAOD,QAAP;AACD;;AAED,eAAaE,QAAb,CAAsBR,EAAtB,EAA0BS,OAA1B,EAA0E;AACxE,UAAMZ,WAAW,CAACa,IAAZ,CAAkB,GAAEP,OAAO,CAACC,GAAR,CAAYC,QAAS,WAAUL,EAAG,WAAtD,EAAkES,OAAlE,CAAN;AACD;;AAED,eAAaE,aAAb,CAA2BX,EAA3B,EAA+BS,OAA/B,EAA+E;AAC7E,UAAMZ,WAAW,CAACa,IAAZ,CAAkB,GAAEP,OAAO,CAACC,GAAR,CAAYC,QAAS,WAAUL,EAAG,WAAtD,EAAkES,OAAlE,CAAN;AACD;;AAdgB;;AAgBnB,eAAeX,YAAf","sourcesContent":["import HttpService from '../Http.service';\r\n\r\ninterface RegisterToEventPayload {\r\n  name: string;\r\n  tel: string;\r\n  email: string;\r\n}\r\n\r\ninterface SeatsInfo {\r\n  id: string;\r\n  free: number;\r\n  total: number;\r\n}\r\n\r\nclass EventService {\r\n  static async getSeatsInfo(id: string): Promise<SeatsInfo> {\r\n    const resp = await HttpService.get(`${process.env.ENDPOINT}/events/${id}/seats`);\r\n    const jsonResp = await resp.json();\r\n\r\n    return jsonResp;\r\n  }\r\n\r\n  static async register(id, payload: RegisterToEventPayload): Promise<void> {\r\n    await HttpService.post(`${process.env.ENDPOINT}/events/${id}/register`, payload);\r\n  }\r\n\r\n  static async addToWaitlist(id, payload: RegisterToEventPayload): Promise<void> {\r\n    await HttpService.post(`${process.env.ENDPOINT}/events/${id}/waitlist`, payload);\r\n  }\r\n}\r\nexport default EventService;\r\n"]},"metadata":{},"sourceType":"module"}