{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\event\\\\TemplateRegisterEvent\\\\TemplateRegisterEvent.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport ReactSelect from 'react-select';\nimport { ShareButton } from '~/components/SocialMediaButtons';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport WaitlistConfirmation from '../WaitListConfirmation/WaitListConfirmation';\nimport EventService from '~/services/Event.service';\nimport Form, { FormGroup } from '~/components/Form';\nimport styles from './TemplateRegisterEvent.module.scss';\nexport default function Event({\n  title,\n  cover,\n  description,\n  url,\n  date,\n  optionsDateAndHour\n}) {\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const router = useRouter();\n  const {\n    0: urlToShare,\n    1: setUrlToShare\n  } = useState(router.pathname);\n  useEffect(() => {\n    setUrlToShare(`${window.location.origin}${router.pathname}`);\n  }, []);\n\n  const onSubmit = async e => {\n    const {\n      name,\n      email,\n      tel,\n      dateAndHour\n    } = e;\n    let userData = {\n      name,\n      email,\n      tel,\n      dateAndHour\n    };\n    setIsLoading(true);\n    let shouldResetForm = true;\n\n    try {\n      const status = await EventService.registerToEvent(userData);\n\n      if (status === 201) {\n        SweetAlertService.toast({\n          type: 'success',\n          text: 'Felicitări! Înregistrarea la eveniment a avut loc cu succes!'\n        });\n      } else {\n        SweetAlertService.content(WaitlistConfirmation, 'Lista de așteptare', {\n          onSuccess() {\n            SweetAlertService.closePopup();\n          }\n\n        });\n      }\n    } catch (err) {\n      shouldResetForm = false;\n      setError(err.message || 'Nu am putut să te înregistrăm. Încearcă din nou!');\n    } finally {\n      setIsLoading(false);\n    }\n\n    return shouldResetForm;\n  };\n\n  return __jsx(\"section\", {\n    className: `${styles['template-event']} d-flex justify-content-between align-items-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: `${styles.cover}`,\n    style: {\n      backgroundImage: `url(${cover})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: styles['event-details'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, title), __jsx(\"div\", {\n    className: \"d-flex justify-content-between flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Dat\\u0103:\", ' ', __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, __jsx(\"time\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, date))), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Loca\\u021Bie:\", ' ', __jsx(Link, {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    className: `${styles['event-location']} text-bold no-underline d-inline-block relative`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, url)))), __jsx(\"p\", {\n    className: \"my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, description)), __jsx(Form, {\n    onSubmit: onSubmit,\n    onInput: () => setError(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"label text-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Nume si prenume\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }))), __jsx(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"label text-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Adresa de email\"), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }))), __jsx(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"label text-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Num\\u0103r de telefon (te vom contacta cu o zi \\xEEnainte de eveniment pentru confirmare)\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"tel\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }))), __jsx(ReactSelect, {\n    isSearchable: true,\n    placeholder: \"Alege data si ora la care vrei sa participi\",\n    className: styles.select,\n    options: optionsDateAndHour,\n    name: \"dateAndHour\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), error && __jsx(\"p\", {\n    className: \"text-red text-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, error), __jsx(\"div\", {\n    className: \"d-flex justify-content-between flex-wrap my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    className: `btn btn--blue mb-2 ${isLoading ? 'btn--loading' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"\\xCEnscrie-te\"), __jsx(ShareButton, {\n    url: urlToShare,\n    config: {\n      copy: true,\n      facebook: true,\n      whatsapp: true,\n      linkedin: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }))), __jsx(Link, {\n    href: \"/detaliu-eveniment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    href: \"/detaliu-eveniment\",\n    className: `${styles['tell-me-more']} d-block my-5`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, \"Spune-mi mai multe\"))));\n}","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/event/TemplateRegisterEvent/TemplateRegisterEvent.tsx"],"names":["React","useEffect","useState","useRouter","Link","ReactSelect","ShareButton","SweetAlertService","WaitlistConfirmation","EventService","Form","FormGroup","styles","Event","title","cover","description","url","date","optionsDateAndHour","error","setError","isLoading","setIsLoading","router","urlToShare","setUrlToShare","pathname","window","location","origin","onSubmit","e","name","email","tel","dateAndHour","userData","shouldResetForm","status","registerToEvent","toast","type","text","content","onSuccess","closePopup","err","message","backgroundImage","select","copy","facebook","whatsapp","linkedin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport Link from 'next/link';\r\n\r\nimport ReactSelect from 'react-select';\r\nimport { EventDescription } from '~/services/Constants';\r\nimport { ShareButton } from '~/components/SocialMediaButtons';\r\n\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\nimport WaitlistConfirmation from '../WaitListConfirmation/WaitListConfirmation';\r\nimport EventService from '~/services/Event.service';\r\nimport Form, { FormGroup } from '~/components/Form';\r\n\r\nimport styles from './TemplateRegisterEvent.module.scss';\r\n\r\nexport default function Event({\r\n  title, cover, description, url, date, optionsDateAndHour,\r\n} : EventDescription) {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const router = useRouter();\r\n  const [urlToShare, setUrlToShare] = useState(router.pathname);\r\n\r\n  useEffect(() => {\r\n    setUrlToShare(`${window.location.origin}${router.pathname}`);\r\n  }, []);\r\n\r\n  const onSubmit = async (e) => {\r\n    const {\r\n      name, email, tel, dateAndHour,\r\n    } = e;\r\n    let userData = {\r\n      name,\r\n      email,\r\n      tel,\r\n      dateAndHour,\r\n    };\r\n\r\n    setIsLoading(true);\r\n    let shouldResetForm = true;\r\n\r\n    try {\r\n      const status = await EventService.registerToEvent(userData);\r\n\r\n      if (status === 201) {\r\n        SweetAlertService.toast({\r\n          type: 'success',\r\n          text: 'Felicitări! Înregistrarea la eveniment a avut loc cu succes!',\r\n        });\r\n      } else {\r\n        SweetAlertService.content(\r\n          WaitlistConfirmation,\r\n          'Lista de așteptare',\r\n          {\r\n            onSuccess() {\r\n              SweetAlertService.closePopup();\r\n            },\r\n          },\r\n        );\r\n      }\r\n    } catch (err) {\r\n      shouldResetForm = false;\r\n      setError(err.message || 'Nu am putut să te înregistrăm. Încearcă din nou!');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n    return shouldResetForm;\r\n  };\r\n\r\n  return (\r\n    <section className={`${styles['template-event']} d-flex justify-content-between align-items-center`}>\r\n      <div\r\n        className={`${styles.cover}`}\r\n        style={{\r\n          backgroundImage: `url(${cover})`,\r\n        }}\r\n      />\r\n      <div className={styles['event-details']}>\r\n        <div>\r\n          <h2 className={styles.title}>\r\n            {title}\r\n          </h2>\r\n          <div className=\"d-flex justify-content-between flex-wrap\">\r\n            <span>\r\n              Dată:\r\n              {' '}\r\n              <strong>\r\n                <time>{date}</time>\r\n              </strong>\r\n            </span>\r\n            <span>\r\n              Locație:\r\n              {' '}\r\n              <Link href=\"#\">\r\n                <a className={`${styles['event-location']} text-bold no-underline d-inline-block relative`}>\r\n                  {url}\r\n                </a>\r\n              </Link>\r\n            </span>\r\n          </div>\r\n          <p className=\"my-5\">{description}</p>\r\n        </div>\r\n        <Form onSubmit={onSubmit} onInput={() => setError(null)}>\r\n          <FormGroup className=\"mb-4\">\r\n            <label>\r\n              <span className=\"label text-bold mb-2\">\r\n                Nume si prenume\r\n              </span>\r\n              <input type=\"text\" name=\"name\" required />\r\n            </label>\r\n          </FormGroup>\r\n\r\n          <FormGroup className=\"mb-4\">\r\n            <label>\r\n              <span className=\"label text-bold mb-2\">\r\n                Adresa de email\r\n              </span>\r\n              <input type=\"email\" name=\"email\" required />\r\n            </label>\r\n          </FormGroup>\r\n\r\n          <FormGroup className=\"mb-4\">\r\n            <label>\r\n              <span className=\"label text-bold mb-2\">\r\n                Număr de telefon (te vom contacta cu o zi înainte de eveniment pentru confirmare)\r\n              </span>\r\n              <input type=\"text\" name=\"tel\" required />\r\n            </label>\r\n          </FormGroup>\r\n\r\n          <ReactSelect\r\n            isSearchable\r\n            placeholder=\"Alege data si ora la care vrei sa participi\"\r\n            className={styles.select}\r\n            options={optionsDateAndHour}\r\n            name=\"dateAndHour\"\r\n            required\r\n          />\r\n\r\n          {error && (\r\n          <p className=\"text-red text-bold\">\r\n            {error}\r\n          </p>\r\n          )}\r\n          <div className=\"d-flex justify-content-between flex-wrap my-5\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className={`btn btn--blue mb-2 ${isLoading ? 'btn--loading' : ''}`}\r\n            >\r\n              Înscrie-te\r\n            </button>\r\n            <ShareButton\r\n              url={urlToShare}\r\n              config={{\r\n                copy: true,\r\n                facebook: true,\r\n                whatsapp: true,\r\n                linkedin: true,\r\n              }}\r\n            />\r\n          </div>\r\n        </Form>\r\n        <Link href=\"/detaliu-eveniment\">\r\n          <a href=\"/detaliu-eveniment\" className={`${styles['tell-me-more']} d-block my-5`}>\r\n            Spune-mi mai multe\r\n          </a>\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}