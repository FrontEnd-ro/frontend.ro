{"ast":null,"code":"import _extends from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Button\\\\Button.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nvar Button = /*#__PURE__*/React.forwardRef(_c = function _c(_ref, forwardRef) {\n  var children = _ref.children,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? false : _ref$loading,\n      className = _ref.className,\n      disabled = _ref.disabled,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'transparent' : _ref$variant,\n      props = _objectWithoutProperties(_ref, [\"children\", \"loading\", \"className\", \"disabled\", \"variant\"]);\n\n  var updatedClassName = className || '';\n\n  if (loading) {\n    updatedClassName += ' btn--loading';\n  }\n\n  return __jsx(\"button\", _extends({\n    // eslint-disable-next-line react/button-has-type\n    type: props.type || 'button',\n    className: \"btn \".concat(variant === \"\".concat(variant) ? \"btn--\".concat(variant) : 'btn--transparent', \" \").concat(updatedClassName),\n    disabled: loading || disabled,\n    ref: forwardRef\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), children);\n});\n_c2 = Button;\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button$React.forwardRef\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Button/Button.tsx"],"names":["React","Button","forwardRef","children","loading","className","disabled","variant","props","updatedClassName","type"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAyD,OAAzD;AAoBA,IAAMC,MAAM,gBAAGD,KAAK,CAACE,UAAN,MAIb,kBASEA,UATF,EAUK;AAAA,MARDC,QAQC,QARDA,QAQC;AAAA,0BAPDC,OAOC;AAAA,MAPDA,OAOC,6BAPS,KAOT;AAAA,MANDC,SAMC,QANDA,SAMC;AAAA,MALDC,QAKC,QALDA,QAKC;AAAA,0BAJDC,OAIC;AAAA,MAJDA,OAIC,6BAJS,aAIT;AAAA,MAHEC,KAGF;;AACH,MAAIC,gBAAgB,GAAGJ,SAAS,IAAI,EAApC;;AACA,MAAID,OAAJ,EAAa;AACXK,IAAAA,gBAAgB,IAAI,eAApB;AACD;;AAED,SACE;AACE;AACA,IAAA,IAAI,EAAED,KAAK,CAACE,IAAN,IAAc,QAFtB;AAGE,IAAA,SAAS,gBACPH,OAAO,eAAQA,OAAR,CAAP,kBAAmCA,OAAnC,IAA+C,kBADxC,cAELE,gBAFK,CAHX;AAME,IAAA,QAAQ,EAAEL,OAAO,IAAIE,QANvB;AAOE,IAAA,GAAG,EAAEJ;AAPP,KAQMM,KARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUGL,QAVH,CADF;AAcD,CAlCY,CAAf;MAAMF,M;AAoCN,eAAeA,MAAf","sourcesContent":["import React, { HTMLAttributes, PropsWithChildren } from 'react';\r\n\r\ninterface Props {\r\n  loading?: boolean;\r\n  variant?:\r\n    | 'light'\r\n    | 'blue'\r\n    | 'success'\r\n    | 'danger'\r\n    | 'transparent'\r\n    | 'yellow'\r\n    | 'grey'\r\n    | 'bouncy'\r\n    | 'with--icon'\r\n    | 'outline';\r\n  // We define here the form property because\r\n  // even if it's a valid attribute on buttons, React or TS complain about it.\r\n  form?: string;\r\n}\r\nexport type Ref = HTMLButtonElement;\r\nconst Button = React.forwardRef<\r\n  Ref,\r\n  PropsWithChildren<Props> & React.ButtonHTMLAttributes<HTMLButtonElement>\r\n>(\r\n  (\r\n    {\r\n      children,\r\n      loading = false,\r\n      className,\r\n      disabled,\r\n      variant = 'transparent',\r\n      ...props\r\n    }: PropsWithChildren<Props> & React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    forwardRef,\r\n  ) => {\r\n    let updatedClassName = className || '';\r\n    if (loading) {\r\n      updatedClassName += ' btn--loading';\r\n    }\r\n\r\n    return (\r\n      <button\r\n        // eslint-disable-next-line react/button-has-type\r\n        type={props.type || 'button'}\r\n        className={`btn ${\r\n          variant === `${variant}` ? `btn--${variant}` : 'btn--transparent'\r\n        } ${updatedClassName}`}\r\n        disabled={loading || disabled}\r\n        ref={forwardRef}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </button>\r\n    );\r\n  },\r\n);\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}