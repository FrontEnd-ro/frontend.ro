{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _s = $RefreshSig$();\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.Portal = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar Portal = function Portal(_ref) {\n  _s();\n\n  var children = _ref.children,\n      type = _ref.type;\n  var portalNode = React.useRef(null);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  React.useEffect(function () {\n    portalNode.current = document.createElement(type);\n    document.body.appendChild(portalNode.current);\n    forceUpdate({});\n    return function () {\n      if (portalNode.current) {\n        document.body.removeChild(portalNode.current);\n      }\n    };\n  }, [type]);\n  return portalNode.current ? /*#__PURE__*/(0, _reactDom.createPortal)(children, portalNode.current) : null;\n};\n\n_s(Portal, \"H9Jq/p5GRHpyHVgd55qLy9aYECA=\");\n\n_c = Portal;\nexports.Portal = Portal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portal\");","map":{"version":3,"sources":["../../../client/portal/index.tsx"],"names":["Portal","portalNode","React","document","forceUpdate"],"mappings":";;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAOO,IAAMA,MAA6B,GAAG,SAAhCA,MAAgC,OAAwB;AAAA;;AAAA,MAAvB,QAAuB,QAAvB,QAAuB;AAAA,MAAxB,IAAwB,QAAxB,IAAwB;AACnE,MAAIC,UAAU,GAAGC,KAAK,CAALA,MAAAA,CAAjB,IAAiBA,CAAjB;;AADmE,wBAE7CA,KAAK,CAA3B,QAAsBA,EAF6C;AAAA;AAAA,MAE/D,WAF+D;;AAGnEA,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpBD,IAAAA,UAAU,CAAVA,OAAAA,GAAqBE,QAAQ,CAARA,aAAAA,CAArBF,IAAqBE,CAArBF;AACAE,IAAAA,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAA0BF,UAAU,CAApCE,OAAAA;AACAC,IAAAA,WAAW,CAAXA,EAAW,CAAXA;AACA,WAAO,YAAM;AACX,UAAIH,UAAU,CAAd,OAAA,EAAwB;AACtBE,QAAAA,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAA0BF,UAAU,CAApCE,OAAAA;AAEH;AAJD,KAAA;AAJFD,GAAAA,EASG,CATHA,IASG,CATHA;AAWA,SAAOD,UAAU,CAAVA,OAAAA,GAAAA,aAAqB,CAAA,GAAA,SAAA,CAAA,YAAA,EAAA,QAAA,EAAuBA,UAAU,CAAtDA,OAAqB,CAArBA,GAAP,IAAA;AAdK,CAAA;;GAAMD,M;;KAAAA,M","sourcesContent":["import * as React from 'react'\nimport { createPortal } from 'react-dom'\n\ntype PortalProps = {\n  children: React.ReactNode\n  type: string\n}\n\nexport const Portal: React.FC<PortalProps> = ({ children, type }) => {\n  let portalNode = React.useRef<HTMLElement | null>(null)\n  let [, forceUpdate] = React.useState<{}>()\n  React.useEffect(() => {\n    portalNode.current = document.createElement(type)\n    document.body.appendChild(portalNode.current)\n    forceUpdate({})\n    return () => {\n      if (portalNode.current) {\n        document.body.removeChild(portalNode.current)\n      }\n    }\n  }, [type])\n\n  return portalNode.current ? createPortal(children, portalNode.current) : null\n}\n"]},"metadata":{},"sourceType":"script"}