{"ast":null,"code":"import _toConsumableArray from \"C:/Users/didi/Desktop/frontend.ro/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:/Users/didi/Desktop/frontend.ro/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { EXERCISE_SUBMISSIONS } from './exercise-submissions.actions';\nvar initialState = {\n  submissions: undefined,\n  search: '',\n  page: 0,\n  end: false\n};\nexport var submissionReducer = function submissionReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case EXERCISE_SUBMISSIONS.ADD:\n      {\n        var _action$payload = action.payload,\n            index = _action$payload.index,\n            submission = _action$payload.submission;\n\n        if (!Array.isArray(submission)) {\n          submission = [submission];\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          submissions: [].concat(_toConsumableArray(state.submissions.slice(0, index)), _toConsumableArray(submission), _toConsumableArray(state.submissions.slice(index)))\n        });\n      }\n\n    case EXERCISE_SUBMISSIONS.REMOVE:\n      {\n        var id = action.payload.id;\n\n        if (!Array.isArray(id)) {\n          id = [id];\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          submissions: state.submissions.filter(function (submission) {\n            return !id.includes(submission._id);\n          })\n        });\n      }\n\n    case EXERCISE_SUBMISSIONS.UPDATE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        submissions: state.submissions.map(function (submission) {\n          var _action$payload2 = action.payload,\n              id = _action$payload2.id,\n              newSubmission = _action$payload2.newSubmission;\n\n          if (submission._id === id) {\n            return _objectSpread(_objectSpread({}, submission), newSubmission);\n          }\n\n          return submission;\n        })\n      });\n\n    case EXERCISE_SUBMISSIONS.LOAD:\n      {\n        var newSubmissions = action.payload.newSubmissions;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          submissions: state.submissions ? [].concat(_toConsumableArray(state.submissions), _toConsumableArray(newSubmissions)) : newSubmissions,\n          page: state.page + 1,\n          end: newSubmissions.length === 0\n        });\n      }\n\n    case EXERCISE_SUBMISSIONS.SEARCH:\n      {\n        var _action$payload3 = action.payload,\n            query = _action$payload3.query,\n            _newSubmissions = _action$payload3.newSubmissions;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          submissions: _newSubmissions,\n          search: query,\n          page: 1,\n          end: _newSubmissions.length === 0\n        });\n      }\n\n    default:\n      return state;\n  }\n};\nexport default submissionReducer;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/redux/exercise-submissions/exercise-submissions.reducer.ts"],"names":["EXERCISE_SUBMISSIONS","initialState","submissions","undefined","search","page","end","submissionReducer","state","action","type","ADD","payload","index","submission","Array","isArray","slice","REMOVE","id","filter","includes","_id","UPDATE","map","newSubmission","LOAD","newSubmissions","length","SEARCH","query"],"mappings":"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","sourcesContent":["import { SubmissionState } from './types';\r\nimport { EXERCISE_SUBMISSIONS } from './exercise-submissions.actions';\r\n\r\nconst initialState: SubmissionState = {\r\n  submissions: undefined,\r\n  search: '',\r\n  page: 0,\r\n  end: false,\r\n};\r\nexport const submissionReducer = (state = initialState, action: { type: string; payload: any;})\r\n: SubmissionState => {\r\n  switch (action.type) {\r\n    case EXERCISE_SUBMISSIONS.ADD: {\r\n      let { index, submission } = action.payload;\r\n      if (!Array.isArray(submission)) {\r\n        submission = [submission];\r\n      }\r\n      return {\r\n        ...state,\r\n        submissions: [...state.submissions.slice(0, index),\r\n          ...submission,\r\n          ...state.submissions.slice(index)],\r\n      };\r\n    }\r\n    case EXERCISE_SUBMISSIONS.REMOVE: {\r\n      let { id } = action.payload;\r\n      if (!Array.isArray(id)) {\r\n        id = [id];\r\n      }\r\n      return {\r\n        ...state,\r\n        submissions: state.submissions.filter((submission) => !id.includes(submission._id)),\r\n      };\r\n    }\r\n    case EXERCISE_SUBMISSIONS.UPDATE:\r\n      return {\r\n        ...state,\r\n        submissions: state.submissions.map((submission) => {\r\n          const { id, newSubmission } = action.payload;\r\n          if (submission._id === id) {\r\n            return {\r\n              ...submission,\r\n              ...newSubmission,\r\n            };\r\n          }\r\n          return submission;\r\n        }),\r\n      };\r\n    case EXERCISE_SUBMISSIONS.LOAD: {\r\n      const { newSubmissions } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        submissions: state.submissions\r\n          ? [...state.submissions, ...newSubmissions]\r\n          : newSubmissions,\r\n        page: state.page + 1,\r\n        end: newSubmissions.length === 0,\r\n      };\r\n    }\r\n    case EXERCISE_SUBMISSIONS.SEARCH: {\r\n      const { query, newSubmissions } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        submissions: newSubmissions,\r\n        search: query,\r\n        page: 1,\r\n        end: newSubmissions.length === 0,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default submissionReducer;\r\n"]},"metadata":{},"sourceType":"module"}