{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\LivePreviewDemo\\\\LivePreviewDemo.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nexport default function LivePreviewDemo({\n  title = '',\n  markdown = '',\n  className = '',\n  onInput\n}) {\n  const textareaRef = useRef(null);\n\n  const textareaInput = e => {\n    const text = e.target.value;\n    onInput(text);\n  };\n\n  return __jsx(\"textarea\", {\n    placeholder: \"Scrie aici codul...\",\n    ref: textareaRef // disabled={isPreview}\n    // className={`${isPreview ? 'd-none absolute' : ''}`}\n    ,\n    value: markdown,\n    rows: 10,\n    onChange: textareaInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/LivePreviewDemo/LivePreviewDemo.tsx"],"names":["React","useRef","LivePreviewDemo","title","markdown","className","onInput","textareaRef","textareaInput","e","text","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AASA,eAAe,SAASC,eAAT,CAAyB;AACtCC,EAAAA,KAAK,GAAG,EAD8B;AAEtCC,EAAAA,QAAQ,GAAG,EAF2B;AAGtCC,EAAAA,SAAS,GAAG,EAH0B;AAItCC,EAAAA;AAJsC,CAAzB,EAKL;AACR,QAAMC,WAAW,GAAGN,MAAM,CAAsB,IAAtB,CAA1B;;AACA,QAAMO,aAAa,GAAIC,CAAD,IAAO;AAC3B,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAtB;AACAN,IAAAA,OAAO,CAACI,IAAD,CAAP;AACD,GAHD;;AAKA,SACE;AACE,IAAA,WAAW,EAAC,qBADd;AAEE,IAAA,GAAG,EAAEH,WAFP,CAGE;AACA;AAJF;AAKE,IAAA,KAAK,EAAEH,QALT;AAME,IAAA,IAAI,EAAE,EANR;AAOE,IAAA,QAAQ,EAAEI,aAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD","sourcesContent":["import React, { useRef } from 'react';\r\n\r\ninterface Props {\r\n  title?: string;\r\n  markdown?: string;\r\n  className?: string;\r\n  onInput: (text: string) => void;\r\n}\r\n\r\nexport default function LivePreviewDemo({\r\n  title = '',\r\n  markdown = '',\r\n  className = '',\r\n  onInput,\r\n} :Props) {\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const textareaInput = (e) => {\r\n    const text = e.target.value;\r\n    onInput(text);\r\n  };\r\n\r\n  return (\r\n    <textarea\r\n      placeholder=\"Scrie aici codul...\"\r\n      ref={textareaRef}\r\n      // disabled={isPreview}\r\n      // className={`${isPreview ? 'd-none absolute' : ''}`}\r\n      value={markdown}\r\n      rows={10}\r\n      onChange={textareaInput}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}