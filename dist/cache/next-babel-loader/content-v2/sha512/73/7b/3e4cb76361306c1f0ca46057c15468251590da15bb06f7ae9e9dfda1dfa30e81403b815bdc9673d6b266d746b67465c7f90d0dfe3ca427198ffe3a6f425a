{"ast":null,"code":"import _defineProperty from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport SweetAlertService from './sweet-alert/SweetAlert.service';\n\nvar Http = /*#__PURE__*/function () {\n  function Http() {\n    _classCallCheck(this, Http);\n  }\n\n  _createClass(Http, [{\n    key: \"get\",\n    value: function get(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'GET'\n      }));\n    }\n  }, {\n    key: \"post\",\n    value: function post(url) {\n      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'POST',\n        body: body\n      }));\n    }\n  }, {\n    key: \"put\",\n    value: function put(url) {\n      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'PUT',\n        body: body\n      }));\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(url) {\n      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'PATCH',\n        body: body\n      }));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(url) {\n      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'DELETE',\n        body: body\n      }));\n    } // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"httpGeneric\",\n    value: function httpGeneric(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var headersInit = {\n        'content-type': 'application/json'\n      };\n\n      if (options.body && !(options.body instanceof FormData)) {\n        // eslint-disable-next-line no-param-reassign\n        options.body = JSON.stringify(options.body);\n      } else {\n        delete headersInit['content-type'];\n      }\n\n      return fetch(url, _objectSpread({\n        headers: new Headers(headersInit),\n        credentials: 'include'\n      }, options)).then(function (resp) {\n        if (resp.ok) {\n          return resp;\n        }\n\n        return resp.json().then(function (jsonResp) {\n          throw jsonResp;\n        });\n      })[\"catch\"](function (err) {\n        if (!err || !err.code || err.code === 500) {\n          SweetAlertService.error({\n            text: err.reason || 'Refresh-uiește pagina și încearcă din nou.',\n            buttonText: 'Ok!'\n          });\n        }\n\n        throw err;\n      });\n    }\n  }]);\n\n  return Http;\n}();\n\nexport default new Http();","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/services/Http.service.ts"],"names":["SweetAlertService","Http","url","options","httpGeneric","method","body","headersInit","FormData","JSON","stringify","fetch","headers","Headers","credentials","then","resp","ok","json","jsonResp","err","code","error","text","reason","buttonText"],"mappings":";;;;;;;;AAAA,OAAOA,iBAAP,MAA8B,kCAA9B;;IAEMC,I;;;;;;;wBACAC,G,EAA2B;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AAC7B,aAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCAA2BC,OAA3B;AAAoCE,QAAAA,MAAM,EAAE;AAA5C,SAAP;AACD;;;yBAEIH,G,EAAsC;AAAA,UAAzBI,IAAyB,uEAAlB,EAAkB;AAAA,UAAdH,OAAc,uEAAJ,EAAI;AACzC,aAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCACFC,OADE;AAELE,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,IAAI,EAAJA;AAHK,SAAP;AAKD;;;wBAEGJ,G,EAAsC;AAAA,UAAzBI,IAAyB,uEAAlB,EAAkB;AAAA,UAAdH,OAAc,uEAAJ,EAAI;AACxC,aAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCACFC,OADE;AAELE,QAAAA,MAAM,EAAE,KAFH;AAGLC,QAAAA,IAAI,EAAJA;AAHK,SAAP;AAKD;;;0BAEKJ,G,EAAsC;AAAA,UAAzBI,IAAyB,uEAAlB,EAAkB;AAAA,UAAdH,OAAc,uEAAJ,EAAI;AAC1C,aAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCACFC,OADE;AAELE,QAAAA,MAAM,EAAE,OAFH;AAGLC,QAAAA,IAAI,EAAJA;AAHK,SAAP;AAKD;;;4BAEMJ,G,EAAsC;AAAA,UAAzBI,IAAyB,uEAAlB,EAAkB;AAAA,UAAdH,OAAc,uEAAJ,EAAI;AAC3C,aAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCACFC,OADE;AAELE,QAAAA,MAAM,EAAE,QAFH;AAGLC,QAAAA,IAAI,EAAJA;AAHK,SAAP;AAKD,K,CAED;;;;gCACoBJ,G,EAAgD;AAAA,UAAnCC,OAAmC,uEAAJ,EAAI;AAClE,UAAMI,WAAwB,GAAG;AAC/B,wBAAgB;AADe,OAAjC;;AAIA,UAAIJ,OAAO,CAACG,IAAR,IAAgB,EAAEH,OAAO,CAACG,IAAR,YAAwBE,QAA1B,CAApB,EAAyD;AACvD;AACAL,QAAAA,OAAO,CAACG,IAAR,GAAeG,IAAI,CAACC,SAAL,CAAeP,OAAO,CAACG,IAAvB,CAAf;AACD,OAHD,MAGO;AACL,eAAOC,WAAW,CAAC,cAAD,CAAlB;AACD;;AAED,aAAOI,KAAK,CAACT,GAAD;AACVU,QAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAYN,WAAZ,CADC;AAEVO,QAAAA,WAAW,EAAE;AAFH,SAGPX,OAHO,EAAL,CAKJY,IALI,CAKC,UAACC,IAAD,EAAU;AACd,YAAIA,IAAI,CAACC,EAAT,EAAa;AACX,iBAAOD,IAAP;AACD;;AACD,eAAOA,IAAI,CAACE,IAAL,GAAYH,IAAZ,CAAiB,UAACI,QAAD,EAAc;AACpC,gBAAMA,QAAN;AACD,SAFM,CAAP;AAGD,OAZI,WAaE,UAACC,GAAD,EAAS;AACd,YAAI,CAACA,GAAD,IAAQ,CAACA,GAAG,CAACC,IAAb,IAAqBD,GAAG,CAACC,IAAJ,KAAa,GAAtC,EAA2C;AACzCrB,UAAAA,iBAAiB,CAACsB,KAAlB,CAAwB;AACtBC,YAAAA,IAAI,EAAEH,GAAG,CAACI,MAAJ,IAAc,4CADE;AAEtBC,YAAAA,UAAU,EAAE;AAFU,WAAxB;AAID;;AACD,cAAML,GAAN;AACD,OArBI,CAAP;AAsBD;;;;;;AAGH,eAAe,IAAInB,IAAJ,EAAf","sourcesContent":["import SweetAlertService from './sweet-alert/SweetAlert.service';\r\n\r\nclass Http {\r\n  get(url: string, options = {}) {\r\n    return this.httpGeneric(url, { ...options, method: 'GET' });\r\n  }\r\n\r\n  post(url: string, body = {}, options = {}) {\r\n    return this.httpGeneric(url, {\r\n      ...options,\r\n      method: 'POST',\r\n      body,\r\n    });\r\n  }\r\n\r\n  put(url: string, body = {}, options = {}) {\r\n    return this.httpGeneric(url, {\r\n      ...options,\r\n      method: 'PUT',\r\n      body,\r\n    });\r\n  }\r\n\r\n  patch(url: string, body = {}, options = {}) {\r\n    return this.httpGeneric(url, {\r\n      ...options,\r\n      method: 'PATCH',\r\n      body,\r\n    });\r\n  }\r\n\r\n  delete(url: string, body = {}, options = {}) {\r\n    return this.httpGeneric(url, {\r\n      ...options,\r\n      method: 'DELETE',\r\n      body,\r\n    });\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  private httpGeneric(url: string, options: Record<string, any> = {}) {\r\n    const headersInit: HeadersInit = {\r\n      'content-type': 'application/json',\r\n    };\r\n\r\n    if (options.body && !(options.body instanceof FormData)) {\r\n      // eslint-disable-next-line no-param-reassign\r\n      options.body = JSON.stringify(options.body);\r\n    } else {\r\n      delete headersInit['content-type'];\r\n    }\r\n\r\n    return fetch(url, {\r\n      headers: new Headers(headersInit),\r\n      credentials: 'include',\r\n      ...options,\r\n    })\r\n      .then((resp) => {\r\n        if (resp.ok) {\r\n          return resp;\r\n        }\r\n        return resp.json().then((jsonResp) => {\r\n          throw jsonResp;\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (!err || !err.code || err.code === 500) {\r\n          SweetAlertService.error({\r\n            text: err.reason || 'Refresh-uiește pagina și încearcă din nou.',\r\n            buttonText: 'Ok!',\r\n          });\r\n        }\r\n        throw err;\r\n      });\r\n  }\r\n}\r\n\r\nexport default new Http();\r\n"]},"metadata":{},"sourceType":"module"}