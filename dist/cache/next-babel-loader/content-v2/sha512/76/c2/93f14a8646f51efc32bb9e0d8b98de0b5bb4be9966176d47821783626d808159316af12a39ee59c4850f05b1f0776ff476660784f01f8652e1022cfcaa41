{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Highlight\\\\Highlight.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useRef, useState } from 'react';\nimport BasicEditor from '../Editor/BasicEditor/BasicEditor';\nimport { useClipboard } from '~/services/Hooks';\nimport styles from './Highlight.module.scss';\nimport IframeDemo from '../LivePreviewDemo/IframeDemo';\nexport default function Highlight(_ref) {\n  _s();\n\n  var language = _ref.language,\n      code = _ref.code,\n      className = _ref.className;\n  var _ref2 = [useRef(null), useRef(null)],\n      liveCodeRef = _ref2[0],\n      btnRef = _ref2[1];\n\n  var _useState = useState(code),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var folderStructure = liveCodeRef.current ? liveCodeRef.current.getFolderStructure() : null;\n  console.log(liveCodeRef.current); // useEffect(() => {\n  // }, []);\n\n  useClipboard(btnRef);\n  return __jsx(\"div\", {\n    className: \"\".concat(styles.highlight, \" \").concat(className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(BasicEditor, {\n    ref: liveCodeRef,\n    folderStructure: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), __jsx(IframeDemo, {\n    sourceCode: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn--transparent\",\n    \"data-clipboard-text\": code,\n    ref: btnRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(FontAwesomeIcon, {\n    className: \"text-silver\",\n    icon: faCopy,\n    width: \"32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: \"d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \" Copy \")));\n}\n\n_s(Highlight, \"+p1ej53aGXIM1RnGMUKw95yoRoE=\", false, function () {\n  return [useClipboard];\n});\n\n_c = Highlight;\n\nvar _c;\n\n$RefreshReg$(_c, \"Highlight\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Highlight/Highlight.tsx"],"names":["faCopy","FontAwesomeIcon","React","useRef","useState","BasicEditor","useClipboard","styles","IframeDemo","Highlight","language","code","className","liveCodeRef","btnRef","value","setValue","folderStructure","current","getFolderStructure","console","log","highlight"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,mCAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,IAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AAUA,eAAe,SAASC,SAAT,OAAyD;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,MAApBC,SAAoB,QAApBA,SAAoB;AAAA,cACxC,CAACT,MAAM,CAAC,IAAD,CAAP,EAAeA,MAAM,CAAC,IAAD,CAArB,CADwC;AAAA,MAC/DU,WAD+D;AAAA,MAClDC,MADkD;;AAAA,kBAE5CV,QAAQ,CAACO,IAAD,CAFoC;AAAA,MAE/DI,KAF+D;AAAA,MAExDC,QAFwD;;AAItE,MAAIC,eAAgC,GAAGJ,WAAW,CAACK,OAAZ,GACnCL,WAAW,CAACK,OAAZ,CAAoBC,kBAApB,EADmC,GAEnC,IAFJ;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,WAAW,CAACK,OAAxB,EARsE,CAUtE;AAEA;;AAEAZ,EAAAA,YAAY,CAACQ,MAAD,CAAZ;AAEA,SACE;AAAK,IAAA,SAAS,YAAKP,MAAM,CAACe,SAAZ,cAAyBV,SAAzB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,WAAD;AAAa,IAAA,GAAG,EAAEC,WAAlB;AAA+B,IAAA,eAAe,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,MAAC,UAAD;AAAY,IAAA,UAAU,EAAEE,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,kBAAhC;AAAmD,2BAAqBJ,IAAxE;AAA8E,IAAA,GAAG,EAAEG,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,aAA3B;AAAyC,IAAA,IAAI,EAAEd,MAA/C;AAAuD,IAAA,KAAK,EAAC,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CARF,CADF;AAeD;;GA/BuBS,S;UActBH,Y;;;KAdsBG,S","sourcesContent":["import { faCopy } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport BasicEditor from '../Editor/BasicEditor/BasicEditor';\r\nimport FolderStructure from '~/services/utils/FolderStructure';\r\nimport { useClipboard } from '~/services/Hooks';\r\nimport styles from './Highlight.module.scss';\r\nimport IframeDemo from '../LivePreviewDemo/IframeDemo';\r\n\r\ntype Language = 'html' | 'css' | 'json' | 'javascript';\r\n\r\ninterface Props {\r\n  code: string,\r\n  language: Language,\r\n  className?: string;\r\n}\r\n\r\nexport default function Highlight({ language, code, className }: Props) {\r\n  const [liveCodeRef, btnRef] = [useRef(null), useRef(null)];\r\n  const [value, setValue] = useState(code);\r\n\r\n  let folderStructure: FolderStructure = liveCodeRef.current\r\n    ? liveCodeRef.current.getFolderStructure()\r\n    : null;\r\n\r\n  console.log(liveCodeRef.current);\r\n\r\n  // useEffect(() => {\r\n\r\n  // }, []);\r\n\r\n  useClipboard(btnRef);\r\n\r\n  return (\r\n    <div className={`${styles.highlight} ${className}`}>\r\n      {/* <div ref={liveCodeRef} className={language}>\r\n        <code>\r\n          {code}\r\n        </code>\r\n      </div> */}\r\n      <BasicEditor ref={liveCodeRef} folderStructure />\r\n      <IframeDemo sourceCode={value} />\r\n      <button type=\"button\" className=\"btn--transparent\" data-clipboard-text={code} ref={btnRef}>\r\n        <FontAwesomeIcon className=\"text-silver\" icon={faCopy} width=\"32\" />\r\n        <span className=\"d-block\"> Copy </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}