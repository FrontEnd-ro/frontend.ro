{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\SubscribeForm\\\\SubscribeForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport UserService from '~/services/User.service';\nimport styles from './SubscribeForm.module.scss';\n\nfunction SubscribeForm() {\n  const {\n    0: didSubscribe,\n    1: setDidSubscribe\n  } = useState(false);\n  const {\n    0: isSubscribing,\n    1: setIsSubscribing\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const ROBOT_STRING = 'frontend.ro';\n\n  const submit = e => {\n    e.preventDefault();\n    e.persist();\n    const formEl = e.target;\n\n    if (!formEl.checkValidity()) {\n      return;\n    }\n\n    if (formEl['robot-check'].value !== ROBOT_STRING) {\n      setError('Hmm...ești robot cumva? 🤔');\n      return;\n    }\n\n    setError(null);\n    setIsSubscribing(true);\n    let body = {\n      name: formEl.name.value,\n      email: formEl.email.value\n    };\n    /** Subscribing in a different database until we set ours up */\n\n    UserService.subscribe(body).then(() => {\n      setDidSubscribe(true);\n    }).catch(err => {\n      setIsSubscribing(false);\n      setError(err.message || 'Oups, ceva a mers greșit. Dă-mi un semn ca să pot rezolva problema :)');\n    });\n  };\n\n  const changeName = e => {\n    setValue(e.target.name.value);\n  };\n\n  const changeEmail = e => {\n    setValue(e.target.email.value);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: submit,\n    className: `${styles.form} my-5 text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Cum s\\u0103-\\u021Bi spunem?\"), __jsx(\"input\", {\n    disabled: isSubscribing,\n    type: \"text\",\n    value: value,\n    name: \"name\",\n    required: true,\n    onChange: changeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    disabled: isSubscribing,\n    type: \"email\",\n    value: value,\n    name: \"email\",\n    required: true,\n    onChange: changeEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Ca s\\u0103 ne asigur\\u0103m c\\u0103 nu e\\u0219ti robot,\", ' ', __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), ' ', \"scrie mai jos\", ' ', __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, ROBOT_STRING)), __jsx(\"input\", {\n    disabled: isSubscribing,\n    type: \"text\",\n    name: \"robot-check\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })), error && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, ' ', \"\\u274C\", error), didSubscribe ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \" \\u2714 Bine ai venit \\xEEn comunitate!\") : __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubscribing,\n    className: `btn btn--light w-100${isSubscribing ? ' btn--loading' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Aboneaz\\u0103-te!\"));\n}\n\nexport default SubscribeForm;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/SubscribeForm/SubscribeForm.tsx"],"names":["React","useState","UserService","styles","SubscribeForm","didSubscribe","setDidSubscribe","isSubscribing","setIsSubscribing","error","setError","value","setValue","ROBOT_STRING","submit","e","preventDefault","persist","formEl","target","checkValidity","body","name","email","subscribe","then","catch","err","message","changeName","changeEmail","form"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,SAASC,aAAT,GAAyB;AACvB,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCL,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAA,OAACM,aAAD;AAAA,OAAgBC;AAAhB,MAAoCP,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMY,YAAY,GAAG,aAArB;;AAEA,QAAMC,MAAM,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,OAAF;AAEA,UAAMC,MAAM,GAAGH,CAAC,CAACI,MAAjB;;AAEA,QAAI,CAACD,MAAM,CAACE,aAAP,EAAL,EAA6B;AAC3B;AACD;;AAED,QAAIF,MAAM,CAAC,aAAD,CAAN,CAAsBP,KAAtB,KAAgCE,YAApC,EAAkD;AAChDH,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACA;AACD;;AAEDA,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAEA,QAAIa,IAAI,GAAG;AACTC,MAAAA,IAAI,EAAEJ,MAAM,CAACI,IAAP,CAAYX,KADT;AAETY,MAAAA,KAAK,EAAEL,MAAM,CAACK,KAAP,CAAaZ;AAFX,KAAX;AAKA;;AACAT,IAAAA,WAAW,CAACsB,SAAZ,CAAsBH,IAAtB,EACGI,IADH,CACQ,MAAM;AACVnB,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAHH,EAIGoB,KAJH,CAIUC,GAAD,IAAS;AACdnB,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,MAAAA,QAAQ,CAACiB,GAAG,CAACC,OAAJ,IAAe,uEAAhB,CAAR;AACD,KAPH;AAQD,GAhCD;;AAkCA,QAAMC,UAAU,GAAId,CAAD,IAAO;AACxBH,IAAAA,QAAQ,CAACG,CAAC,CAACI,MAAF,CAASG,IAAT,CAAcX,KAAf,CAAR;AACD,GAFD;;AAIA,QAAMmB,WAAW,GAAIf,CAAD,IAAO;AACzBH,IAAAA,QAAQ,CAACG,CAAC,CAACI,MAAF,CAASI,KAAT,CAAeZ,KAAhB,CAAR;AACD,GAFD;;AAIA,SACE;AAAM,IAAA,QAAQ,EAAEG,MAAhB;AAAwB,IAAA,SAAS,EAAG,GAAEX,MAAM,CAAC4B,IAAK,mBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAO,IAAA,QAAQ,EAAExB,aAAjB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,KAAK,EAAEI,KAAnD;AAA0D,IAAA,IAAI,EAAC,MAA/D;AAAsE,IAAA,QAAQ,MAA9E;AAA+E,IAAA,QAAQ,EAAEkB,UAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAO,IAAA,QAAQ,EAAEtB,aAAjB;AAAgC,IAAA,IAAI,EAAC,OAArC;AAA6C,IAAA,KAAK,EAAEI,KAApD;AAA2D,IAAA,IAAI,EAAC,OAAhE;AAAwE,IAAA,QAAQ,MAAhF;AAAiF,IAAA,QAAQ,EAAEmB,WAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAEG,GAFH,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIG,GAJH,mBAMG,GANH,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASjB,YAAT,CAPF,CADF,EAUE;AAAO,IAAA,QAAQ,EAAEN,aAAjB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,IAAI,EAAC,aAAjD;AAA+D,IAAA,QAAQ,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CATF,EAqBGE,KAAK,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,YAGGA,KAHH,CAtBJ,EA4BGJ,YAAY,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADS,GAGT;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAEE,aAFZ;AAGE,IAAA,SAAS,EAAG,uBAAsBA,aAAa,GAAG,eAAH,GAAqB,EAAG,EAHzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA/BN,CADF;AA2CD;;AAED,eAAeH,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport UserService from '~/services/User.service';\r\nimport styles from './SubscribeForm.module.scss';\r\n\r\nfunction SubscribeForm() {\r\n  const [didSubscribe, setDidSubscribe] = useState(false);\r\n  const [isSubscribing, setIsSubscribing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [value, setValue] = useState('');\r\n\r\n  const ROBOT_STRING = 'frontend.ro';\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    e.persist();\r\n\r\n    const formEl = e.target;\r\n\r\n    if (!formEl.checkValidity()) {\r\n      return;\r\n    }\r\n\r\n    if (formEl['robot-check'].value !== ROBOT_STRING) {\r\n      setError('Hmm...ești robot cumva? 🤔');\r\n      return;\r\n    }\r\n\r\n    setError(null);\r\n    setIsSubscribing(true);\r\n\r\n    let body = {\r\n      name: formEl.name.value,\r\n      email: formEl.email.value,\r\n    };\r\n\r\n    /** Subscribing in a different database until we set ours up */\r\n    UserService.subscribe(body)\r\n      .then(() => {\r\n        setDidSubscribe(true);\r\n      })\r\n      .catch((err) => {\r\n        setIsSubscribing(false);\r\n        setError(err.message || 'Oups, ceva a mers greșit. Dă-mi un semn ca să pot rezolva problema :)');\r\n      });\r\n  };\r\n\r\n  const changeName = (e) => {\r\n    setValue(e.target.name.value);\r\n  };\r\n\r\n  const changeEmail = (e) => {\r\n    setValue(e.target.email.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submit} className={`${styles.form} my-5 text-center`}>\r\n      <label>\r\n        <span className=\"m-0\">Cum să-ți spunem?</span>\r\n        <input disabled={isSubscribing} type=\"text\" value={value} name=\"name\" required onChange={changeName} />\r\n      </label>\r\n      <label>\r\n        <span className=\"m-0\">Email</span>\r\n        <input disabled={isSubscribing} type=\"email\" value={value} name=\"email\" required onChange={changeEmail}/>\r\n      </label>\r\n      <label>\r\n        <span className=\"mb-2\">\r\n          Ca să ne asigurăm că nu ești robot,\r\n          {' '}\r\n          <br />\r\n          {' '}\r\n          scrie mai jos\r\n          {' '}\r\n          <strong>{ROBOT_STRING}</strong>\r\n        </span>\r\n        <input disabled={isSubscribing} type=\"text\" name=\"robot-check\" required />\r\n      </label>\r\n      {error && (\r\n        <p>\r\n          {' '}\r\n          ❌\r\n          {error}\r\n        </p>\r\n      )}\r\n      {didSubscribe\r\n        ? <p> ✔ Bine ai venit în comunitate!</p>\r\n        : (\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isSubscribing}\r\n            className={`btn btn--light w-100${isSubscribing ? ' btn--loading' : ''}`}\r\n          >\r\n            Abonează-te!\r\n          </button>\r\n        )}\r\n\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SubscribeForm;\r\n"]},"metadata":{},"sourceType":"module"}