{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Header\\\\AccountTooltip\\\\AccountTooltip.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport UserService from '~/services/User.service';\nimport Button from '~/components/Button';\nimport styles from './AccountTooltip.module.scss';\nimport { useOutsideClick } from '~/services/Hooks';\nimport { logoutUser } from '~/redux/user/user.actions';\n\nfunction AccountTooltip(_ref) {\n  _s();\n\n  var user = _ref.user,\n      dispatch = _ref.dispatch;\n  var ref = useRef(null);\n  var router = useRouter();\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var logout = function logout() {\n    UserService.logout().then(function () {\n      router.replace('/').then(function () {\n        dispatch(logoutUser());\n      });\n    });\n  };\n\n  var toggleToolip = function toggleToolip() {\n    return setIsOpen(!isOpen);\n  };\n\n  useOutsideClick(ref, function () {\n    return setIsOpen(false);\n  });\n  return __jsx(\"div\", {\n    ref: ref,\n    className: styles['account-tooltip'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    className: styles.avatar,\n    onClick: toggleToolip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: \"pointer\",\n    title: \"Toggle menu\",\n    src: user.info.avatar,\n    alt: \"\".concat(user.info.name, \" avatar\"),\n    width: \"32\",\n    \"data-toggle\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), isOpen && __jsx(\"ul\", {\n    className: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/\".concat(user.info.username),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"no-underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"Profilul t\\u0103u\"))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"no-underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Set\\u0103rile contului\"))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: logout,\n    className: \"no-underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Sign out\"))));\n}\n\n_s(AccountTooltip, \"6hNDXam3HepZydVnuXC+0CaD6aI=\", false, function () {\n  return [useRouter, useOutsideClick];\n});\n\n_c = AccountTooltip;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nvar connector = connect(mapStateToProps);\nexport default _c2 = connector(AccountTooltip);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AccountTooltip\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Header/AccountTooltip/AccountTooltip.tsx"],"names":["React","useState","useRef","Link","connect","useRouter","UserService","Button","styles","useOutsideClick","logoutUser","AccountTooltip","user","dispatch","ref","router","isOpen","setIsOpen","logout","then","replace","toggleToolip","avatar","info","name","username","mapStateToProps","state","connector"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Link from 'next/link';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport UserService from '~/services/User.service';\r\nimport { RootState } from '~/redux/root.reducer';\r\nimport Button from '~/components/Button';\r\n\r\nimport styles from './AccountTooltip.module.scss';\r\nimport { useOutsideClick } from '~/services/Hooks';\r\nimport { logoutUser } from '~/redux/user/user.actions';\r\n\r\nfunction AccountTooltip({ user, dispatch }: ConnectedProps<typeof connector>) {\r\n  const ref = useRef(null);\r\n  const router = useRouter();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const logout = () => {\r\n    UserService.logout().then(() => {\r\n      router.replace('/').then(() => {\r\n        dispatch(logoutUser());\r\n      });\r\n    });\r\n  };\r\n\r\n  const toggleToolip = () => setIsOpen(!isOpen);\r\n\r\n  useOutsideClick(ref, () => setIsOpen(false));\r\n\r\n  return (\r\n    <div ref={ref} className={styles['account-tooltip']}>\r\n      <Button className={styles.avatar} onClick={toggleToolip}>\r\n        <img\r\n          className=\"pointer\"\r\n          title=\"Toggle menu\"\r\n          src={user.info.avatar}\r\n          alt={`${user.info.name} avatar`}\r\n          width=\"32\"\r\n          data-toggle=\"true\"\r\n        />\r\n      </Button>\r\n      {isOpen && (\r\n        <ul className=\"menu\">\r\n          <li>\r\n            <Link href={`/${user.info.username}`}>\r\n              <a className=\"no-underline\">\r\n                Profilul tău\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link href=\"/settings\">\r\n              <a className=\"no-underline\">\r\n                Setările contului\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\" onClick={logout} className=\"no-underline\">\r\n              Sign out\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(AccountTooltip);\r\n"]},"metadata":{},"sourceType":"module"}