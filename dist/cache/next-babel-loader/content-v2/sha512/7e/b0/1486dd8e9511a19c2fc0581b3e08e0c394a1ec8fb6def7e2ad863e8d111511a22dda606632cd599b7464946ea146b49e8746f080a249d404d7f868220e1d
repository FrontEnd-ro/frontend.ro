{"ast":null,"code":"const LOAD_DURATION = 1000;\n\nclass EventService {\n  static wait(mili) {\n    return new Promise(resolve => setTimeout(resolve, mili));\n  }\n\n  static async sendFormData(name, email, date) {\n    await EventService.wait(LOAD_DURATION);\n  }\n\n}\n\nexport default EventService;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/services/Event.service.ts"],"names":["LOAD_DURATION","EventService","wait","mili","Promise","resolve","setTimeout","sendFormData","name","email","date"],"mappings":"AAEA,MAAMA,aAAa,GAAG,IAAtB;;AAEA,MAAMC,YAAN,CAAmB;AACjB,SAAOC,IAAP,CAAYC,IAAZ,EAAkB;AAChB,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,IAAV,CAAnC,CAAP;AACD;;AAED,eAAaI,YAAb,CAA0BC,IAA1B,EAAwCC,KAAxC,EAAuDC,IAAvD,EAAiF;AAC/E,UAAMT,YAAY,CAACC,IAAb,CAAkBF,aAAlB,CAAN;AACD;;AAPgB;;AASnB,eAAeC,YAAf","sourcesContent":["import HttpService from './Http.service';\r\n\r\nconst LOAD_DURATION = 1000;\r\n\r\nclass EventService {\r\n  static wait(mili) {\r\n    return new Promise((resolve) => setTimeout(resolve, mili));\r\n  }\r\n\r\n  static async sendFormData(name: string, email: string, date: Date): Promise<any> {\r\n    await EventService.wait(LOAD_DURATION);\r\n  }\r\n}\r\nexport default EventService;\r\n"]},"metadata":{},"sourceType":"module"}