{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LogRocketService from '~/services/utils/LogRocket.service';\n/**\r\n * This component \"listens\" to the User Store and\r\n * identifies the logged in user in LogRocket.\r\n *\r\n * When that user logs out, it clear all the data.\r\n */\n\nfunction IdentifyLogrocket(_ref) {\n  _s();\n\n  var userInfo = _ref.userInfo;\n  useEffect(function () {\n    if (process.env.APP_ENV !== 'production') {\n      return;\n    }\n\n    LogRocketService.init();\n\n    if (userInfo) {\n      LogRocketService.identify(userInfo);\n    } else {\n      LogRocketService.anonymize();\n    }\n  }, [userInfo]);\n  return null;\n}\n\n_s(IdentifyLogrocket, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = IdentifyLogrocket;\n\nfunction mapStateToProps(state) {\n  return {\n    userInfo: state.user.info\n  };\n}\n\nvar connector = connect(mapStateToProps);\nexport default _c2 = connector(IdentifyLogrocket);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IdentifyLogrocket\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/IdentifyLogRocket.tsx"],"names":["useEffect","connect","LogRocketService","IdentifyLogrocket","userInfo","process","env","APP_ENV","init","identify","anonymize","mapStateToProps","state","user","info","connector"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,OAAOC,gBAAP,MAA6B,oCAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,OAA2E;AAAA;;AAAA,MAA9CC,QAA8C,QAA9CA,QAA8C;AACzEJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIK,OAAO,CAACC,GAAR,CAAYC,OAAZ,KAAwB,YAA5B,EAA0C;AACxC;AACD;;AAEDL,IAAAA,gBAAgB,CAACM,IAAjB;;AAEA,QAAIJ,QAAJ,EAAc;AACZF,MAAAA,gBAAgB,CAACO,QAAjB,CAA0BL,QAA1B;AACD,KAFD,MAEO;AACLF,MAAAA,gBAAgB,CAACQ,SAAjB;AACD;AACF,GAZQ,EAYN,CAACN,QAAD,CAZM,CAAT;AAcA,SAAO,IAAP;AACD;;GAhBQD,iB;;KAAAA,iB;;AAkBT,SAASQ,eAAT,CAAyBC,KAAzB,EAA2C;AACzC,SAAO;AACLR,IAAAA,QAAQ,EAAEQ,KAAK,CAACC,IAAN,CAAWC;AADhB,GAAP;AAGD;;AAED,IAAMC,SAAS,GAAGd,OAAO,CAACU,eAAD,CAAzB;AAEA,qBAAeI,SAAS,CAACZ,iBAAD,CAAxB","sourcesContent":["import { useEffect } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { RootState } from '~/redux/root.reducer';\r\nimport LogRocketService from '~/services/utils/LogRocket.service';\r\n\r\n/**\r\n * This component \"listens\" to the User Store and\r\n * identifies the logged in user in LogRocket.\r\n *\r\n * When that user logs out, it clear all the data.\r\n */\r\nfunction IdentifyLogrocket({ userInfo }: ConnectedProps<typeof connector>) {\r\n  useEffect(() => {\r\n    if (process.env.APP_ENV !== 'production') {\r\n      return;\r\n    }\r\n\r\n    LogRocketService.init();\r\n\r\n    if (userInfo) {\r\n      LogRocketService.identify(userInfo);\r\n    } else {\r\n      LogRocketService.anonymize();\r\n    }\r\n  }, [userInfo]);\r\n\r\n  return null;\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    userInfo: state.user.info,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(IdentifyLogrocket);\r\n"]},"metadata":{},"sourceType":"module"}