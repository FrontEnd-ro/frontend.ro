{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\lessons\\\\LessonExercises\\\\LessonExercises.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport LessonHeading from '../LessonHeading/LessonHeading';\nimport LessonExerciseService from '~/services/LessonExercise.service';\nimport Spinner from '~/components/Spinner';\nimport ExercisePreview from '~/components/ExercisePreview';\nimport { SUBMISSION_STATUS } from '~/../shared/SharedConstants';\nimport ExerciseService from '~/services/Exercise.service';\nimport styles from './LessonExercises.module.scss';\n\nfunction LessonExercises(_ref) {\n  _s();\n\n  var _this = this;\n\n  var user = _ref.user,\n      lessonId = _ref.lessonId;\n  var isLoggedIn = !!user.info;\n\n  var _useState = useState(undefined),\n      submissions = _useState[0],\n      setSubmissions = _useState[1];\n\n  var _useState2 = useState(undefined),\n      exercises = _useState2[0],\n      setExercises = _useState2[1];\n\n  useEffect(function () {\n    LessonExerciseService.getAllExercisesForLessons(lessonId).then(function (exercises) {\n      return setExercises(exercises);\n    })[\"catch\"](function (err) {\n      console.error('[LessonExercises.useEffect]', err);\n      setExercises([]);\n    });\n\n    if (isLoggedIn) {\n      ExerciseService.getSolvedExercises().then(function (resp) {\n        return setSubmissions(resp);\n      })[\"catch\"](function (err) {\n        return console.error(err);\n      });\n    } else {\n      setSubmissions([]);\n    }\n  }, []);\n\n  if (!Array.isArray(exercises) || !Array.isArray(submissions)) {\n    return __jsx(\"div\", {\n      id: \"exercitii\",\n      className: styles.exercises,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, __jsx(Spinner, {\n      showText: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  var mergedData = [];\n  exercises.forEach(function (ex) {\n    var matchedSubmission = submissions.find(function (sub) {\n      return sub.exercise._id === ex._id;\n    });\n\n    if (matchedSubmission) {\n      mergedData.push(matchedSubmission);\n    } else {\n      mergedData.push({\n        code: '',\n        _id: ex._id,\n        exercise: ex,\n        feedbacks: [],\n        status: null,\n        user: user.info,\n        submittedAt: null,\n        updatedAt: null\n      });\n    }\n  });\n  console.log(\"XXX\", mergedData);\n  return __jsx(\"div\", {\n    className: \"\".concat(styles.exercises, \" \").concat(exercises.length === 0 ? styles['exercises--empty'] : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(LessonHeading, {\n    as: \"h3\",\n    id: \"exercitii\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Exerci\\u021Bii\"), exercises.length > 0 ? __jsx(\"div\", {\n    className: styles['exercises-wrapper'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, mergedData.map(function (sub) {\n    return __jsx(ExercisePreview, {\n      key: sub.exercise._id,\n      exercise: sub.exercise,\n      isPrivate: false,\n      feedbackCount: sub.feedbacks.filter(function (f) {\n        return f.type === 'improvement';\n      }).length,\n      isApproved: sub.status === SUBMISSION_STATUS.DONE,\n      viewMode: \"STUDENT\",\n      readOnly: [SUBMISSION_STATUS.AWAITING_REVIEW, SUBMISSION_STATUS.DONE].includes(sub.status),\n      href: \"/rezolva/\".concat(sub.exercise._id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    });\n  })) : __jsx(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \" \\xCEn cur\\xE2nd vom ad\\u0103uga exerci\\u021Bii \"), ' ', \"la aceast\\u0103 lec\\u021Bie. P\\xE2n\\u0103 atunci po\\u021Bi s\\u0103 rezolvi celelalte\", ' ', __jsx(Link, {\n    href: \"/exercitii\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"text-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"exerci\\u021Bii disponibile\")), \".\")));\n}\n\n_s(LessonExercises, \"avX1anQi4x8jUHlW0ZAH83WN/4I=\");\n\n_c = LessonExercises;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nvar connector = connect(mapStateToProps);\nexport default _c2 = connector(LessonExercises);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LessonExercises\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/lessons/LessonExercises/LessonExercises.tsx"],"names":["React","useState","useEffect","Link","connect","LessonHeading","LessonExerciseService","Spinner","ExercisePreview","SUBMISSION_STATUS","ExerciseService","styles","LessonExercises","user","lessonId","isLoggedIn","info","undefined","submissions","setSubmissions","exercises","setExercises","getAllExercisesForLessons","then","err","console","error","getSolvedExercises","resp","Array","isArray","mergedData","forEach","ex","matchedSubmission","find","sub","exercise","_id","push","code","feedbacks","status","submittedAt","updatedAt","log","length","map","filter","f","type","DONE","AWAITING_REVIEW","includes","mapStateToProps","state","connector"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { ConnectedProps, connect } from 'react-redux';\r\nimport LessonHeading from '../LessonHeading/LessonHeading';\r\nimport LessonExerciseService from '~/services/LessonExercise.service';\r\nimport { LessonExercise } from '~/redux/user/types';\r\nimport Spinner from '~/components/Spinner';\r\nimport ExercisePreview from '~/components/ExercisePreview';\r\nimport { RootState } from '~/redux/root.reducer';\r\nimport { Submission } from '~/redux/exercise-submissions/types';\r\nimport { SUBMISSION_STATUS } from '~/../shared/SharedConstants';\r\nimport ExerciseService from '~/services/Exercise.service';\r\n\r\nimport styles from './LessonExercises.module.scss';\r\n\r\ninterface Props {\r\n  lessonId: string\r\n}\r\n\r\nfunction LessonExercises({ user, lessonId }: Props & ConnectedProps<typeof connector>) {\r\n  const isLoggedIn = !!user.info;\r\n\r\n  const [submissions, setSubmissions] = useState<Submission[]>(undefined);\r\n  const [exercises, setExercises] = useState<LessonExercise[]>(undefined);\r\n\r\n  useEffect(() => {\r\n    LessonExerciseService\r\n      .getAllExercisesForLessons(lessonId)\r\n      .then((exercises) => setExercises(exercises))\r\n      .catch((err) => {\r\n        console.error('[LessonExercises.useEffect]', err);\r\n        setExercises([]);\r\n      });\r\n\r\n    if (isLoggedIn) {\r\n      ExerciseService\r\n        .getSolvedExercises()\r\n        .then((resp) => setSubmissions(resp))\r\n        .catch((err) => console.error(err));\r\n    } else {\r\n      setSubmissions([]);\r\n    }\r\n  }, []);\r\n\r\n  if (!Array.isArray(exercises) || !Array.isArray(submissions)) {\r\n    return (\r\n      <div id=\"exercitii\" className={styles.exercises}>\r\n        <Spinner showText />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const mergedData: Submission[] = [];\r\n  exercises.forEach((ex) => {\r\n    const matchedSubmission = submissions.find((sub) => sub.exercise._id === ex._id);\r\n\r\n    if (matchedSubmission) {\r\n      mergedData.push(matchedSubmission);\r\n    } else {\r\n      mergedData.push({\r\n        code: '',\r\n        _id: ex._id,\r\n        exercise: ex,\r\n        feedbacks: [],\r\n        status: null,\r\n        user: user.info,\r\n        submittedAt: null,\r\n        updatedAt: null,\r\n      });\r\n    }\r\n  });\r\n\r\n  console.log(\"XXX\", mergedData);\r\n\r\n  return (\r\n    <div className={`${styles.exercises} ${exercises.length === 0 ? styles['exercises--empty'] : ''}`}>\r\n      <section>\r\n        <LessonHeading as=\"h3\" id=\"exercitii\">\r\n          Exerciții\r\n        </LessonHeading>\r\n\r\n        {exercises.length > 0 ? (\r\n          <div className={styles['exercises-wrapper']}>\r\n            {mergedData.map((sub) => (\r\n              <ExercisePreview\r\n                key={sub.exercise._id}\r\n                exercise={sub.exercise}\r\n                isPrivate={false}\r\n                feedbackCount={sub.feedbacks.filter((f) => f.type === 'improvement').length}\r\n                isApproved={sub.status === SUBMISSION_STATUS.DONE}\r\n                viewMode=\"STUDENT\"\r\n                readOnly={[\r\n                  SUBMISSION_STATUS.AWAITING_REVIEW,\r\n                  SUBMISSION_STATUS.DONE,\r\n                ].includes(sub.status)}\r\n                href={`/rezolva/${sub.exercise._id}`}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p className=\"mb-0\">\r\n            <strong> În curând vom adăuga exerciții </strong>\r\n            {' '}\r\n            la această lecție.\r\n            Până atunci poți să rezolvi celelalte\r\n            {' '}\r\n            <Link href=\"/exercitii\">\r\n              <a className=\"text-bold\">\r\n                exerciții disponibile\r\n              </a>\r\n            </Link>\r\n            .\r\n          </p>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(LessonExercises);\r\n"]},"metadata":{},"sourceType":"module"}