{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Landing\\\\LandingStats\\\\CounterCard\\\\CounterCard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport CountUp from 'react-countup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from './CounterCard.module.scss';\nexport default function CounterCard(_ref) {\n  _s();\n\n  var _this = this;\n\n  var icon = _ref.icon,\n      counter = _ref.counter,\n      description = _ref.description,\n      _ref$withAnimation = _ref.withAnimation,\n      withAnimation = _ref$withAnimation === void 0 ? true : _ref$withAnimation;\n  var counterWrapperRef = useRef(null);\n  useEffect(function () {\n    initIntersectionObserver();\n  }, []);\n\n  var initIntersectionObserver = function initIntersectionObserver() {\n    var options = {\n      threshold: 0.5\n    };\n    var observer = new IntersectionObserver(detectIntersection, options);\n    observer.observe(counterWrapperRef.current);\n  };\n\n  var detectIntersection = function detectIntersection(entries) {\n    entries.forEach(function (entry) {\n      if (entry.intersectionRatio > 0.5) {\n        withAnimation = true;\n      }\n    });\n  };\n\n  return __jsx(CountUp, {\n    start: 0,\n    end: counter,\n    delay: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var countUpRef = _ref2.countUpRef;\n    return __jsx(\"div\", {\n      ref: counterWrapperRef,\n      className: \"\".concat(styles['counter-card'], \" text-center\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"\".concat(styles['icon-box'], \" d-flex justify-content-center align-items-center\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, __jsx(FontAwesomeIcon, {\n      width: \"30\",\n      height: \"30\",\n      color: \"#fff\",\n      icon: icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: styles['counter-details'],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      ref: withAnimation && countUpRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, counter), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, description)));\n  });\n}\n\n_s(CounterCard, \"HrAzaV6YYzuzly2GfRqQ3TIEeFQ=\");\n\n_c = CounterCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterCard\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Landing/LandingStats/CounterCard/CounterCard.tsx"],"names":["React","useEffect","useRef","CountUp","FontAwesomeIcon","styles","CounterCard","icon","counter","description","withAnimation","counterWrapperRef","initIntersectionObserver","options","threshold","observer","IntersectionObserver","detectIntersection","observe","current","entries","forEach","entry","intersectionRatio","countUpRef"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;AASA,eAAe,SAASC,WAAT,OAKL;AAAA;;AAAA;;AAAA,MAJRC,IAIQ,QAJRA,IAIQ;AAAA,MAHRC,OAGQ,QAHRA,OAGQ;AAAA,MAFRC,WAEQ,QAFRA,WAEQ;AAAA,gCADRC,aACQ;AAAA,MADRA,aACQ,mCADQ,IACR;AACR,MAAIC,iBAAiB,GAAGT,MAAM,CAAC,IAAD,CAA9B;AACAD,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,wBAAwB;AACzB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrC,QAAMC,OAAO,GAAG;AACdC,MAAAA,SAAS,EAAE;AADG,KAAhB;AAIA,QAAIC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBC,kBAAzB,EAA6CJ,OAA7C,CAAf;AACAE,IAAAA,QAAQ,CAACG,OAAT,CAAiBP,iBAAiB,CAACQ,OAAnC;AACD,GAPD;;AASA,MAAMF,kBAAkB,GAAG,SAArBA,kBAAqB,CAACG,OAAD,EAAa;AACtCA,IAAAA,OAAO,CAACC,OAAR,CAAgB,UAACC,KAAD,EAAW;AACzB,UAAIA,KAAK,CAACC,iBAAN,GAA0B,GAA9B,EAAmC;AACjCb,QAAAA,aAAa,GAAG,IAAhB;AACD;AACF,KAJD;AAKD,GAND;;AAQA,SACE,MAAC,OAAD;AAAS,IAAA,KAAK,EAAE,CAAhB;AAAmB,IAAA,GAAG,EAAEF,OAAxB;AAAiC,IAAA,KAAK,EAAE,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGgB,UAAH,SAAGA,UAAH;AAAA,WACC;AAAK,MAAA,GAAG,EAAEb,iBAAV;AAA6B,MAAA,SAAS,YAAKN,MAAM,CAAC,cAAD,CAAX,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,YAAKA,MAAM,CAAC,UAAD,CAAX,sDADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,MAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,IAAvB;AAA4B,MAAA,MAAM,EAAC,IAAnC;AAAwC,MAAA,KAAK,EAAC,MAA9C;AAAqD,MAAA,IAAI,EAAEE,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,EAME;AAAK,MAAA,SAAS,EAAEF,MAAM,CAAC,iBAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,GAAG,EAAEK,aAAa,IAAIc,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsChB,OAAtC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,WAAJ,CAFF,CANF,CADD;AAAA,GADH,CADF;AAiBD;;GA7CuBH,W;;KAAAA,W","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport CountUp from 'react-countup';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport styles from './CounterCard.module.scss';\r\n\r\ninterface Props {\r\n  icon: IconProp;\r\n  counter: number;\r\n  description: string;\r\n  withAnimation?: boolean;\r\n}\r\n\r\nexport default function CounterCard({\r\n  icon,\r\n  counter,\r\n  description,\r\n  withAnimation = true,\r\n}: Props) {\r\n  let counterWrapperRef = useRef(null);\r\n  useEffect(() => {\r\n    initIntersectionObserver();\r\n  }, []);\r\n\r\n  const initIntersectionObserver = () => {\r\n    const options = {\r\n      threshold: 0.5,\r\n    };\r\n\r\n    let observer = new IntersectionObserver(detectIntersection, options);\r\n    observer.observe(counterWrapperRef.current);\r\n  };\r\n\r\n  const detectIntersection = (entries) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.intersectionRatio > 0.5) {\r\n        withAnimation = true;\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CountUp start={0} end={counter} delay={0}>\r\n      {({ countUpRef }) => (\r\n        <div ref={counterWrapperRef} className={`${styles['counter-card']} text-center`}>\r\n          <div\r\n            className={`${styles['icon-box']} d-flex justify-content-center align-items-center`}\r\n          >\r\n            <FontAwesomeIcon width=\"30\" height=\"30\" color=\"#fff\" icon={icon} />\r\n          </div>\r\n          <div className={styles['counter-details']}>\r\n            <p ref={withAnimation && countUpRef}>{counter}</p>\r\n            <p>{description}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </CountUp>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}