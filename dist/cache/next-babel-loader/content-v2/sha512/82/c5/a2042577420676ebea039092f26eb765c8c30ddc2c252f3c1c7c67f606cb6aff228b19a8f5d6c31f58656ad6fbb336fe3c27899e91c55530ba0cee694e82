{"ast":null,"code":"import { connect } from 'react-redux';\nimport LogRocketService from '~/services/utils/LogRocket.service';\n/**\r\n * This component \"listens\" to the User Store and\r\n * identifies the logged in user in LogRocket.\r\n *\r\n * When that user logs out, it clear all the data.\r\n */\n\nfunction IdentifyLogrocket({\n  userInfo\n}) {\n  if (true) {\n    /** Client-side only */\n    return null;\n  }\n\n  if (!userInfo && LogRocketService.getIdentityData()) {\n    LogRocketService.anonymize();\n  }\n\n  if (userInfo && !LogRocketService.getIdentityData()) {\n    LogRocketService.identify(userInfo);\n  }\n\n  return null;\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userInfo: state.user.info\n  };\n}\n\nconst connector = connect(mapStateToProps);\nexport default connector(IdentifyLogrocket);","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/IdentifyLogRocket.tsx"],"names":["connect","LogRocketService","IdentifyLogrocket","userInfo","getIdentityData","anonymize","identify","mapStateToProps","state","user","info","connector"],"mappings":"AAAA,SAASA,OAAT,QAAwC,aAAxC;AAEA,OAAOC,gBAAP,MAA6B,oCAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAA2E;AACzE,YAAmC;AACjC;AACA,WAAO,IAAP;AACD;;AAED,MAAI,CAACA,QAAD,IAAaF,gBAAgB,CAACG,eAAjB,EAAjB,EAAqD;AACnDH,IAAAA,gBAAgB,CAACI,SAAjB;AACD;;AAED,MAAIF,QAAQ,IAAI,CAACF,gBAAgB,CAACG,eAAjB,EAAjB,EAAqD;AACnDH,IAAAA,gBAAgB,CAACK,QAAjB,CAA0BH,QAA1B;AACD;;AAED,SAAO,IAAP;AACD;;AAED,SAASI,eAAT,CAAyBC,KAAzB,EAA2C;AACzC,SAAO;AACLL,IAAAA,QAAQ,EAAEK,KAAK,CAACC,IAAN,CAAWC;AADhB,GAAP;AAGD;;AAED,MAAMC,SAAS,GAAGX,OAAO,CAACO,eAAD,CAAzB;AAEA,eAAeI,SAAS,CAACT,iBAAD,CAAxB","sourcesContent":["import { connect, ConnectedProps } from 'react-redux';\r\nimport { RootState } from '~/redux/root.reducer';\r\nimport LogRocketService from '~/services/utils/LogRocket.service';\r\n\r\n/**\r\n * This component \"listens\" to the User Store and\r\n * identifies the logged in user in LogRocket.\r\n *\r\n * When that user logs out, it clear all the data.\r\n */\r\nfunction IdentifyLogrocket({ userInfo }: ConnectedProps<typeof connector>) {\r\n  if (typeof window === 'undefined') {\r\n    /** Client-side only */\r\n    return null;\r\n  }\r\n\r\n  if (!userInfo && LogRocketService.getIdentityData()) {\r\n    LogRocketService.anonymize();\r\n  }\r\n\r\n  if (userInfo && !LogRocketService.getIdentityData()) {\r\n    LogRocketService.identify(userInfo);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    userInfo: state.user.info,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(IdentifyLogrocket);\r\n"]},"metadata":{},"sourceType":"module"}