{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\event\\\\RegisterEventCard\\\\RegisterEventCard.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport { format } from 'date-fns';\nimport ReactSelect from 'react-select';\nimport EventService from '~/services/api/Event.service';\nimport Form, { FormGroup } from '~/components/Form';\nimport { ShareButton } from '~/components/SocialMediaButtons';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport WaitlistConfirmation from '../WaitListConfirmation/WaitListConfirmation';\nimport styles from './RegisterEventCard.module.scss';\n\nfunction EventCard({\n  userInfo,\n  id,\n  title,\n  cover,\n  url,\n  duration,\n  description,\n  location,\n  eventDates,\n  className\n}) {\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: urlToShare,\n    1: setUrlToShare\n  } = useState(url);\n  const isPastEvent = eventDates.every(({\n    timestamp\n  }) => Date.now() > timestamp);\n  useEffect(() => {\n    // If we have the `url` prop then let's use that\n    // as the share url. Otherwise default to the current page.\n    if (url) {\n      setUrlToShare(`${window.location.origin}${url}`);\n    } else {\n      setUrlToShare(`${window.location.origin}${window.location.pathname}`);\n    }\n  }, []);\n\n  const onSubmit = async (formData) => {\n    setIsLoading(true);\n    let shouldResetForm = true;\n\n    if (!formData.timestamp) {\n      formData.timestamp = formData.timestamp || eventDates[0].timestamp;\n    }\n\n    try {\n      const seatsInfo = await EventService.getSeatsInfo(id);\n\n      if (seatsInfo.free > 0) {\n        await EventService.register(id, formData);\n        SweetAlertService.toast({\n          type: 'success',\n          text: 'Felicitări! Vei primi un email cu mai multe informații!'\n        });\n      } else {\n        SweetAlertService.content(() => __jsx(WaitlistConfirmation, {\n          id: id,\n          userData: formData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }\n        }), 'Listă de așteptare', {\n          onSuccess() {\n            SweetAlertService.closePopup();\n          }\n\n        });\n      }\n    } catch (err) {\n      shouldResetForm = false;\n      setError(err.message || 'Nu am putut să te înregistrăm. Încearcă din nou!');\n    } finally {\n      setIsLoading(false);\n    }\n\n    return shouldResetForm;\n  };\n\n  return __jsx(\"div\", {\n    className: `${styles['register-event-card']} ${className || ''} d-flex justify-content-between align-items-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, cover && __jsx(\"img\", {\n    className: styles['cover--row'],\n    src: cover,\n    alt: `${title} cover`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), __jsx(Form, {\n    onSubmit: onSubmit,\n    onInput: () => setError(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, title && __jsx(\"h2\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, title), cover && __jsx(\"img\", {\n    className: styles['cover--column'],\n    src: cover,\n    alt: `${title} cover`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    className: \"d-flex justify-content-between flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Durat\\u0103:\", ' ', __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, duration)), eventDates.length === 1 && __jsx(\"p\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Dat\\u0103:\", ' ', __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, __jsx(\"time\", {\n    dateTime: format(eventDates[0].timestamp, 'yyyy-MM-dd'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, eventDates[0].label)))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Pre\\u021B:\", ' ', __jsx(\"span\", {\n    className: \"text-blue text-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"Gratuit\")), __jsx(\"p\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Loca\\u021Bie:\", ' ', __jsx(\"span\", {\n    className: \"text-blue text-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, location)))), __jsx(\"p\", {\n    className: \"my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, description), true && __jsx(React.Fragment, null, __jsx(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"label text-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"Nume si prenume\"), userInfo && __jsx(\"input\", {\n    type: \"text\",\n    value: userInfo.name,\n    name: \"name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 30\n    }\n  }))), __jsx(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"label text-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, \"Adresa de email\"), userInfo && __jsx(\"input\", {\n    type: \"email\",\n    value: userInfo.email,\n    name: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 30\n    }\n  }))), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"label text-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, \"Num\\u0103r de telefon\"), __jsx(\"span\", {\n    className: \"text-xs text-grey d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, \"Te vom contacta cu o zi \\xEEnainte de eveniment a confirma participarea\"), __jsx(\"input\", {\n    type: \"tel\",\n    name: \"tel\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  })))), eventDates.length > 1 && __jsx(ReactSelect, {\n    isSearchable: true,\n    placeholder: \"Alege data si ora la care vrei sa participi\",\n    className: styles.select,\n    options: eventDates,\n    name: \"timestamp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }), error && __jsx(\"p\", {\n    className: \"text-red text-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, error), !isPastEvent && __jsx(\"footer\", {\n    className: \"d-flex my-5 justify-content-between flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    className: `btn btn--blue ${isLoading ? 'btn--loading' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, \"\\xCEnscrie-te\"), __jsx(ShareButton, {\n    variant: \"light\",\n    url: urlToShare,\n    config: {\n      copy: true,\n      facebook: true,\n      whatsapp: true,\n      linkedin: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  })), url && __jsx(\"div\", {\n    className: \"text-right my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, \"Afl\\u0103 mai multe\")))));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userInfo: state.user.info\n  };\n}\n\nconst connector = connect(mapStateToProps);\nexport default connector(EventCard);","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/event/RegisterEventCard/RegisterEventCard.tsx"],"names":["React","useEffect","useState","connect","Link","format","ReactSelect","EventService","Form","FormGroup","ShareButton","SweetAlertService","WaitlistConfirmation","styles","EventCard","userInfo","id","title","cover","url","duration","description","location","eventDates","className","error","setError","isLoading","setIsLoading","urlToShare","setUrlToShare","isPastEvent","every","timestamp","Date","now","window","origin","pathname","onSubmit","formData","shouldResetForm","seatsInfo","getSeatsInfo","free","register","toast","type","text","content","onSuccess","closePopup","err","message","length","label","name","email","select","copy","facebook","whatsapp","linkedin","mapStateToProps","state","user","info","connector"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport Link from 'next/link';\r\nimport { format } from 'date-fns';\r\nimport ReactSelect from 'react-select';\r\nimport { RootState } from '~/redux/root.reducer';\r\n\r\nimport EventService from '~/services/api/Event.service';\r\nimport Form, { FormGroup } from '~/components/Form';\r\nimport { ShareButton } from '~/components/SocialMediaButtons';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\nimport WaitlistConfirmation from '../WaitListConfirmation/WaitListConfirmation';\r\n\r\nimport styles from './RegisterEventCard.module.scss';\r\n\r\nexport interface EventDate {\r\n  label: string;\r\n  timestamp: number;\r\n}\r\n\r\ninterface Props {\r\n  id: string;\r\n  duration: string;\r\n  location: string;\r\n  eventDates: EventDate[];\r\n  title?: string;\r\n  description?: string;\r\n  url?: string;\r\n  cover?: string;\r\n  className?: string;\r\n}\r\n\r\nfunction EventCard({\r\n  userInfo,\r\n  id,\r\n  title,\r\n  cover,\r\n  url,\r\n  duration,\r\n  description,\r\n  location,\r\n  eventDates,\r\n  className,\r\n}: ConnectedProps<typeof connector> & Props) {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [urlToShare, setUrlToShare] = useState(url);\r\n\r\n  const isPastEvent = eventDates.every(({ timestamp }) => Date.now() > timestamp);\r\n\r\n  useEffect(() => {\r\n    // If we have the `url` prop then let's use that\r\n    // as the share url. Otherwise default to the current page.\r\n    if (url) {\r\n      setUrlToShare(`${window.location.origin}${url}`);\r\n    } else {\r\n      setUrlToShare(`${window.location.origin}${window.location.pathname}`);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = async (formData: {\r\n    name: string;\r\n    email: string;\r\n    tel: string;\r\n    timestamp: number;\r\n  }) => {\r\n    setIsLoading(true);\r\n    let shouldResetForm = true;\r\n\r\n    if (!formData.timestamp) {\r\n      formData.timestamp = formData.timestamp || eventDates[0].timestamp;\r\n    }\r\n\r\n    try {\r\n      const seatsInfo = await EventService.getSeatsInfo(id);\r\n\r\n      if (seatsInfo.free > 0) {\r\n        await EventService.register(id, formData);\r\n\r\n        SweetAlertService.toast({\r\n          type: 'success',\r\n          text: 'Felicitări! Vei primi un email cu mai multe informații!',\r\n        });\r\n      } else {\r\n        SweetAlertService.content(\r\n          () => <WaitlistConfirmation id={id} userData={formData} />,\r\n          'Listă de așteptare',\r\n          {\r\n            onSuccess() {\r\n              SweetAlertService.closePopup();\r\n            },\r\n          },\r\n        );\r\n      }\r\n    } catch (err) {\r\n      shouldResetForm = false;\r\n      setError(err.message || 'Nu am putut să te înregistrăm. Încearcă din nou!');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n    return shouldResetForm;\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles['register-event-card']} ${className || ''} d-flex justify-content-between align-items-center`}>\r\n      {cover && <img className={styles['cover--row']} src={cover} alt={`${title} cover`} />}\r\n      <Form onSubmit={onSubmit} onInput={() => setError(null)}>\r\n        {title && (\r\n          <h2 className={styles.title}>\r\n            {title}\r\n          </h2>\r\n        )}\r\n        {cover && <img className={styles['cover--column']} src={cover} alt={`${title} cover`} />}\r\n        <div className=\"d-flex justify-content-between flex-wrap\">\r\n          <div>\r\n            <p className=\"m-0\">\r\n              Durată:\r\n              {' '}\r\n              <strong>\r\n                {duration}\r\n              </strong>\r\n            </p>\r\n            {eventDates.length === 1 && (\r\n              <p className=\"m-0\">\r\n                Dată:\r\n                {' '}\r\n                <strong>\r\n                  <time dateTime={format(eventDates[0].timestamp, 'yyyy-MM-dd')}>{eventDates[0].label}</time>\r\n                </strong>\r\n              </p>\r\n            )}\r\n\r\n          </div>\r\n          <div>\r\n            <p className=\"m-0\">\r\n              Preț:\r\n              {' '}\r\n              <span className=\"text-blue text-bold\">\r\n                Gratuit\r\n              </span>\r\n            </p>\r\n            <p className=\"m-0\">\r\n              Locație:\r\n              {' '}\r\n              <span className=\"text-blue text-bold\">\r\n                {location}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <p className=\"my-5\">{description}</p>\r\n        {true && (\r\n          <>\r\n            <FormGroup className=\"mb-4\">\r\n              <label>\r\n                <span className=\"label text-bold mb-2\">\r\n                  Nume si prenume\r\n                </span>\r\n                {userInfo && <input type=\"text\" value={userInfo.name} name=\"name\" required />}\r\n\r\n              </label>\r\n            </FormGroup>\r\n\r\n            <FormGroup className=\"mb-4\">\r\n              <label>\r\n                <span className=\"label text-bold mb-2\">\r\n                  Adresa de email\r\n                </span>\r\n                {userInfo && <input type=\"email\" value={userInfo.email} name=\"email\" required />}\r\n\r\n              </label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <label>\r\n                <span className=\"label text-bold mb-2\">\r\n                  Număr de telefon\r\n                </span>\r\n                <span className=\"text-xs text-grey d-flex align-items-center\">\r\n                  Te vom contacta cu o zi înainte de eveniment a confirma participarea\r\n                </span>\r\n                <input type=\"tel\" name=\"tel\" required />\r\n              </label>\r\n            </FormGroup>\r\n          </>\r\n        )}\r\n\r\n        {eventDates.length > 1 && (\r\n          <ReactSelect\r\n            isSearchable\r\n            placeholder=\"Alege data si ora la care vrei sa participi\"\r\n            className={styles.select}\r\n            options={eventDates}\r\n            name=\"timestamp\"\r\n          />\r\n        )}\r\n\r\n        {error && (\r\n          <p className=\"text-red text-bold\">\r\n            {error}\r\n          </p>\r\n        )}\r\n        {!isPastEvent && (\r\n          <footer className=\"d-flex my-5 justify-content-between flex-wrap\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className={`btn btn--blue ${isLoading ? 'btn--loading' : ''}`}\r\n            >\r\n              Înscrie-te\r\n            </button>\r\n            <ShareButton\r\n              variant=\"light\"\r\n              url={urlToShare}\r\n              config={{\r\n                copy: true,\r\n                facebook: true,\r\n                whatsapp: true,\r\n                linkedin: true,\r\n              }}\r\n            />\r\n          </footer>\r\n\r\n        )}\r\n        {url && (\r\n          <div className=\"text-right my-5\">\r\n            <Link href={url}>\r\n              <a>\r\n                Află mai multe\r\n              </a>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    userInfo: state.user.info,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\nexport default connector(EventCard);\r\n"]},"metadata":{},"sourceType":"module"}