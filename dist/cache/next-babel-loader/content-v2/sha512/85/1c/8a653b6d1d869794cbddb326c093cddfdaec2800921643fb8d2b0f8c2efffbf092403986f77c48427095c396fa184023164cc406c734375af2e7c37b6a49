{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/didi/Desktop/frontend.ro/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/didi/Desktop/frontend.ro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\NewExercise\\\\NewExercise.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport Form from '../Form';\nimport Login from '../login';\nimport MarkdownTextarea from '../MarkdownTextarea';\nimport PrivacyControls from './PrivacyControls/PrivacyControls';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport svgCover from './dev-focus.svg';\nimport styles from './NewExercise.module.scss';\nimport ExerciseService from '~/services/Exercise.service';\nimport ChapterControls from './ChapterControls/ChapterControls';\nimport LessonSelect from './LessonSelect/LessonSelect';\nimport { noop, uuid } from '~/services/Utils';\nimport { MAX_MEDIA_BYTES, MAX_MEDIA_MB } from '~/../shared/SharedConstants';\nimport BasicEditorLazy from '../Editor/BasicEditor/BasicEditor.lazy';\nimport { extractExtension } from '~/services/utils/FileUtils';\n\nfunction NewExercise(_ref) {\n  _s();\n\n  var user = _ref.user;\n  var router = useRouter();\n  var markdownWrapper = useRef(null);\n  var exampleRef = useRef(null);\n  var solutionRef = useRef(null);\n\n  var _useState = useState(''),\n      body = _useState[0],\n      setBody = _useState[1];\n\n  var _useState2 = useState(false),\n      bodyError = _useState2[0],\n      setBodyError = _useState2[1];\n\n  var _useState3 = useState(false),\n      solutionError = _useState3[0],\n      setSolutionError = _useState3[1];\n\n  var _useState4 = useState(false),\n      showExampleEditor = _useState4[0],\n      setShowExampleEditor = _useState4[1];\n\n  var _useState5 = useState(false),\n      showSolutionEditor = _useState5[0],\n      setShowSolutionEditor = _useState5[1];\n\n  var _useState6 = useState(false),\n      isPrivate = _useState6[0],\n      setIsPrivate = _useState6[1];\n\n  var _useState7 = useState(false),\n      isCreating = _useState7[0],\n      setIsCreating = _useState7[1];\n\n  var filesToUpload = useRef({});\n\n  var onMarkdownInput = function onMarkdownInput(text) {\n    setBody(text);\n    setBodyError(false);\n  };\n\n  var uploadFiles = function uploadFiles(files, cursorPosition) {\n    var newMarkdown = body;\n    var filesIgnored = 0; // due to size restrictions\n\n    files.forEach(function (file) {\n      if (file.size > MAX_MEDIA_BYTES) {\n        filesIgnored += 1;\n        return;\n      }\n\n      console.log(file.size);\n      var fileName = \"\".concat(uuid(), \".\").concat(extractExtension(file.name));\n      var objectURL = URL.createObjectURL(file);\n      var imgMarkdown = \"![\".concat(file.name, \"](\").concat(objectURL, \")\");\n      filesToUpload.current[fileName] = {\n        file: file,\n        markdownToReplace: imgMarkdown\n      };\n      newMarkdown = \"\".concat(newMarkdown.substring(0, cursorPosition)).concat(imgMarkdown).concat(newMarkdown.substring(cursorPosition)); // eslint-disable-next-line no-param-reassign\n\n      cursorPosition += imgMarkdown.length;\n    });\n\n    if (filesIgnored) {\n      SweetAlertService.toast({\n        type: 'info',\n        text: filesIgnored === 1 ? \"Fi\\u0219ierul a fost ignorat c\\u0103ci nu se \\xEEncadreaz\\u0103 \\xEEn limita de \".concat(MAX_MEDIA_MB, \"MB\") : \"\".concat(filesIgnored, \" fi\\u0219iere au fost ignorate c\\u0103ci nu se \\xEEncadreaz\\u0103 \\xEEn limita de \").concat(MAX_MEDIA_MB, \"MB\")\n      });\n    }\n\n    setBody(newMarkdown);\n  };\n\n  var onSubmit = function onSubmit(formData) {\n    if (user.info) {\n      createExercise(formData);\n    } else {\n      SweetAlertService.content(Login, 'Autentifică-te', {\n        onSuccess: function onSuccess() {\n          SweetAlertService.closePopup();\n          createExercise(formData);\n        }\n      });\n    }\n  };\n\n  var createExercise = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {\n      var uploadInfo;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (validateRequiredData()) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              setIsCreating(true);\n              _context.prev = 3;\n              _context.next = 6;\n              return uploadMedia();\n\n            case 6:\n              uploadInfo = _context.sent;\n              replaceMarkdownWithUploads(uploadInfo);\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](3);\n              SweetAlertService.toast({\n                type: 'error',\n                text: _context.t0.message || 'Fișierul nu a putut fi încărcat. Încearcă din nou!'\n              });\n              return _context.abrupt(\"return\");\n\n            case 14:\n              _context.prev = 14;\n              _context.next = 17;\n              return ExerciseService.createExercise({\n                body: body,\n                type: formData.type,\n                \"private\": formData[\"private\"],\n                example: exampleRef.current ? exampleRef.current.getFolderStructure() : null,\n                solution: solutionRef.current ? solutionRef.current.getFolderStructure() : null\n              });\n\n            case 17:\n              SweetAlertService.toast({\n                type: 'success',\n                text: 'Exercițiul a fost creat cu succes!'\n              }); // router.push('/');\n\n              _context.next = 23;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t1 = _context[\"catch\"](14);\n              SweetAlertService.toast({\n                text: (_context.t1 === null || _context.t1 === void 0 ? void 0 : _context.t1.message) || 'Oops! Nu am putut crea exercițiul',\n                type: 'error'\n              });\n\n            case 23:\n              _context.prev = 23;\n              setIsCreating(false);\n              return _context.finish(23);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 10], [14, 20, 23, 26]]);\n    }));\n\n    return function createExercise(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var validateRequiredData = function validateRequiredData() {\n    var isValid = true;\n\n    if (!body) {\n      setBodyError(true);\n      markdownWrapper.current.scrollIntoView();\n      isValid = false;\n    }\n\n    if (!solutionRef.current) {\n      setSolutionError(true);\n      isValid = false;\n    } else {\n      var folderStructure = solutionRef.current.getFolderStructure();\n\n      if (!folderStructure) {\n        setSolutionError(true);\n        isValid = false;\n      }\n    }\n\n    return isValid;\n  };\n\n  var uploadMedia = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var results, fulfilledResults, filesIgnored;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // 1. Maybe some files were removed in the meantime -> double check they're stll here\n              Object.keys(filesToUpload.current).forEach(function (id) {\n                var markdownToReplace = filesToUpload.current[id].markdownToReplace;\n\n                if (body.indexOf(markdownToReplace) === -1) {\n                  delete filesToUpload.current[id];\n                }\n              }); // 2. Upload to AWS\n\n              _context2.next = 3;\n              return Promise.allSettled(Object.keys(filesToUpload.current).map(function (id) {\n                return ExerciseService.uploadMedia(id, filesToUpload.current[id].file);\n              }));\n\n            case 3:\n              results = _context2.sent;\n              fulfilledResults = results.filter(function (res) {\n                return res.status === 'fulfilled';\n              }).map(function (res) {\n                return res.value;\n              });\n\n              if (results.length !== fulfilledResults.length) {\n                filesIgnored = results.length - fulfilledResults.length;\n                SweetAlertService.toast({\n                  type: 'info',\n                  text: filesIgnored === 1 ? '1 fișisier nu a putut fi uploadat. Încearcă din nou' : \"\".concat(filesIgnored, \" fi\\u0219iere nu au putut fi uploadate. \\xCEncearc\\u0103 din nou\")\n                });\n              }\n\n              return _context2.abrupt(\"return\", fulfilledResults);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function uploadMedia() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var replaceMarkdownWithUploads = function replaceMarkdownWithUploads(uploadedInfo) {\n    var newBody = body;\n    Object.keys(filesToUpload.current).forEach(function (id) {\n      var uploadInfo = uploadedInfo.find(function (info) {\n        return info.name === id;\n      });\n\n      if (!uploadInfo) {\n        newBody = newBody.replaceAll(filesToUpload.current[id].markdownToReplace, '');\n      } else {\n        newBody = newBody.replaceAll(filesToUpload.current[id].markdownToReplace, \"![\".concat(uploadInfo.name, \"](\").concat(uploadInfo.url, \")\"));\n      }\n    });\n    setBody(newBody);\n  };\n\n  return __jsx(\"div\", {\n    className: styles['new-exercise'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: \"\".concat(styles.cta, \" relative\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, \" Creeaz\\u0103 un nou exerci\\u021Biu\"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, \"\\xCEl po\\u021Bi folosi \\xEEn propriile traininguri sau,\", ' ', __jsx(\"strong\", {\n    className: \"text-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, \"dac\\u0103 vrei s\\u0103 contribui la acest proiect\"), \", sugereaz\\u0103 acest exerci\\u021Biu pentru una dintre lec\\u021Biile noastre.\")), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: svgCover\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    withStyles: false,\n    onSubmit: onSubmit,\n    className: \"relative\",\n    id: \"createForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    ref: markdownWrapper,\n    className: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, __jsx(MarkdownTextarea, {\n    title: \"Descrie exerci\\u021Biul\",\n    markdown: body,\n    onUpload: uploadFiles,\n    onInput: onMarkdownInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }), bodyError && __jsx(\"p\", {\n    className: \"\".concat(styles['error-message'], \" text-right text-bold absolute\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 27\n    }\n  }, \" Nu po\\u021Bi crea un exerci\\u021Biu f\\u0103r\\u0103 descriere \\uD83D\\uDC46\"))), __jsx(\"div\", {\n    className: styles['example-wrapper'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, showExampleEditor ? __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  }, \" Cod de \\xEEnceput \"), __jsx(BasicEditorLazy, {\n    ref: exampleRef,\n    folderStructure: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  })) : __jsx(\"button\", {\n    className: \"btn btn--light\",\n    type: \"button\",\n    onClick: function onClick() {\n      return setShowExampleEditor(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, \"Adaug\\u0103 cod de \\xEEnceput\")), __jsx(\"div\", {\n    className: \"\".concat(styles['example-wrapper'], \" relative\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, showSolutionEditor ? __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 19\n    }\n  }, \" Solu\\u021Bie\"), __jsx(BasicEditorLazy, {\n    ref: solutionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }\n  }), solutionError && __jsx(\"p\", {\n    className: \"\".concat(styles['error-message'], \" absolute text-right text-bold\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, \"Nu po\\u021Bi crea un exerci\\u021Biu f\\u0103r\\u0103 solu\\u021Bie \\uD83D\\uDC46\")) : __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn \".concat(solutionError ? 'btn--danger' : 'btn--light'),\n    onClick: function onClick() {\n      return setShowSolutionEditor(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, \"Adaug\\u0103 solu\\u021Bia exerci\\u021Biului\")), __jsx(ChapterControls, {\n    form: \"createForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }), __jsx(PrivacyControls, {\n    form: \"createForm\",\n    isPrivate: isPrivate,\n    onPrivacyChange: setIsPrivate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }\n  }), __jsx(\"footer\", {\n    className: \"d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, __jsx(LessonSelect, {\n    onChange: noop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    form: \"createForm\",\n    type: \"submit\",\n    disabled: isCreating,\n    className: \"btn btn--blue \".concat(isCreating ? 'btn--loading' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }, \"Creeaz\\u0103\")))));\n}\n\n_s(NewExercise, \"xkwfzyUvOJazJ8nf1f2jhy82FPA=\", false, function () {\n  return [useRouter];\n});\n\n_c = NewExercise;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nvar connector = connect(mapStateToProps);\nexport default _c2 = connector(NewExercise);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewExercise\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/NewExercise/NewExercise.tsx"],"names":["React","useRef","useState","connect","useRouter","Form","Login","MarkdownTextarea","PrivacyControls","SweetAlertService","svgCover","styles","ExerciseService","ChapterControls","LessonSelect","noop","uuid","MAX_MEDIA_BYTES","MAX_MEDIA_MB","BasicEditorLazy","extractExtension","NewExercise","user","router","markdownWrapper","exampleRef","solutionRef","body","setBody","bodyError","setBodyError","solutionError","setSolutionError","showExampleEditor","setShowExampleEditor","showSolutionEditor","setShowSolutionEditor","isPrivate","setIsPrivate","isCreating","setIsCreating","filesToUpload","onMarkdownInput","text","uploadFiles","files","cursorPosition","newMarkdown","filesIgnored","forEach","file","size","console","log","fileName","name","objectURL","URL","createObjectURL","imgMarkdown","current","markdownToReplace","substring","length","toast","type","onSubmit","formData","info","createExercise","content","onSuccess","closePopup","validateRequiredData","uploadMedia","uploadInfo","replaceMarkdownWithUploads","message","example","getFolderStructure","solution","isValid","scrollIntoView","folderStructure","Object","keys","id","indexOf","Promise","allSettled","map","results","fulfilledResults","filter","res","status","value","uploadedInfo","newBody","find","replaceAll","url","cta","__html","mapStateToProps","state","connector"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport Form from '../Form';\r\nimport Login from '../login';\r\nimport MarkdownTextarea from '../MarkdownTextarea';\r\nimport { RootState } from '~/redux/root.reducer';\r\nimport PrivacyControls from './PrivacyControls/PrivacyControls';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\n\r\nimport svgCover from './dev-focus.svg';\r\nimport styles from './NewExercise.module.scss';\r\nimport ExerciseService from '~/services/Exercise.service';\r\nimport ChapterControls from './ChapterControls/ChapterControls';\r\nimport LessonSelect from './LessonSelect/LessonSelect';\r\nimport { noop, uuid } from '~/services/Utils';\r\nimport { MAX_MEDIA_BYTES, MAX_MEDIA_MB } from '~/../shared/SharedConstants';\r\nimport BasicEditorLazy from '../Editor/BasicEditor/BasicEditor.lazy';\r\nimport FolderStructure from '~/services/utils/FolderStructure';\r\nimport { ChapterType } from '~/redux/exercise-submissions/types';\r\nimport { extractExtension } from '~/services/utils/FileUtils';\r\n\r\ninterface FileDictionary {\r\n  [id: string]: {\r\n    file: File;\r\n    markdownToReplace: string;\r\n  }\r\n}\r\n\r\ninterface MediaUploadResp {\r\n  name: string;\r\n  url: string;\r\n}\r\n\r\nfunction NewExercise({ user }: ConnectedProps<typeof connector>) {\r\n  const router = useRouter();\r\n\r\n  const markdownWrapper = useRef(null);\r\n  const exampleRef = useRef(null);\r\n  const solutionRef = useRef(null);\r\n\r\n  const [body, setBody] = useState('');\r\n  const [bodyError, setBodyError] = useState(false);\r\n  const [solutionError, setSolutionError] = useState(false);\r\n  const [showExampleEditor, setShowExampleEditor] = useState(false);\r\n  const [showSolutionEditor, setShowSolutionEditor] = useState(false);\r\n  const [isPrivate, setIsPrivate] = useState(false);\r\n  const [isCreating, setIsCreating] = useState(false);\r\n\r\n  const filesToUpload = useRef<FileDictionary>({});\r\n\r\n  const onMarkdownInput = (text) => {\r\n    setBody(text);\r\n    setBodyError(false);\r\n  };\r\n\r\n  const uploadFiles = (files: File[], cursorPosition: number) => {\r\n    let newMarkdown = body;\r\n    let filesIgnored = 0; // due to size restrictions\r\n\r\n    files.forEach((file) => {\r\n      if (file.size > MAX_MEDIA_BYTES) {\r\n        filesIgnored += 1;\r\n        return;\r\n      }\r\n\r\n      console.log(file.size);\r\n      const fileName = `${uuid()}.${extractExtension(file.name)}`;\r\n      const objectURL = URL.createObjectURL(file);\r\n      const imgMarkdown = `![${file.name}](${objectURL})`;\r\n\r\n      filesToUpload.current[fileName] = {\r\n        file,\r\n        markdownToReplace: imgMarkdown,\r\n      };\r\n\r\n      newMarkdown = `${newMarkdown.substring(0, cursorPosition)}${imgMarkdown}${newMarkdown.substring(cursorPosition)}`;\r\n      // eslint-disable-next-line no-param-reassign\r\n      cursorPosition += imgMarkdown.length;\r\n    });\r\n\r\n    if (filesIgnored) {\r\n      SweetAlertService.toast({\r\n        type: 'info',\r\n        text: filesIgnored === 1\r\n          ? `Fișierul a fost ignorat căci nu se încadrează în limita de ${MAX_MEDIA_MB}MB`\r\n          : `${filesIgnored} fișiere au fost ignorate căci nu se încadrează în limita de ${MAX_MEDIA_MB}MB`,\r\n      });\r\n    }\r\n\r\n    setBody(newMarkdown);\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    if (user.info) {\r\n      createExercise(formData);\r\n    } else {\r\n      SweetAlertService.content(\r\n        Login,\r\n        'Autentifică-te',\r\n        {\r\n          onSuccess() {\r\n            SweetAlertService.closePopup();\r\n            createExercise(formData);\r\n          },\r\n        },\r\n      );\r\n    }\r\n  };\r\n\r\n  const createExercise = async (formData: { type: ChapterType, private: boolean }) => {\r\n    if (!validateRequiredData()) {\r\n      return;\r\n    }\r\n\r\n    setIsCreating(true);\r\n\r\n    try {\r\n      const uploadInfo = await uploadMedia();\r\n      replaceMarkdownWithUploads(uploadInfo);\r\n    } catch (err) {\r\n      SweetAlertService.toast({\r\n        type: 'error',\r\n        text: err.message || 'Fișierul nu a putut fi încărcat. Încearcă din nou!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await ExerciseService.createExercise({\r\n        body,\r\n        type: formData.type,\r\n        private: formData.private,\r\n        example: exampleRef.current ? exampleRef.current.getFolderStructure() : null,\r\n        solution: solutionRef.current ? solutionRef.current.getFolderStructure() : null,\r\n      });\r\n\r\n      SweetAlertService.toast({\r\n        type: 'success',\r\n        text: 'Exercițiul a fost creat cu succes!',\r\n      });\r\n\r\n      // router.push('/');\r\n    } catch (err) {\r\n      SweetAlertService.toast({\r\n        text: err?.message || 'Oops! Nu am putut crea exercițiul',\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  const validateRequiredData = () => {\r\n    let isValid = true;\r\n\r\n    if (!body) {\r\n      setBodyError(true);\r\n      markdownWrapper.current.scrollIntoView();\r\n      isValid = false;\r\n    }\r\n\r\n    if (!solutionRef.current) {\r\n      setSolutionError(true);\r\n      isValid = false;\r\n    } else {\r\n      let folderStructure: FolderStructure = solutionRef.current.getFolderStructure();\r\n      if (!folderStructure) {\r\n        setSolutionError(true);\r\n        isValid = false;\r\n      }\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const uploadMedia = async (): Promise<MediaUploadResp[]> => {\r\n    // 1. Maybe some files were removed in the meantime -> double check they're stll here\r\n    Object.keys(filesToUpload.current).forEach((id) => {\r\n      const { markdownToReplace } = filesToUpload.current[id];\r\n      if (body.indexOf(markdownToReplace) === -1) {\r\n        delete filesToUpload.current[id];\r\n      }\r\n    });\r\n\r\n    // 2. Upload to AWS\r\n    const results = await Promise.allSettled(Object.keys(filesToUpload.current).map((id) => {\r\n      return ExerciseService.uploadMedia(id, filesToUpload.current[id].file);\r\n    }));\r\n\r\n    const fulfilledResults = results\r\n      .filter((res) => res.status === 'fulfilled')\r\n      .map((res: PromiseFulfilledResult<MediaUploadResp>) => res.value);\r\n\r\n    if (results.length !== fulfilledResults.length) {\r\n      const filesIgnored = results.length - fulfilledResults.length;\r\n\r\n      SweetAlertService.toast({\r\n        type: 'info',\r\n        text: filesIgnored === 1\r\n          ? '1 fișisier nu a putut fi uploadat. Încearcă din nou'\r\n          : `${filesIgnored} fișiere nu au putut fi uploadate. Încearcă din nou`,\r\n      });\r\n    }\r\n    return fulfilledResults;\r\n  };\r\n\r\n  const replaceMarkdownWithUploads = (uploadedInfo: MediaUploadResp[]) => {\r\n    let newBody = body;\r\n\r\n    Object.keys(filesToUpload.current).forEach((id) => {\r\n      const uploadInfo = uploadedInfo.find((info) => info.name === id);\r\n\r\n      if (!uploadInfo) {\r\n        newBody = newBody.replaceAll(filesToUpload.current[id].markdownToReplace, '');\r\n      } else {\r\n        newBody = newBody.replaceAll(\r\n          filesToUpload.current[id].markdownToReplace,\r\n          `![${uploadInfo.name}](${uploadInfo.url})`,\r\n        );\r\n      }\r\n    });\r\n\r\n    setBody(newBody);\r\n  };\r\n\r\n  return (\r\n    <div className={styles['new-exercise']}>\r\n      <section className={`${styles.cta} relative`}>\r\n        <div>\r\n          <h1> Creează un nou exercițiu</h1>\r\n          <h2>\r\n            Îl poți folosi în propriile traininguri sau,\r\n            {' '}\r\n            <strong className=\"text-blue\">dacă vrei să contribui la acest proiect</strong>\r\n            ,\r\n            sugerează acest exercițiu pentru una dintre lecțiile noastre.\r\n          </h2>\r\n        </div>\r\n        {/* eslint-disable-next-line react/no-danger */}\r\n        <div dangerouslySetInnerHTML={{\r\n          __html: svgCover,\r\n        }}\r\n        />\r\n      </section>\r\n      <main>\r\n        <Form withStyles={false} onSubmit={onSubmit} className=\"relative\" id=\"createForm\">\r\n          <div ref={markdownWrapper} className=\"relative\">\r\n            <MarkdownTextarea\r\n              title=\"Descrie exercițiul\"\r\n              markdown={body}\r\n              onUpload={uploadFiles}\r\n              onInput={onMarkdownInput}\r\n            />\r\n            {bodyError && <p className={`${styles['error-message']} text-right text-bold absolute`}> Nu poți crea un exercițiu fără descriere 👆</p>}\r\n          </div>\r\n        </Form>\r\n        <div className={styles['example-wrapper']}>\r\n          {\r\n            showExampleEditor\r\n              ? (\r\n                <>\r\n                  <h3> Cod de început </h3>\r\n                  <BasicEditorLazy ref={exampleRef} folderStructure />\r\n                </>\r\n              )\r\n              : (\r\n                <button\r\n                  className=\"btn btn--light\"\r\n                  type=\"button\"\r\n                  onClick={() => setShowExampleEditor(true)}\r\n                >\r\n                  Adaugă cod de început\r\n                </button>\r\n              )\r\n          }\r\n        </div>\r\n        <div className={`${styles['example-wrapper']} relative`}>\r\n          {\r\n            showSolutionEditor\r\n              ? (\r\n                <>\r\n                  <h3> Soluție</h3>\r\n                  <BasicEditorLazy ref={solutionRef} />\r\n                  {solutionError && (\r\n                    <p className={`${styles['error-message']} absolute text-right text-bold`}>\r\n                      Nu poți crea un exercițiu fără soluție 👆\r\n                    </p>\r\n                  )}\r\n                </>\r\n              )\r\n              : (\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn ${solutionError ? 'btn--danger' : 'btn--light'}`}\r\n                  onClick={() => setShowSolutionEditor(true)}\r\n                >\r\n                  Adaugă soluția exercițiului\r\n                </button>\r\n              )\r\n          }\r\n        </div>\r\n        <ChapterControls form=\"createForm\" />\r\n        <PrivacyControls form=\"createForm\" isPrivate={isPrivate} onPrivacyChange={setIsPrivate} />\r\n        <footer className=\"d-flex align-items-center justify-content-between\">\r\n          <LessonSelect onChange={noop} />\r\n          <div>\r\n            <button\r\n              form=\"createForm\"\r\n              type=\"submit\"\r\n              disabled={isCreating}\r\n              className={`btn btn--blue ${isCreating ? 'btn--loading' : ''}`}\r\n            >\r\n              Creează\r\n            </button>\r\n          </div>\r\n        </footer>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(NewExercise);\r\n"]},"metadata":{},"sourceType":"module"}