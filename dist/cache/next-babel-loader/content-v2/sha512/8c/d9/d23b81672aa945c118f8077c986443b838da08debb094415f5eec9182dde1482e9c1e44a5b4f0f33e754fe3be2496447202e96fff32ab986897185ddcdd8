{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Button\\\\Button.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nconst Button = /*#__PURE__*/React.forwardRef((_ref, forwardRef) => {\n  let {\n    type = 'button',\n    loading = false,\n    variant,\n    className = '',\n    children,\n    form = ''\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"type\", \"loading\", \"variant\", \"className\", \"children\", \"form\"]);\n\n  let updatedClassName = className;\n\n  if (loading) {\n    updatedClassName += ' btn--loading';\n  }\n\n  return __jsx(\"button\", _extends({\n    type: type === 'button' ? 'button' : 'submit',\n    className: `btn ${variant === `${variant}` ? `btn--${variant}` : 'btn--transparent'} ${updatedClassName}`,\n    form: form,\n    disabled: loading,\n    ref: forwardRef\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }), children);\n});\nexport default Button;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Button/Button.tsx"],"names":["React","Button","forwardRef","type","loading","variant","className","children","form","props","updatedClassName"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AASA,MAAMC,MAAM,gBAAGD,KAAK,CAACE,UAAN,CACqD,OAEGA,UAFH,KAEkB;AAAA,MAFjB;AACnEC,IAAAA,IAAI,GAAG,QAD4D;AAClDC,IAAAA,OAAO,GAAG,KADwC;AACjCC,IAAAA,OADiC;AACxBC,IAAAA,SAAS,GAAG,EADY;AACRC,IAAAA,QADQ;AACEC,IAAAA,IAAI,GAAG;AADT,GAEiB;AAAA,MADDC,KACC;;AACpF,MAAIC,gBAAgB,GAAGJ,SAAvB;;AACA,MAAIF,OAAJ,EAAa;AACXM,IAAAA,gBAAgB,IAAI,eAApB;AACD;;AAED,SACE;AACE,IAAA,IAAI,EAAEP,IAAI,KAAK,QAAT,GAAoB,QAApB,GAA+B,QADvC;AAEE,IAAA,SAAS,EAAG,OAAME,OAAO,KAAM,GAAEA,OAAQ,EAAvB,GAA4B,QAAOA,OAAQ,EAA3C,GAA+C,kBAAmB,IAAGK,gBAAiB,EAF1G;AAGE,IAAA,IAAI,EAAEF,IAHR;AAIE,IAAA,QAAQ,EAAEJ,OAJZ;AAKE,IAAA,GAAG,EAAEF;AALP,KAMMO,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQGF,QARH,CADF;AAYD,CArBc,CAAf;AAsBA,eAAeN,MAAf","sourcesContent":["import React, { PropsWithChildren } from 'react';\r\n\r\ninterface Props {\r\n  type?: 'button' | 'submit';\r\n  loading?: boolean;\r\n  variant: 'light' | 'blue' | 'success' | 'danger' | 'transparent' | 'yellow' | 'grey' | 'bouncy' | 'with--icon' | 'outline' ;\r\n  form?: string;\r\n}\r\nexport type Ref = HTMLButtonElement;\r\nconst Button = React.forwardRef<Ref,\r\nPropsWithChildren<Props> & React.HTMLAttributes<HTMLButtonElement>>(({\r\n  type = 'button', loading = false, variant, className = '', children, form = '', ...props\r\n}: PropsWithChildren<Props> & React.HTMLAttributes<HTMLButtonElement>, forwardRef) => {\r\n  let updatedClassName = className;\r\n  if (loading) {\r\n    updatedClassName += ' btn--loading';\r\n  }\r\n\r\n  return (\r\n    <button\r\n      type={type === 'button' ? 'button' : 'submit'}\r\n      className={`btn ${variant === `${variant}` ? `btn--${variant}` : 'btn--transparent'} ${updatedClassName}`}\r\n      form={form}\r\n      disabled={loading}\r\n      ref={forwardRef}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n});\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}