{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Settings\\\\components\\\\ChangePassword.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Button from '~/components/Button';\nimport Form, { FormGroup, PasswordReveal } from '~/components/Form';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport UserService from '~/services/User.service';\n\nfunction ChangePassword({\n  onSuccess\n}) {\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: isChanging,\n    1: setIsChanging\n  } = useState(false);\n\n  const onSubmit = async formData => {\n    const {\n      newPassword,\n      passwordConfirm\n    } = formData;\n    setIsChanging(true);\n    let shouldResetForm = true;\n\n    try {\n      const updatedUser = await UserService.updatePassword({\n        newPassword,\n        password: passwordConfirm\n      });\n      SweetAlertService.toast({\n        type: 'success',\n        text: 'Parola a fost schimbat cu succes!'\n      });\n      onSuccess(updatedUser);\n    } catch (err) {\n      shouldResetForm = false;\n      setError(err.message || 'Nu am putut să-ți schimbăm parola. Încearcă din nou!');\n    } finally {\n      setIsChanging(false);\n    }\n\n    return shouldResetForm;\n  };\n\n  return __jsx(Form, {\n    onInput: () => setError(null),\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: \"mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Schimb\\u0103 parola\"), __jsx(\"div\", {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"Noua parol\\u0103*\"), __jsx(PasswordReveal, {\n    required: true,\n    autoComplete: \"new-password\",\n    name: \"newPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }))), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"Parola curent\\u0103*\"), __jsx(PasswordReveal, {\n    required: true,\n    autoComplete: \"new-password\",\n    name: \"passwordConfirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }))), error && __jsx(\"p\", {\n    className: \"text-red text-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"\\u274C\", ' ', error)), __jsx(Button, {\n    type: \"submit\",\n    variant: \"blue\",\n    loading: isChanging,\n    className: `${isChanging ? 'btn--loading' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Schimb\\u0103 parola\")));\n}\n\nexport default ChangePassword;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Settings/components/ChangePassword.tsx"],"names":["React","useState","Button","Form","FormGroup","PasswordReveal","SweetAlertService","UserService","ChangePassword","onSuccess","error","setError","isChanging","setIsChanging","onSubmit","formData","newPassword","passwordConfirm","shouldResetForm","updatedUser","updatePassword","password","toast","type","text","err","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '~/components/Button';\r\nimport Form, { FormGroup, PasswordReveal } from '~/components/Form';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\nimport UserService from '~/services/User.service';\r\n\r\ninterface Props {\r\n  onSuccess: (updatedUser: any) => void;\r\n}\r\n\r\nfunction ChangePassword({ onSuccess }: Props) {\r\n  const [error, setError] = useState(null);\r\n  const [isChanging, setIsChanging] = useState(false);\r\n\r\n  const onSubmit = async (formData) => {\r\n    const { newPassword, passwordConfirm } = formData;\r\n\r\n    setIsChanging(true);\r\n    let shouldResetForm = true;\r\n\r\n    try {\r\n      const updatedUser = await UserService.updatePassword({\r\n        newPassword,\r\n        password: passwordConfirm,\r\n      });\r\n\r\n      SweetAlertService.toast({\r\n        type: 'success',\r\n        text: 'Parola a fost schimbat cu succes!',\r\n      });\r\n\r\n      onSuccess(updatedUser);\r\n    } catch (err) {\r\n      shouldResetForm = false;\r\n      setError(err.message || 'Nu am putut să-ți schimbăm parola. Încearcă din nou!');\r\n    } finally {\r\n      setIsChanging(false);\r\n    }\r\n\r\n    return shouldResetForm;\r\n  };\r\n\r\n  return (\r\n    <Form onInput={() => setError(null)} onSubmit={onSubmit}>\r\n      <h3 className=\"mt-0\">Schimbă parola</h3>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <div>\r\n          <FormGroup className=\"mb-4\">\r\n            <label>\r\n              <span className=\"label\">\r\n                Noua parolă*\r\n              </span>\r\n              <PasswordReveal required autoComplete=\"new-password\" name=\"newPassword\" />\r\n            </label>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <label>\r\n              <span className=\"label\">\r\n                Parola curentă*\r\n              </span>\r\n              <PasswordReveal required autoComplete=\"new-password\" name=\"passwordConfirm\" />\r\n            </label>\r\n          </FormGroup>\r\n          {error && (\r\n            <p className=\"text-red text-bold\">\r\n              ❌\r\n              {' '}\r\n              {error}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"blue\"\r\n          loading={isChanging}\r\n          className={`${isChanging ? 'btn--loading' : ''}`}\r\n        >\r\n          Schimbă parola\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n"]},"metadata":{},"sourceType":"module"}