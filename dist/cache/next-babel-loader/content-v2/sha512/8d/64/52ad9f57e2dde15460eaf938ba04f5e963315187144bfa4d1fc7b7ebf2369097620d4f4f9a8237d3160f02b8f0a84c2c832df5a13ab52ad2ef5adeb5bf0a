{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Header\\\\AccountNotificationsTooltip\\\\AccountNotificationsTooltip.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\nimport { useOutsideClick } from '~/services/Hooks';\nimport NotificationTooltip from '~/components/notification-tooltip/NotificationTooltip';\nimport styles from './AccountNotificationsTooltip.module.scss';\n\nfunction AccountNotificationsTooltip({\n  user\n}) {\n  const ref = useRef(null);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n\n  const toggleToolip = () => setIsOpen(!isOpen);\n\n  useOutsideClick(ref, () => setIsOpen(false));\n  return __jsx(\"div\", {\n    ref: ref,\n    className: styles['account-notifications-tooltip'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    onClick: toggleToolip,\n    className: \"outline-none border-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(FontAwesomeIcon, {\n    width: \"16\",\n    icon: faBell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), user.notifications.unreadCount > 0 && __jsx(\"span\", {\n    className: `${styles['unread-badge']} text-white text-center text-xs`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, user.notifications.unreadCount)), isOpen && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(NotificationTooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nconst connector = connect(mapStateToProps);\nexport default connector(AccountNotificationsTooltip);","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Header/AccountNotificationsTooltip/AccountNotificationsTooltip.tsx"],"names":["React","useState","useRef","connect","FontAwesomeIcon","faBell","useOutsideClick","NotificationTooltip","styles","AccountNotificationsTooltip","user","ref","isOpen","setIsOpen","toggleToolip","notifications","unreadCount","mapStateToProps","state","connector"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AAIA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAOC,mBAAP,MAAgC,uDAAhC;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;;AAEA,SAASC,2BAAT,CAAqC;AAAEC,EAAAA;AAAF,CAArC,EAAiF;AAC/E,QAAMC,GAAG,GAAGT,MAAM,CAAC,IAAD,CAAlB;AACA,QAAM;AAAA,OAACU,MAAD;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMa,YAAY,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAApC;;AAEAN,EAAAA,eAAe,CAACK,GAAD,EAAM,MAAME,SAAS,CAAC,KAAD,CAArB,CAAf;AAEA,SACE;AAAK,IAAA,GAAG,EAAEF,GAAV;AAAe,IAAA,SAAS,EAAEH,MAAM,CAAC,+BAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEM,YAA/B;AAA6C,IAAA,SAAS,EAAC,0BAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,IAAvB;AAA4B,IAAA,IAAI,EAAET,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGK,IAAI,CAACK,aAAL,CAAmBC,WAAnB,GAAiC,CAAjC,IACC;AAAM,IAAA,SAAS,EAAG,GAAER,MAAM,CAAC,cAAD,CAAiB,iCAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,CAACK,aAAL,CAAmBC,WADtB,CAHJ,CADF,EAUGJ,MAAM,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CADF;AAkBD;;AAED,SAASK,eAAT,CAAyBC,KAAzB,EAA2C;AACzC,SAAO;AACLR,IAAAA,IAAI,EAAEQ,KAAK,CAACR;AADP,GAAP;AAGD;;AAED,MAAMS,SAAS,GAAGhB,OAAO,CAACc,eAAD,CAAzB;AAEA,eAAeE,SAAS,CAACV,2BAAD,CAAxB","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { RootState } from '~/redux/root.reducer';\r\n\r\nimport { useOutsideClick } from '~/services/Hooks';\r\nimport NotificationTooltip from '~/components/notification-tooltip/NotificationTooltip';\r\n\r\nimport styles from './AccountNotificationsTooltip.module.scss';\r\n\r\nfunction AccountNotificationsTooltip({ user }: ConnectedProps<typeof connector>) {\r\n  const ref = useRef(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleToolip = () => setIsOpen(!isOpen);\r\n\r\n  useOutsideClick(ref, () => setIsOpen(false));\r\n\r\n  return (\r\n    <div ref={ref} className={styles['account-notifications-tooltip']}>\r\n      <button type=\"button\" onClick={toggleToolip} className=\"outline-none border-none\">\r\n        <FontAwesomeIcon width=\"16\" icon={faBell} />\r\n        {user.notifications.unreadCount > 0 && (\r\n          <span className={`${styles['unread-badge']} text-white text-center text-xs`}>\r\n            {user.notifications.unreadCount}\r\n          </span>\r\n        )}\r\n      </button>\r\n\r\n      {isOpen && (\r\n      <div>\r\n        <NotificationTooltip />\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(AccountNotificationsTooltip);\r\n"]},"metadata":{},"sourceType":"module"}