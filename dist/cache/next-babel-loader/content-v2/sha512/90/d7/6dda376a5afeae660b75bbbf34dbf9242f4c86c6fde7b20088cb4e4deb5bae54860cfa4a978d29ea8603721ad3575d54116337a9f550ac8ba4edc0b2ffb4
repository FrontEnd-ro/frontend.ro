{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Form\\\\UsernameInput\\\\UsernameInput.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { debounce } from 'lodash';\nimport React, { useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faSpinner, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport UserService from '~/services/User.service';\nimport InputWithIcon from '../InputWithIcon/InputWithIcon';\n\nfunction UsernameInput(_ref) {\n  _s();\n\n  var name = _ref.name;\n  var ref = useRef(null);\n  var checkFn = useRef(debounce(checkUsername, 250));\n\n  var _useState = useState(null),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(undefined),\n      usernameExists = _useState2[0],\n      setUsernameExists = _useState2[1];\n\n  var onUsernameChange = function onUsernameChange(e) {\n    var _e$target$value;\n\n    var value = (_e$target$value = e.target.value) !== null && _e$target$value !== void 0 ? _e$target$value : '';\n    value = value.trim();\n    setUsername(value);\n    setUsernameExists(undefined);\n\n    if (!value) {\n      return;\n    }\n\n    checkFn.current.cancel();\n    checkFn.current(value);\n  };\n\n  function checkUsername(value) {\n    return UserService.checkUsername(value).then(function () {\n      setUsernameExists(true);\n      ref.current.setCustomValidity('Acest username există deja');\n    })[\"catch\"](function () {\n      ref.current.setCustomValidity('');\n      setUsernameExists(false);\n    });\n  }\n\n  return __jsx(InputWithIcon, {\n    required: true,\n    type: \"text\",\n    name: name,\n    ref: ref,\n    onChange: onUsernameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, usernameExists && __jsx(FontAwesomeIcon, {\n    width: \"1em\",\n    className: \"text-red\",\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 26\n    }\n  }), usernameExists === false && __jsx(FontAwesomeIcon, {\n    width: \"1em\",\n    className: \"text-green\",\n    icon: faCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 36\n    }\n  }), usernameExists === undefined && username && __jsx(FontAwesomeIcon, {\n    width: \"1em\",\n    className: \"rotate\",\n    icon: faSpinner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 52\n    }\n  }));\n}\n\n_s(UsernameInput, \"VssQ3qDX/MI4LsY9oLc/mkKBvW4=\");\n\n_c = UsernameInput;\nexport default UsernameInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsernameInput\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Form/UsernameInput/UsernameInput.tsx"],"names":["debounce","React","useRef","useState","FontAwesomeIcon","faCheck","faSpinner","faTimes","UserService","InputWithIcon","UsernameInput","name","ref","checkFn","checkUsername","username","setUsername","undefined","usernameExists","setUsernameExists","onUsernameChange","e","value","target","trim","current","cancel","then","setCustomValidity"],"mappings":";;;;AAAA,SAASA,QAAT,QAAwC,QAAxC;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,OAA7B,QAA4C,mCAA5C;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,SAASC,aAAT,OAAsC;AAAA;;AAAA,MAAbC,IAAa,QAAbA,IAAa;AACpC,MAAMC,GAAG,GAAGV,MAAM,CAAmB,IAAnB,CAAlB;AACA,MAAMW,OAAO,GAAGX,MAAM,CAAyCF,QAAQ,CAACc,aAAD,EAAgB,GAAhB,CAAjD,CAAtB;;AAFoC,kBAIJX,QAAQ,CAAC,IAAD,CAJJ;AAAA,MAI7BY,QAJ6B;AAAA,MAInBC,WAJmB;;AAAA,mBAKQb,QAAQ,CAACc,SAAD,CALhB;AAAA,MAK7BC,cAL6B;AAAA,MAKbC,iBALa;;AAOpC,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAO;AAAA;;AAC9B,QAAIC,KAAa,sBAAGD,CAAC,CAACE,MAAF,CAASD,KAAZ,6DAAqB,EAAtC;AACAA,IAAAA,KAAK,GAAGA,KAAK,CAACE,IAAN,EAAR;AAEAR,IAAAA,WAAW,CAACM,KAAD,CAAX;AACAH,IAAAA,iBAAiB,CAACF,SAAD,CAAjB;;AAEA,QAAI,CAACK,KAAL,EAAY;AACV;AACD;;AAEDT,IAAAA,OAAO,CAACY,OAAR,CAAgBC,MAAhB;AACAb,IAAAA,OAAO,CAACY,OAAR,CAAgBH,KAAhB;AACD,GAbD;;AAeA,WAASR,aAAT,CAAuBQ,KAAvB,EAAsC;AACpC,WAAOd,WAAW,CAACM,aAAZ,CAA0BQ,KAA1B,EACJK,IADI,CACC,YAAM;AACVR,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAP,MAAAA,GAAG,CAACa,OAAJ,CAAYG,iBAAZ,CAA8B,4BAA9B;AACD,KAJI,WAKE,YAAM;AACXhB,MAAAA,GAAG,CAACa,OAAJ,CAAYG,iBAAZ,CAA8B,EAA9B;AACAT,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KARI,CAAP;AASD;;AAED,SACE,MAAC,aAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAER,IAHR;AAIE,IAAA,GAAG,EAAEC,GAJP;AAKE,IAAA,QAAQ,EAAEQ,gBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGF,cAAc,IAAI,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,KAAvB;AAA6B,IAAA,SAAS,EAAC,UAAvC;AAAkD,IAAA,IAAI,EAAEX,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPrB,EAQGW,cAAc,KAAK,KAAnB,IAA4B,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,KAAvB;AAA6B,IAAA,SAAS,EAAC,YAAvC;AAAoD,IAAA,IAAI,EAAEb,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAR/B,EASGa,cAAc,KAAKD,SAAnB,IAAgCF,QAAhC,IAA4C,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,KAAvB;AAA6B,IAAA,SAAS,EAAC,QAAvC;AAAgD,IAAA,IAAI,EAAET,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAT/C,CADF;AAaD;;GA/CQI,a;;KAAAA,a;AAiDT,eAAeA,aAAf","sourcesContent":["import { debounce, DebouncedFunc } from 'lodash';\r\nimport React, { useRef, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faSpinner, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport UserService from '~/services/User.service';\r\nimport InputWithIcon from '../InputWithIcon/InputWithIcon';\r\n\r\nfunction UsernameInput({ name }: any) {\r\n  const ref = useRef<HTMLInputElement>(null);\r\n  const checkFn = useRef<DebouncedFunc<(value: string) => void>>(debounce(checkUsername, 250));\r\n\r\n  const [username, setUsername] = useState(null);\r\n  const [usernameExists, setUsernameExists] = useState(undefined);\r\n\r\n  const onUsernameChange = (e) => {\r\n    let value: string = e.target.value ?? '';\r\n    value = value.trim();\r\n\r\n    setUsername(value);\r\n    setUsernameExists(undefined);\r\n\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    checkFn.current.cancel();\r\n    checkFn.current(value);\r\n  };\r\n\r\n  function checkUsername(value: string) {\r\n    return UserService.checkUsername(value)\r\n      .then(() => {\r\n        setUsernameExists(true);\r\n        ref.current.setCustomValidity('Acest username există deja');\r\n      })\r\n      .catch(() => {\r\n        ref.current.setCustomValidity('');\r\n        setUsernameExists(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <InputWithIcon\r\n      required\r\n      type=\"text\"\r\n      name={name}\r\n      ref={ref}\r\n      onChange={onUsernameChange}\r\n    >\r\n      {usernameExists && <FontAwesomeIcon width=\"1em\" className=\"text-red\" icon={faTimes} />}\r\n      {usernameExists === false && <FontAwesomeIcon width=\"1em\" className=\"text-green\" icon={faCheck} />}\r\n      {usernameExists === undefined && username && <FontAwesomeIcon width=\"1em\" className=\"rotate\" icon={faSpinner} />}\r\n    </InputWithIcon>\r\n  );\r\n}\r\n\r\nexport default UsernameInput;\r\n"]},"metadata":{},"sourceType":"module"}