{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\create-view-edit-exercise\\\\ViewOrEditExercise.tsx\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport FolderStructure from '~/services/utils/FolderStructure';\nimport { uploadFiles, uploadMedia } from '.';\nimport BasicEditorLazy from '../Editor/BasicEditor/BasicEditor.lazy';\nimport Form from '../Form';\nimport MarkdownTextarea from '../MarkdownTextarea';\nimport ChapterControls from './ChapterControls/ChapterControls';\nimport LessonSelect from './LessonSelect/LessonSelect';\nimport styles from './NewExercise.module.scss';\nimport PrivacyControls from './PrivacyControls/PrivacyControls';\nimport viewCover from './the-search.svg';\nimport editCover from './coding.svg';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport ExerciseService from '~/services/Exercise.service';\n\nfunction ViewOrEditExercise({\n  exercise,\n  userInfo\n}) {\n  const isOwnExercise = userInfo && userInfo.username === exercise.user.username;\n  const nameOrUsername = exercise.user.name || exercise.user.username;\n  const {\n    0: body,\n    1: setBody\n  } = useState(exercise.body);\n  const {\n    0: suggestion,\n    1: setSuggestion\n  } = useState(exercise.suggestion);\n  const {\n    0: bodyError,\n    1: setBodyError\n  } = useState(null);\n  const {\n    0: solutionError,\n    1: setSolutionError\n  } = useState(null);\n  const filesToUpload = useRef({});\n  const {\n    0: isPrivate,\n    1: setIsPrivate\n  } = useState(exercise.private);\n  const {\n    0: isEditing,\n    1: setIsEditing\n  } = useState(false);\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const {\n    0: showExampleEditor,\n    1: setShowExampleEditor\n  } = useState(false);\n  const {\n    0: showSolutionEditor,\n    1: setShowSolutionEditor\n  } = useState(false);\n  const markdownWrapper = useRef(null);\n  const [exampleRef, solutionRef] = [useRef(null), useRef(null)];\n  const router = useRouter();\n\n  const onMarkdownInput = text => {\n    setBody(text);\n    setBodyError(false);\n  };\n\n  const updateMarkdownWithUploadedFiles = (newMarkdown, newFiles) => {\n    setBody(newMarkdown);\n    Object.keys(newFiles).forEach(fileId => {\n      filesToUpload.current[fileId] = newFiles[fileId];\n    });\n  };\n\n  const updateExercise = async (formData) => {\n    if (!validateRequiredData()) {\n      return false;\n    }\n\n    let newBody = body;\n    setIsEditing(true);\n\n    try {\n      const uploadInfo = await uploadMedia(body, filesToUpload.current);\n      newBody = replaceMarkdownWithUploads(uploadInfo);\n    } catch (err) {\n      SweetAlertService.toast({\n        type: 'error',\n        text: err.message || 'Fișierul nu a putut fi încărcat. Încearcă din nou!'\n      });\n      return false;\n    }\n\n    try {\n      await ExerciseService.updateExercise(exercise._id, {\n        suggestion,\n        body: newBody,\n        type: formData.type,\n        private: formData.private === 'true',\n        example: exampleRef.current ? exampleRef.current.getFolderStructure() : null,\n        solution: solutionRef.current ? solutionRef.current.getFolderStructure() : null\n      });\n      SweetAlertService.toast({\n        type: 'success',\n        text: 'Exercițiul a fost modificat cu succes!'\n      });\n      router.push(`/${userInfo.username}`);\n    } catch (err) {\n      SweetAlertService.toast({\n        text: (err === null || err === void 0 ? void 0 : err.message) || 'Oops! Nu am putut crea exercițiul',\n        type: 'error'\n      });\n    } finally {\n      setIsEditing(false);\n    }\n\n    return false;\n  };\n\n  const deleteExercise = async () => {\n    const result = await SweetAlertService.confirm({\n      title: 'Șterge exercițiul',\n      text: 'Ești sigur? Această decizie e permanentă.',\n      confirmButtonText: 'Da, șterge exercițiul'\n    });\n\n    if (!result.isConfirmed) {\n      return;\n    }\n\n    try {\n      setIsDeleting(true);\n      await ExerciseService.delete(exercise._id);\n      SweetAlertService.toast({\n        type: 'success',\n        text: 'Exercițiu șters cu success'\n      });\n      router.replace(`/${userInfo.username}`);\n    } catch (err) {\n      console.error('[deleteExercise]', err);\n      SweetAlertService.toast({\n        type: 'error',\n        text: err.message || 'Oops. Se pare că nu am putut șterge exercițiul. Încearcă din nou'\n      });\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n\n  const validateRequiredData = () => {\n    let isValid = true;\n\n    if (!body) {\n      setBodyError(true);\n      markdownWrapper.current.scrollIntoView();\n      isValid = false;\n    }\n\n    if (!solutionRef.current) {\n      setSolutionError(true);\n      isValid = false;\n    } else {\n      let folderStructure = solutionRef.current.getFolderStructure();\n\n      if (!folderStructure) {\n        setSolutionError(true);\n        isValid = false;\n      }\n    }\n\n    return isValid;\n  };\n\n  const replaceMarkdownWithUploads = uploadedInfo => {\n    let newBody = body;\n    Object.keys(filesToUpload.current).forEach(id => {\n      const uploadInfo = uploadedInfo.find(info => info.name === id);\n\n      if (!uploadInfo) {\n        newBody = newBody.replaceAll(filesToUpload.current[id].markdownToReplace, '');\n      } else {\n        newBody = newBody.replaceAll(filesToUpload.current[id].markdownToReplace, `![${uploadInfo.name}](${uploadInfo.url})`);\n      }\n    });\n    setBody(newBody);\n    return newBody;\n  };\n\n  const exerciseBody = exercise.example ? new FolderStructure(JSON.parse(exercise.example)) : null;\n  console.log(new FolderStructure(JSON.parse(exercise.example)));\n  const exerciseSolution = exercise.solution ? new FolderStructure(JSON.parse(exercise.solution)) : null;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: `${styles.cta} relative`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, isOwnExercise ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, \" Modific\\u0103 exerci\\u021Biul \"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, \"Dac\\u0103 acest exerci\\u021Biu este folosit \\xEEntr-una dintre lec\\u021Bii, modific\\u0103rile tale vor avea efect abia dup\\u0103 aprobarea unui admin.\")) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, \"Exerci\\u021Biu\", ' ', __jsx(Link, {\n    href: \"/lec\\u021Bii\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    className: \"text-blue uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, exercise.type))), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, ' ', __jsx(Link, {\n    href: `/${exercise.user.username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    className: \"text-bold text-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, nameOrUsername)), ' ', \"a scris un exerci\\u021Biu despre\", ' ', __jsx(\"strong\", {\n    className: \"uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, exercise.type), \". \\xCEl po\\u021Bi folosi \\xEEn trainingurile tale at\\xE2ta timp c\\xE2t oferi atribuire autorului.\")), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: isOwnExercise ? editCover : viewCover\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    className: styles['new-exercise'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    withStyles: false,\n    onSubmit: updateExercise,\n    className: \"relative\",\n    id: \"createForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    ref: markdownWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, __jsx(MarkdownTextarea, {\n    title: \"Descrie exerci\\u021Biul\",\n    disabled: !isOwnExercise,\n    markdown: body,\n    initialTab: \"PREVIEW\",\n    onInput: onMarkdownInput,\n    onUpload: (files, cursorPosition) => uploadFiles(files, cursorPosition, body, updateMarkdownWithUploadedFiles),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }), bodyError && __jsx(\"p\", {\n    className: `${styles['error-message']} text-right text-bold absolute`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, \"Fiecare exerci\\u021Biu trebuie s\\u0103 aib\\u0103 o descriere \\uD83D\\uDC46\"))), __jsx(\"section\", {\n    className: styles['example-wrapper'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, exerciseBody && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, \" Cod de \\xEEnceput\"), __jsx(BasicEditorLazy, {\n    ref: exampleRef,\n    readOnly: !isOwnExercise,\n    folderStructure: exerciseBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  })), !exerciseBody && isOwnExercise && !showExampleEditor && __jsx(\"button\", {\n    className: \"btn btn--light\",\n    type: \"button\",\n    onClick: () => setShowExampleEditor(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, \"Adaug\\u0103 cod de \\xEEnceput\"), !exerciseBody && isOwnExercise && showExampleEditor && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, \" Cod de \\xEEnceput\"), __jsx(BasicEditorLazy, {\n    ref: exampleRef,\n    readOnly: !isOwnExercise,\n    folderStructure: exerciseBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }))), __jsx(\"section\", {\n    className: `${styles['example-wrapper']} relative`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, \" Solu\\u021Bie\"), __jsx(BasicEditorLazy, {\n    ref: solutionRef,\n    readOnly: !isOwnExercise,\n    folderStructure: exerciseSolution,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }), solutionError && __jsx(\"p\", {\n    className: `${styles['error-message']} absolute text-right text-bold`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }, \"Fiecare exerci\\u021Biu trebuie s\\u0103 aib\\u0103 o solu\\u021Bie \\uD83D\\uDC46\")), isOwnExercise && __jsx(React.Fragment, null, __jsx(ChapterControls, {\n    form: \"createForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }), __jsx(PrivacyControls, {\n    form: \"createForm\",\n    isPrivate: isPrivate,\n    onPrivacyChange: setIsPrivate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }), __jsx(\"footer\", {\n    className: \"d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  }, __jsx(LessonSelect, {\n    selectedId: exercise.suggestion,\n    onChange: value => setSuggestion(value.label),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    onClick: deleteExercise,\n    disabled: isEditing || isDeleting,\n    className: `btn btn--danger mr-2 ${isDeleting ? 'btn--loading' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  }, \"\\u0218terge\"), __jsx(\"button\", {\n    form: \"createForm\",\n    type: \"submit\",\n    disabled: isEditing || isDeleting,\n    className: `btn btn--blue ${isEditing ? 'btn--loading' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }\n  }, \"Modific\\u0103\"))))));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userInfo: state.user.info\n  };\n}\n\nconst connector = connect(mapStateToProps);\nexport default connector(ViewOrEditExercise);","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/create-view-edit-exercise/ViewOrEditExercise.tsx"],"names":["Link","React","useState","useRef","connect","useRouter","FolderStructure","uploadFiles","uploadMedia","BasicEditorLazy","Form","MarkdownTextarea","ChapterControls","LessonSelect","styles","PrivacyControls","viewCover","editCover","SweetAlertService","ExerciseService","ViewOrEditExercise","exercise","userInfo","isOwnExercise","username","user","nameOrUsername","name","body","setBody","suggestion","setSuggestion","bodyError","setBodyError","solutionError","setSolutionError","filesToUpload","isPrivate","setIsPrivate","private","isEditing","setIsEditing","isDeleting","setIsDeleting","showExampleEditor","setShowExampleEditor","showSolutionEditor","setShowSolutionEditor","markdownWrapper","exampleRef","solutionRef","router","onMarkdownInput","text","updateMarkdownWithUploadedFiles","newMarkdown","newFiles","Object","keys","forEach","fileId","current","updateExercise","formData","validateRequiredData","newBody","uploadInfo","replaceMarkdownWithUploads","err","toast","type","message","_id","example","getFolderStructure","solution","push","deleteExercise","result","confirm","title","confirmButtonText","isConfirmed","delete","replace","console","error","isValid","scrollIntoView","folderStructure","uploadedInfo","id","find","info","replaceAll","markdownToReplace","url","exerciseBody","JSON","parse","log","exerciseSolution","cta","__html","files","cursorPosition","value","label","mapStateToProps","state","connector"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwC,aAAxC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,SAGEC,WAHF,EAIEC,WAJF,QAKO,GALP;AAMA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;AAGA,SAASC,kBAAT,CAA4B;AAC1BC,EAAAA,QAD0B;AAE1BC,EAAAA;AAF0B,CAA5B,EAG8D;AAC5D,QAAMC,aAAa,GAAGD,QAAQ,IAAKA,QAAQ,CAACE,QAAT,KAAsBH,QAAQ,CAACI,IAAT,CAAcD,QAAvE;AACA,QAAME,cAAc,GAAGL,QAAQ,CAACI,IAAT,CAAcE,IAAd,IAAsBN,QAAQ,CAACI,IAAT,CAAcD,QAA3D;AAEA,QAAM;AAAA,OAACI,IAAD;AAAA,OAAOC;AAAP,MAAkB3B,QAAQ,CAACmB,QAAQ,CAACO,IAAV,CAAhC;AACA,QAAM;AAAA,OAACE,UAAD;AAAA,OAAaC;AAAb,MAA8B7B,QAAQ,CAACmB,QAAQ,CAACS,UAAV,CAA5C;AACA,QAAM;AAAA,OAACE,SAAD;AAAA,OAAYC;AAAZ,MAA4B/B,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAACgC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCjC,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAMkC,aAAa,GAAGjC,MAAM,CAAiB,EAAjB,CAA5B;AAEA,QAAM;AAAA,OAACkC,SAAD;AAAA,OAAYC;AAAZ,MAA4BpC,QAAQ,CAACmB,QAAQ,CAACkB,OAAV,CAA1C;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BvC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACwC,UAAD;AAAA,OAAaC;AAAb,MAA8BzC,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM;AAAA,OAAC0C,iBAAD;AAAA,OAAoBC;AAApB,MAA4C3C,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM;AAAA,OAAC4C,kBAAD;AAAA,OAAqBC;AAArB,MAA8C7C,QAAQ,CAAC,KAAD,CAA5D;AAEA,QAAM8C,eAAe,GAAG7C,MAAM,CAAC,IAAD,CAA9B;AACA,QAAM,CAAC8C,UAAD,EAAaC,WAAb,IAA4B,CAAC/C,MAAM,CAAC,IAAD,CAAP,EAAeA,MAAM,CAAC,IAAD,CAArB,CAAlC;AAEA,QAAMgD,MAAM,GAAG9C,SAAS,EAAxB;;AAEA,QAAM+C,eAAe,GAAIC,IAAD,IAAU;AAChCxB,IAAAA,OAAO,CAACwB,IAAD,CAAP;AACApB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,QAAMqB,+BAA+B,GAAG,CAACC,WAAD,EAAcC,QAAd,KAA2B;AACjE3B,IAAAA,OAAO,CAAC0B,WAAD,CAAP;AACAE,IAAAA,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,OAAtB,CAA+BC,MAAD,IAAY;AACxCxB,MAAAA,aAAa,CAACyB,OAAd,CAAsBD,MAAtB,IAAgCJ,QAAQ,CAACI,MAAD,CAAxC;AACD,KAFD;AAGD,GALD;;AAOA,QAAME,cAAc,GAAG,OACrBC,QADqB,KAKlB;AACH,QAAI,CAACC,oBAAoB,EAAzB,EAA6B;AAC3B,aAAO,KAAP;AACD;;AAED,QAAIC,OAAO,GAAGrC,IAAd;AACAa,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACF,YAAMyB,UAAU,GAAG,MAAM1D,WAAW,CAACoB,IAAD,EAAOQ,aAAa,CAACyB,OAArB,CAApC;AACAI,MAAAA,OAAO,GAAGE,0BAA0B,CAACD,UAAD,CAApC;AACD,KAHD,CAGE,OAAOE,GAAP,EAAY;AACZlD,MAAAA,iBAAiB,CAACmD,KAAlB,CAAwB;AACtBC,QAAAA,IAAI,EAAE,OADgB;AAEtBjB,QAAAA,IAAI,EAAEe,GAAG,CAACG,OAAJ,IAAe;AAFC,OAAxB;AAKA,aAAO,KAAP;AACD;;AAED,QAAI;AACF,YAAMpD,eAAe,CAAC2C,cAAhB,CACJzC,QAAQ,CAACmD,GADL,EAEJ;AACE1C,QAAAA,UADF;AAEEF,QAAAA,IAAI,EAAEqC,OAFR;AAGEK,QAAAA,IAAI,EAAEP,QAAQ,CAACO,IAHjB;AAIE/B,QAAAA,OAAO,EAAEwB,QAAQ,CAACxB,OAAT,KAAqB,MAJhC;AAKEkC,QAAAA,OAAO,EAAExB,UAAU,CAACY,OAAX,GAAqBZ,UAAU,CAACY,OAAX,CAAmBa,kBAAnB,EAArB,GAA+D,IAL1E;AAMEC,QAAAA,QAAQ,EAAEzB,WAAW,CAACW,OAAZ,GAAsBX,WAAW,CAACW,OAAZ,CAAoBa,kBAApB,EAAtB,GAAiE;AAN7E,OAFI,CAAN;AAYAxD,MAAAA,iBAAiB,CAACmD,KAAlB,CAAwB;AACtBC,QAAAA,IAAI,EAAE,SADgB;AAEtBjB,QAAAA,IAAI,EAAE;AAFgB,OAAxB;AAKAF,MAAAA,MAAM,CAACyB,IAAP,CAAa,IAAGtD,QAAQ,CAACE,QAAS,EAAlC;AACD,KAnBD,CAmBE,OAAO4C,GAAP,EAAY;AACZlD,MAAAA,iBAAiB,CAACmD,KAAlB,CAAwB;AACtBhB,QAAAA,IAAI,EAAE,CAAAe,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEG,OAAL,KAAgB,mCADA;AAEtBD,QAAAA,IAAI,EAAE;AAFgB,OAAxB;AAID,KAxBD,SAwBU;AACR7B,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,WAAO,KAAP;AACD,GAtDD;;AAwDA,QAAMoC,cAAc,GAAG,YAAY;AACjC,UAAMC,MAAM,GAAG,MAAM5D,iBAAiB,CAAC6D,OAAlB,CAA0B;AAC7CC,MAAAA,KAAK,EAAE,mBADsC;AAE7C3B,MAAAA,IAAI,EAAE,2CAFuC;AAG7C4B,MAAAA,iBAAiB,EAAE;AAH0B,KAA1B,CAArB;;AAMA,QAAI,CAACH,MAAM,CAACI,WAAZ,EAAyB;AACvB;AACD;;AAED,QAAI;AACFvC,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA,YAAMxB,eAAe,CAACgE,MAAhB,CAAuB9D,QAAQ,CAACmD,GAAhC,CAAN;AACAtD,MAAAA,iBAAiB,CAACmD,KAAlB,CAAwB;AACtBC,QAAAA,IAAI,EAAE,SADgB;AAEtBjB,QAAAA,IAAI,EAAE;AAFgB,OAAxB;AAKAF,MAAAA,MAAM,CAACiC,OAAP,CAAgB,IAAG9D,QAAQ,CAACE,QAAS,EAArC;AACD,KATD,CASE,OAAO4C,GAAP,EAAY;AACZiB,MAAAA,OAAO,CAACC,KAAR,CAAc,kBAAd,EAAkClB,GAAlC;AACAlD,MAAAA,iBAAiB,CAACmD,KAAlB,CAAwB;AACtBC,QAAAA,IAAI,EAAE,OADgB;AAEtBjB,QAAAA,IAAI,EAAEe,GAAG,CAACG,OAAJ,IAAe;AAFC,OAAxB;AAID,KAfD,SAeU;AACR5B,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GA7BD;;AA+BA,QAAMqB,oBAAoB,GAAG,MAAM;AACjC,QAAIuB,OAAO,GAAG,IAAd;;AAEA,QAAI,CAAC3D,IAAL,EAAW;AACTK,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAe,MAAAA,eAAe,CAACa,OAAhB,CAAwB2B,cAAxB;AACAD,MAAAA,OAAO,GAAG,KAAV;AACD;;AAED,QAAI,CAACrC,WAAW,CAACW,OAAjB,EAA0B;AACxB1B,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAoD,MAAAA,OAAO,GAAG,KAAV;AACD,KAHD,MAGO;AACL,UAAIE,eAAgC,GAAGvC,WAAW,CAACW,OAAZ,CAAoBa,kBAApB,EAAvC;;AACA,UAAI,CAACe,eAAL,EAAsB;AACpBtD,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAoD,QAAAA,OAAO,GAAG,KAAV;AACD;AACF;;AAED,WAAOA,OAAP;AACD,GArBD;;AAuBA,QAAMpB,0BAA0B,GAAIuB,YAAD,IAAqC;AACtE,QAAIzB,OAAO,GAAGrC,IAAd;AAEA6B,IAAAA,MAAM,CAACC,IAAP,CAAYtB,aAAa,CAACyB,OAA1B,EAAmCF,OAAnC,CAA4CgC,EAAD,IAAQ;AACjD,YAAMzB,UAAU,GAAGwB,YAAY,CAACE,IAAb,CAAmBC,IAAD,IAAUA,IAAI,CAAClE,IAAL,KAAcgE,EAA1C,CAAnB;;AAEA,UAAI,CAACzB,UAAL,EAAiB;AACfD,QAAAA,OAAO,GAAGA,OAAO,CAAC6B,UAAR,CAAmB1D,aAAa,CAACyB,OAAd,CAAsB8B,EAAtB,EAA0BI,iBAA7C,EAAgE,EAAhE,CAAV;AACD,OAFD,MAEO;AACL9B,QAAAA,OAAO,GAAGA,OAAO,CAAC6B,UAAR,CACR1D,aAAa,CAACyB,OAAd,CAAsB8B,EAAtB,EAA0BI,iBADlB,EAEP,KAAI7B,UAAU,CAACvC,IAAK,KAAIuC,UAAU,CAAC8B,GAAI,GAFhC,CAAV;AAID;AACF,KAXD;AAaAnE,IAAAA,OAAO,CAACoC,OAAD,CAAP;AACA,WAAOA,OAAP;AACD,GAlBD;;AAoBA,QAAMgC,YAAY,GAAG5E,QAAQ,CAACoD,OAAT,GAAmB,IAAInE,eAAJ,CAAoB4F,IAAI,CAACC,KAAL,CAAW9E,QAAQ,CAACoD,OAApB,CAApB,CAAnB,GAAuE,IAA5F;AACAY,EAAAA,OAAO,CAACe,GAAR,CAAY,IAAI9F,eAAJ,CAAoB4F,IAAI,CAACC,KAAL,CAAW9E,QAAQ,CAACoD,OAApB,CAApB,CAAZ;AACA,QAAM4B,gBAAgB,GAAGhF,QAAQ,CAACsD,QAAT,GACrB,IAAIrE,eAAJ,CAAoB4F,IAAI,CAACC,KAAL,CAAW9E,QAAQ,CAACsD,QAApB,CAApB,CADqB,GAErB,IAFJ;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAG,GAAE7D,MAAM,CAACwF,GAAI,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/E,aAAa,GACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8JAFF,CADY,GASZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEG,GAFH,EAGE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,CAACiD,IADZ,CADF,CAHF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,IAAGjD,QAAQ,CAACI,IAAT,CAAcD,QAAS,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,cADH,CADF,CAFF,EAOG,GAPH,sCASG,GATH,EAUE;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QAAQ,CAACiD,IADZ,CAVF,sGAXF,CAVJ,EAyCE;AAAK,IAAA,uBAAuB,EAAE;AAC5BiC,MAAAA,MAAM,EAAEhF,aAAa,GAAGN,SAAH,GAAeD;AADR,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCF,CADF,EA+CE;AAAM,IAAA,SAAS,EAAEF,MAAM,CAAC,cAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAE,KAAlB;AAAyB,IAAA,QAAQ,EAAEgD,cAAnC;AAAmD,IAAA,SAAS,EAAC,UAA7D;AAAwE,IAAA,EAAE,EAAC,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEd,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,KAAK,EAAC,yBADR;AAEE,IAAA,QAAQ,EAAE,CAACzB,aAFb;AAGE,IAAA,QAAQ,EAAEK,IAHZ;AAIE,IAAA,UAAU,EAAC,SAJb;AAKE,IAAA,OAAO,EAAEwB,eALX;AAME,IAAA,QAAQ,EAAE,CAACoD,KAAD,EAAQC,cAAR,KAA2BlG,WAAW,CAC9CiG,KAD8C,EACvCC,cADuC,EACvB7E,IADuB,EACjB0B,+BADiB,CANlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWGtB,SAAS,IACV;AAAG,IAAA,SAAS,EAAG,GAAElB,MAAM,CAAC,eAAD,CAAkB,gCAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAZF,CADF,CADF,EAqBE;AAAS,IAAA,SAAS,EAAEA,MAAM,CAAC,iBAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGmF,YAAY,IACX,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,MAAC,eAAD;AACE,IAAA,GAAG,EAAEhD,UADP;AAEE,IAAA,QAAQ,EAAE,CAAC1B,aAFb;AAGE,IAAA,eAAe,EAAE0E,YAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,EAWI,CAACA,YAAD,IAAiB1E,aAAjB,IAAkC,CAACqB,iBAApC,IACC;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAE,MAAMC,oBAAoB,CAAC,IAAD,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAZJ,EAoBI,CAACoD,YAAD,IAAiB1E,aAAjB,IAAkCqB,iBAAnC,IACC,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,MAAC,eAAD;AACE,IAAA,GAAG,EAAEK,UADP;AAEE,IAAA,QAAQ,EAAE,CAAC1B,aAFb;AAGE,IAAA,eAAe,EAAE0E,YAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CArBJ,CArBF,EAqDE;AAAS,IAAA,SAAS,EAAG,GAAEnF,MAAM,CAAC,iBAAD,CAAoB,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,MAAC,eAAD;AACE,IAAA,GAAG,EAAEoC,WADP;AAEE,IAAA,QAAQ,EAAE,CAAC3B,aAFb;AAGE,IAAA,eAAe,EAAE8E,gBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOGnE,aAAa,IACd;AAAG,IAAA,SAAS,EAAG,GAAEpB,MAAM,CAAC,eAAD,CAAkB,gCAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFARF,CArDF,EAmEGS,aAAa,IACZ,4BACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,YAAtB;AAAmC,IAAA,SAAS,EAAEc,SAA9C;AAAyD,IAAA,eAAe,EAAEC,YAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,SAAS,EAAC,mDAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,UAAU,EAAEjB,QAAQ,CAACS,UADvB;AAEE,IAAA,QAAQ,EAAG4E,KAAD,IAAW3E,aAAa,CAAC2E,KAAK,CAACC,KAAP,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE9B,cAFX;AAGE,IAAA,QAAQ,EAAErC,SAAS,IAAIE,UAHzB;AAIE,IAAA,SAAS,EAAG,wBAAuBA,UAAU,GAAG,cAAH,GAAoB,EAAG,EAJtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAUE;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAEF,SAAS,IAAIE,UAHzB;AAIE,IAAA,SAAS,EAAG,iBAAgBF,SAAS,GAAG,cAAH,GAAoB,EAAG,EAJ9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVF,CALF,CAHF,CApEJ,CA/CF,CADF;AAqJD;;AAED,SAASoE,eAAT,CAAyBC,KAAzB,EAA2C;AACzC,SAAO;AACLvF,IAAAA,QAAQ,EAAEuF,KAAK,CAACpF,IAAN,CAAWoE;AADhB,GAAP;AAGD;;AAED,MAAMiB,SAAS,GAAG1G,OAAO,CAACwG,eAAD,CAAzB;AAEA,eAAeE,SAAS,CAAC1F,kBAAD,CAAxB","sourcesContent":["import Link from 'next/link';\r\nimport React, { useState, useRef } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport { RootState } from '~/redux/root.reducer';\r\nimport { Exercise } from '~/redux/user/types';\r\nimport FolderStructure from '~/services/utils/FolderStructure';\r\nimport {\r\n  FileDictionary,\r\n  MediaUploadResp,\r\n  uploadFiles,\r\n  uploadMedia,\r\n} from '.';\r\nimport BasicEditorLazy from '../Editor/BasicEditor/BasicEditor.lazy';\r\nimport Form from '../Form';\r\nimport MarkdownTextarea from '../MarkdownTextarea';\r\nimport ChapterControls from './ChapterControls/ChapterControls';\r\nimport LessonSelect from './LessonSelect/LessonSelect';\r\n\r\nimport styles from './NewExercise.module.scss';\r\nimport PrivacyControls from './PrivacyControls/PrivacyControls';\r\n\r\nimport viewCover from './the-search.svg';\r\nimport editCover from './coding.svg';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\nimport ExerciseService from '~/services/Exercise.service';\r\nimport { ChapterType } from '~/redux/exercise-submissions/types';\r\n\r\nfunction ViewOrEditExercise({\r\n  exercise,\r\n  userInfo,\r\n}: ConnectedProps<typeof connector> & { exercise: Exercise }) {\r\n  const isOwnExercise = userInfo && (userInfo.username === exercise.user.username);\r\n  const nameOrUsername = exercise.user.name || exercise.user.username;\r\n\r\n  const [body, setBody] = useState(exercise.body);\r\n  const [suggestion, setSuggestion] = useState(exercise.suggestion);\r\n  const [bodyError, setBodyError] = useState(null);\r\n  const [solutionError, setSolutionError] = useState(null);\r\n\r\n  const filesToUpload = useRef<FileDictionary>({});\r\n\r\n  const [isPrivate, setIsPrivate] = useState(exercise.private);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n  const [showExampleEditor, setShowExampleEditor] = useState(false);\r\n  const [showSolutionEditor, setShowSolutionEditor] = useState(false);\r\n\r\n  const markdownWrapper = useRef(null);\r\n  const [exampleRef, solutionRef] = [useRef(null), useRef(null)];\r\n\r\n  const router = useRouter();\r\n\r\n  const onMarkdownInput = (text) => {\r\n    setBody(text);\r\n    setBodyError(false);\r\n  };\r\n\r\n  const updateMarkdownWithUploadedFiles = (newMarkdown, newFiles) => {\r\n    setBody(newMarkdown);\r\n    Object.keys(newFiles).forEach((fileId) => {\r\n      filesToUpload.current[fileId] = newFiles[fileId];\r\n    });\r\n  };\r\n\r\n  const updateExercise = async (\r\n    formData: {\r\n      type: ChapterType,\r\n      private: 'true' | 'false'\r\n    },\r\n  ) => {\r\n    if (!validateRequiredData()) {\r\n      return false;\r\n    }\r\n\r\n    let newBody = body;\r\n    setIsEditing(true);\r\n\r\n    try {\r\n      const uploadInfo = await uploadMedia(body, filesToUpload.current);\r\n      newBody = replaceMarkdownWithUploads(uploadInfo);\r\n    } catch (err) {\r\n      SweetAlertService.toast({\r\n        type: 'error',\r\n        text: err.message || 'Fișierul nu a putut fi încărcat. Încearcă din nou!',\r\n      });\r\n\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      await ExerciseService.updateExercise(\r\n        exercise._id,\r\n        {\r\n          suggestion,\r\n          body: newBody,\r\n          type: formData.type,\r\n          private: formData.private === 'true',\r\n          example: exampleRef.current ? exampleRef.current.getFolderStructure() : null,\r\n          solution: solutionRef.current ? solutionRef.current.getFolderStructure() : null,\r\n        },\r\n      );\r\n\r\n      SweetAlertService.toast({\r\n        type: 'success',\r\n        text: 'Exercițiul a fost modificat cu succes!',\r\n      });\r\n\r\n      router.push(`/${userInfo.username}`);\r\n    } catch (err) {\r\n      SweetAlertService.toast({\r\n        text: err?.message || 'Oops! Nu am putut crea exercițiul',\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setIsEditing(false);\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const deleteExercise = async () => {\r\n    const result = await SweetAlertService.confirm({\r\n      title: 'Șterge exercițiul',\r\n      text: 'Ești sigur? Această decizie e permanentă.',\r\n      confirmButtonText: 'Da, șterge exercițiul',\r\n    });\r\n\r\n    if (!result.isConfirmed) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsDeleting(true);\r\n      await ExerciseService.delete(exercise._id);\r\n      SweetAlertService.toast({\r\n        type: 'success',\r\n        text: 'Exercițiu șters cu success',\r\n      });\r\n\r\n      router.replace(`/${userInfo.username}`);\r\n    } catch (err) {\r\n      console.error('[deleteExercise]', err);\r\n      SweetAlertService.toast({\r\n        type: 'error',\r\n        text: err.message || 'Oops. Se pare că nu am putut șterge exercițiul. Încearcă din nou',\r\n      });\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  const validateRequiredData = () => {\r\n    let isValid = true;\r\n\r\n    if (!body) {\r\n      setBodyError(true);\r\n      markdownWrapper.current.scrollIntoView();\r\n      isValid = false;\r\n    }\r\n\r\n    if (!solutionRef.current) {\r\n      setSolutionError(true);\r\n      isValid = false;\r\n    } else {\r\n      let folderStructure: FolderStructure = solutionRef.current.getFolderStructure();\r\n      if (!folderStructure) {\r\n        setSolutionError(true);\r\n        isValid = false;\r\n      }\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const replaceMarkdownWithUploads = (uploadedInfo: MediaUploadResp[]) => {\r\n    let newBody = body;\r\n\r\n    Object.keys(filesToUpload.current).forEach((id) => {\r\n      const uploadInfo = uploadedInfo.find((info) => info.name === id);\r\n\r\n      if (!uploadInfo) {\r\n        newBody = newBody.replaceAll(filesToUpload.current[id].markdownToReplace, '');\r\n      } else {\r\n        newBody = newBody.replaceAll(\r\n          filesToUpload.current[id].markdownToReplace,\r\n          `![${uploadInfo.name}](${uploadInfo.url})`,\r\n        );\r\n      }\r\n    });\r\n\r\n    setBody(newBody);\r\n    return newBody;\r\n  };\r\n\r\n  const exerciseBody = exercise.example ? new FolderStructure(JSON.parse(exercise.example)) : null;\r\n  console.log(new FolderStructure(JSON.parse(exercise.example)));\r\n  const exerciseSolution = exercise.solution\r\n    ? new FolderStructure(JSON.parse(exercise.solution))\r\n    : null;\r\n\r\n  return (\r\n    <div>\r\n      <section className={`${styles.cta} relative`}>\r\n        {isOwnExercise ? (\r\n          <div>\r\n            <h1> Modifică exercițiul </h1>\r\n            <h2>\r\n              Dacă acest exercițiu este folosit într-una dintre lecții,\r\n              modificările tale vor avea efect abia după aprobarea unui admin.\r\n            </h2>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h1>\r\n              Exercițiu\r\n              {' '}\r\n              <Link href=\"/lecții\">\r\n                <a className=\"text-blue uppercase\">\r\n                  {exercise.type}\r\n                </a>\r\n              </Link>\r\n\r\n            </h1>\r\n            <h2>\r\n              {' '}\r\n              <Link href={`/${exercise.user.username}`}>\r\n                <a className=\"text-bold text-blue\">\r\n                  {nameOrUsername}\r\n                </a>\r\n              </Link>\r\n              {' '}\r\n              a scris un exercițiu despre\r\n              {' '}\r\n              <strong className=\"uppercase\">\r\n                {exercise.type}\r\n              </strong>\r\n              . Îl poți folosi în trainingurile\r\n              tale atâta timp cât oferi atribuire\r\n              autorului.\r\n            </h2>\r\n          </div>\r\n        )}\r\n        {/* eslint-disable-next-line react/no-danger */}\r\n        <div dangerouslySetInnerHTML={{\r\n          __html: isOwnExercise ? editCover : viewCover,\r\n        }}\r\n        />\r\n      </section>\r\n      <main className={styles['new-exercise']}>\r\n        <Form withStyles={false} onSubmit={updateExercise} className=\"relative\" id=\"createForm\">\r\n          <div ref={markdownWrapper}>\r\n            <MarkdownTextarea\r\n              title=\"Descrie exercițiul\"\r\n              disabled={!isOwnExercise}\r\n              markdown={body}\r\n              initialTab=\"PREVIEW\"\r\n              onInput={onMarkdownInput}\r\n              onUpload={(files, cursorPosition) => uploadFiles(\r\n                files, cursorPosition, body, updateMarkdownWithUploadedFiles,\r\n              )}\r\n            />\r\n            {bodyError && (\r\n            <p className={`${styles['error-message']} text-right text-bold absolute`}>\r\n              Fiecare exercițiu trebuie să aibă o descriere 👆\r\n            </p>\r\n            )}\r\n          </div>\r\n        </Form>\r\n\r\n        <section className={styles['example-wrapper']}>\r\n          {exerciseBody && (\r\n            <>\r\n              <h3> Cod de început</h3>\r\n              <BasicEditorLazy\r\n                ref={exampleRef}\r\n                readOnly={!isOwnExercise}\r\n                folderStructure={exerciseBody}\r\n              />\r\n            </>\r\n          )}\r\n          {(!exerciseBody && isOwnExercise && !showExampleEditor) && (\r\n            <button\r\n              className=\"btn btn--light\"\r\n              type=\"button\"\r\n              onClick={() => setShowExampleEditor(true)}\r\n            >\r\n              Adaugă cod de început\r\n            </button>\r\n          )}\r\n          {(!exerciseBody && isOwnExercise && showExampleEditor) && (\r\n            <>\r\n              <h3> Cod de început</h3>\r\n              <BasicEditorLazy\r\n                ref={exampleRef}\r\n                readOnly={!isOwnExercise}\r\n                folderStructure={exerciseBody}\r\n              />\r\n            </>\r\n          )}\r\n        </section>\r\n\r\n        <section className={`${styles['example-wrapper']} relative`}>\r\n          <h3> Soluție</h3>\r\n          <BasicEditorLazy\r\n            ref={solutionRef}\r\n            readOnly={!isOwnExercise}\r\n            folderStructure={exerciseSolution}\r\n          />\r\n          {solutionError && (\r\n          <p className={`${styles['error-message']} absolute text-right text-bold`}>\r\n            Fiecare exercițiu trebuie să aibă o soluție 👆\r\n          </p>\r\n          )}\r\n        </section>\r\n\r\n        {isOwnExercise && (\r\n          <>\r\n            <ChapterControls form=\"createForm\" />\r\n            <PrivacyControls form=\"createForm\" isPrivate={isPrivate} onPrivacyChange={setIsPrivate} />\r\n            <footer className=\"d-flex align-items-center justify-content-between\">\r\n              <LessonSelect\r\n                selectedId={exercise.suggestion}\r\n                onChange={(value) => setSuggestion(value.label)}\r\n              />\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={deleteExercise}\r\n                  disabled={isEditing || isDeleting}\r\n                  className={`btn btn--danger mr-2 ${isDeleting ? 'btn--loading' : ''}`}\r\n                >\r\n                  Șterge\r\n                </button>\r\n\r\n                <button\r\n                  form=\"createForm\"\r\n                  type=\"submit\"\r\n                  disabled={isEditing || isDeleting}\r\n                  className={`btn btn--blue ${isEditing ? 'btn--loading' : ''}`}\r\n                >\r\n                  Modifică\r\n                </button>\r\n              </div>\r\n            </footer>\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    userInfo: state.user.info,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(ViewOrEditExercise);\r\n"]},"metadata":{},"sourceType":"module"}