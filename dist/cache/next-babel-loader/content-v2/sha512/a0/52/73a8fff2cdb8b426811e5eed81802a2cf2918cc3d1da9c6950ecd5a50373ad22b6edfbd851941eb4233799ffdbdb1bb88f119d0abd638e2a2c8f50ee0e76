{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\teach\\\\Teach.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ExerciseSubmission from './ExerciseSubmission/ExerciseSubmission';\nimport ExerciseSubmissionSkeleton from './ExerciseSubmission/ExerciseSubmissionSkeleton';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport { loadSubmissions } from '~/redux/exercise-submissions/exercise-submissions.actions';\nimport PageContainer from '../PageContainer';\nimport Button from '~/components/Button';\nimport styles from './Teach.module.scss';\nimport SubmissionService from '~/services/Submission.service';\n\nclass Teach extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"observer\", void 0);\n\n    _defineProperty(this, \"hiddenRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"initIntersectionObserver\", () => {\n      const options = {\n        threshold: 0.7\n      };\n      this.observer = new IntersectionObserver(this.loadMore, options);\n      this.observer.observe(this.hiddenRef.current);\n    });\n\n    _defineProperty(this, \"getData\", async () => {\n      const {\n        submissions,\n        dispatch\n      } = this.props;\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const newSubmissions = await SubmissionService.searchSubmissions(submissions.page, '');\n        dispatch(loadSubmissions(newSubmissions));\n      } catch (err) {\n        SweetAlertService.toast({\n          type: 'error',\n          text: err\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"searchData\", async query => {// const { dispatch } = this.props;\n      // this.setState({ loading: true });\n      // try {\n      //   const newSubmissions = await ExerciseService.getSubmissions(0, query);\n      //   dispatch(searchSubmissions(query, newSubmissions));\n      // } catch (err) {\n      //   SweetAlertService.toast({ type: 'error', text: err });\n      // } finally {\n      //   this.setState({ loading: false });\n      // }\n    });\n\n    _defineProperty(this, \"loadMore\", entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          this.getData();\n        }\n      });\n    });\n\n    this.state = {\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      submissions\n    } = this.props;\n\n    if (!submissions.end) {\n      this.initIntersectionObserver();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      submissions\n    } = this.props;\n\n    if (prevProps.submissions.end !== submissions.end && submissions.end) {\n      this.observer.disconnect();\n    }\n\n    if (prevProps.submissions.end !== submissions.end && !submissions.end) {\n      this.initIntersectionObserver();\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      submissions\n    } = this.props;\n\n    if (!submissions.end) {\n      this.observer.disconnect();\n    }\n  }\n\n  render() {\n    var _submissions$submissi;\n\n    const {\n      submissions\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return __jsx(PageContainer, {\n      className: styles.teach,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, \" Exerci\\u021Bii rezolvate \"), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, \"Ofer\\u0103 feedback celor ce au rezolvat exerci\\u021Biile de mai jos \\u0219i ajut\\u0103-i s\\u0103 devin\\u0103 mai buni.\"), __jsx(\"ul\", {\n      className: `${styles['cards-wrapper']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, submissions.submissions && submissions.submissions.map(submission => __jsx(\"li\", {\n      key: submission._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, __jsx(ExerciseSubmission, {\n      submission: submission,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }))), loading && Array.from(Array(5), i => __jsx(\"li\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, __jsx(ExerciseSubmissionSkeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    })))), !((_submissions$submissi = submissions.submissions) !== null && _submissions$submissi !== void 0 && _submissions$submissi.length) && !loading && __jsx(\"p\", {\n      className: `${styles['no-results']} text-center`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, \"C\\u0103utarea nu a \\xEEntors nici un rezultat...\"), !submissions.end && __jsx(Button, {\n      variant: \"blue\",\n      onClick: this.getData,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, \"Next page\"), __jsx(\"div\", {\n      className: \"invisible\",\n      ref: this.hiddenRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  submissions: state.submissions\n});\n\nconst connector = connect(mapStateToProps);\nexport default connector(Teach);","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/teach/Teach.tsx"],"names":["React","connect","ExerciseSubmission","ExerciseSubmissionSkeleton","SweetAlertService","loadSubmissions","PageContainer","Button","styles","SubmissionService","Teach","Component","constructor","props","createRef","options","threshold","observer","IntersectionObserver","loadMore","observe","hiddenRef","current","submissions","dispatch","setState","loading","newSubmissions","searchSubmissions","page","err","toast","type","text","query","entries","forEach","entry","isIntersecting","getData","state","componentDidMount","end","initIntersectionObserver","componentDidUpdate","prevProps","disconnect","componentWillUnmount","render","teach","map","submission","_id","Array","from","i","length","mapStateToProps","connector"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwC,aAAxC;AAIA,OAAOC,kBAAP,MAA+B,yCAA/B;AACA,OAAOC,0BAAP,MAAuC,iDAAvC;AAEA,OAAOC,iBAAP,MAA8B,2CAA9B;AACA,SAASC,eAAT,QAAmD,2DAAnD;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;;AAIA,MAAMC,KAAN,SAAoBV,KAAK,CAACW,SAA1B,CAA6E;AAK3EC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB;;AAAA,oDAFCb,KAAK,CAACc,SAAN,EAED;;AAAA,sDAoCQ,MAAM;AAC/B,YAAMC,OAAO,GAAG;AACdC,QAAAA,SAAS,EAAE;AADG,OAAhB;AAIA,WAAKC,QAAL,GAAgB,IAAIC,oBAAJ,CAAyB,KAAKC,QAA9B,EAAwCJ,OAAxC,CAAhB;AACA,WAAKE,QAAL,CAAcG,OAAd,CAAsB,KAAKC,SAAL,CAAeC,OAArC;AACD,KA3CkB;;AAAA,qCA6CT,YAAY;AACpB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAA4B,KAAKX,KAAvC;AAEA,WAAKY,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,UAAI;AACF,cAAMC,cAAc,GAAG,MAAMlB,iBAAiB,CAACmB,iBAAlB,CAAoCL,WAAW,CAACM,IAAhD,EAAsD,EAAtD,CAA7B;AACAL,QAAAA,QAAQ,CAACnB,eAAe,CAACsB,cAAD,CAAhB,CAAR;AACD,OAHD,CAGE,OAAOG,GAAP,EAAY;AACZ1B,QAAAA,iBAAiB,CAAC2B,KAAlB,CAAwB;AAAEC,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,IAAI,EAAEH;AAAvB,SAAxB;AACD,OALD,SAKU;AACR,aAAKL,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD;AACF,KA1DkB;;AAAA,wCA4DN,MAAOQ,KAAP,IAAyB,CACpC;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAzEkB;;AAAA,sCA2EPC,OAAD,IAAa;AACtBA,MAAAA,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAW;AACzB,YAAIA,KAAK,CAACC,cAAV,EAA0B;AACxB,eAAKC,OAAL;AACD;AACF,OAJD;AAKD,KAjFkB;;AAGjB,SAAKC,KAAL,GAAa;AACXd,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDe,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAElB,MAAAA;AAAF,QAAkB,KAAKV,KAA7B;;AAEA,QAAI,CAACU,WAAW,CAACmB,GAAjB,EAAsB;AACpB,WAAKC,wBAAL;AACD;AACF;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAAEtB,MAAAA;AAAF,QAAkB,KAAKV,KAA7B;;AAEA,QAAIgC,SAAS,CAACtB,WAAV,CAAsBmB,GAAtB,KAA8BnB,WAAW,CAACmB,GAA1C,IAAiDnB,WAAW,CAACmB,GAAjE,EAAsE;AACpE,WAAKzB,QAAL,CAAc6B,UAAd;AACD;;AAED,QAAID,SAAS,CAACtB,WAAV,CAAsBmB,GAAtB,KAA8BnB,WAAW,CAACmB,GAA1C,IAAiD,CAACnB,WAAW,CAACmB,GAAlE,EAAuE;AACrE,WAAKC,wBAAL;AACD;AACF;;AAEDI,EAAAA,oBAAoB,GAAG;AACrB,UAAM;AAAExB,MAAAA;AAAF,QAAkB,KAAKV,KAA7B;;AAEA,QAAI,CAACU,WAAW,CAACmB,GAAjB,EAAsB;AACpB,WAAKzB,QAAL,CAAc6B,UAAd;AACD;AACF;;AAiDDE,EAAAA,MAAM,GAAG;AAAA;;AACP,UAAM;AAAEzB,MAAAA;AAAF,QAAkB,KAAKV,KAA7B;AACA,UAAM;AAAEa,MAAAA;AAAF,QAAc,KAAKc,KAAzB;AAEA,WACE,MAAC,aAAD;AAAe,MAAA,SAAS,EAAEhC,MAAM,CAACyC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iIAFF,EAOE;AAAI,MAAA,SAAS,EAAG,GAAEzC,MAAM,CAAC,eAAD,CAAkB,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGe,WAAW,CAACA,WAAZ,IAA2BA,WAAW,CAACA,WAAZ,CAAwB2B,GAAxB,CAA6BC,UAAD,IACtD;AAAI,MAAA,GAAG,EAAEA,UAAU,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,kBAAD;AAAoB,MAAA,UAAU,EAAED,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAD0B,CAD9B,EAMGzB,OAAO,IAAI2B,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,CAAD,CAAhB,EAAsBE,CAAD,IAC/B;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADU,CANd,CAPF,EAmBG,2BAAChC,WAAW,CAACA,WAAb,kDAAC,sBAAyBiC,MAA1B,KAAoC,CAAC9B,OAArC,IACD;AAAG,MAAA,SAAS,EAAG,GAAElB,MAAM,CAAC,YAAD,CAAe,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DApBF,EAwBG,CAACe,WAAW,CAACmB,GAAb,IACD,MAAC,MAAD;AACE,MAAA,OAAO,EAAC,MADV;AAEE,MAAA,OAAO,EAAE,KAAKH,OAFhB;AAGE,MAAA,OAAO,EAAEb,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAzBF,EAkCE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,GAAG,EAAE,KAAKL,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCF,CADF;AAyCD;;AArI0E;;AAwI7E,MAAMoC,eAAe,GAAIjB,KAAD,KAAuB;AAC7CjB,EAAAA,WAAW,EAAEiB,KAAK,CAACjB;AAD0B,CAAvB,CAAxB;;AAIA,MAAMmC,SAAS,GAAGzD,OAAO,CAACwD,eAAD,CAAzB;AAEA,eAAeC,SAAS,CAAChD,KAAD,CAAxB","sourcesContent":["import React from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\n\r\nimport Search from '~/components/Search';\r\nimport { RootState } from '~/redux/root.reducer';\r\nimport ExerciseSubmission from './ExerciseSubmission/ExerciseSubmission';\r\nimport ExerciseSubmissionSkeleton from './ExerciseSubmission/ExerciseSubmissionSkeleton';\r\nimport ExerciseService from '~/services/Exercise.service';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\nimport { loadSubmissions, searchSubmissions } from '~/redux/exercise-submissions/exercise-submissions.actions';\r\nimport PageContainer from '../PageContainer';\r\nimport Button from '~/components/Button';\r\n\r\nimport styles from './Teach.module.scss';\r\nimport SubmissionService from '~/services/Submission.service';\r\n\r\ninterface State { loading: boolean; }\r\n\r\nclass Teach extends React.Component<ConnectedProps<typeof connector>, State> {\r\n  private observer: IntersectionObserver;\r\n\r\n  private hiddenRef = React.createRef<HTMLDivElement>();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { submissions } = this.props;\r\n\r\n    if (!submissions.end) {\r\n      this.initIntersectionObserver();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { submissions } = this.props;\r\n\r\n    if (prevProps.submissions.end !== submissions.end && submissions.end) {\r\n      this.observer.disconnect();\r\n    }\r\n\r\n    if (prevProps.submissions.end !== submissions.end && !submissions.end) {\r\n      this.initIntersectionObserver();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { submissions } = this.props;\r\n\r\n    if (!submissions.end) {\r\n      this.observer.disconnect();\r\n    }\r\n  }\r\n\r\n  initIntersectionObserver = () => {\r\n    const options = {\r\n      threshold: 0.7,\r\n    };\r\n\r\n    this.observer = new IntersectionObserver(this.loadMore, options);\r\n    this.observer.observe(this.hiddenRef.current);\r\n  };\r\n\r\n  getData = async () => {\r\n    const { submissions, dispatch } = this.props;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    try {\r\n      const newSubmissions = await SubmissionService.searchSubmissions(submissions.page, '');\r\n      dispatch(loadSubmissions(newSubmissions));\r\n    } catch (err) {\r\n      SweetAlertService.toast({ type: 'error', text: err });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  searchData = async (query: string) => {\r\n    // const { dispatch } = this.props;\r\n\r\n    // this.setState({ loading: true });\r\n\r\n    // try {\r\n    //   const newSubmissions = await ExerciseService.getSubmissions(0, query);\r\n    //   dispatch(searchSubmissions(query, newSubmissions));\r\n    // } catch (err) {\r\n    //   SweetAlertService.toast({ type: 'error', text: err });\r\n    // } finally {\r\n    //   this.setState({ loading: false });\r\n    // }\r\n  };\r\n\r\n  loadMore = (entries) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        this.getData();\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { submissions } = this.props;\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <PageContainer className={styles.teach}>\r\n        <h1> Exerciții rezolvate </h1>\r\n        <h2>\r\n          Oferă feedback celor ce au rezolvat exercițiile de mai\r\n          jos și ajută-i să devină mai buni.\r\n        </h2>\r\n        {/* <Search query={submissions.search} onSearch={this.searchData} /> */}\r\n        <ul className={`${styles['cards-wrapper']}`}>\r\n          {submissions.submissions && submissions.submissions.map((submission) => (\r\n            <li key={submission._id}>\r\n              <ExerciseSubmission submission={submission} />\r\n            </li>\r\n          ))}\r\n          {loading && Array.from(Array(5), (i) => (\r\n            <li key={i}>\r\n              <ExerciseSubmissionSkeleton />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {!submissions.submissions?.length && !loading && (\r\n        <p className={`${styles['no-results']} text-center`}>\r\n          Căutarea nu a întors nici un rezultat...\r\n        </p>\r\n        )}\r\n        {!submissions.end && (\r\n        <Button\r\n          variant=\"blue\"\r\n          onClick={this.getData}\r\n          loading={loading}\r\n        >\r\n          Next page\r\n        </Button>\r\n        )}\r\n\r\n        <div\r\n          className=\"invisible\"\r\n          ref={this.hiddenRef}\r\n        />\r\n      </PageContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  submissions: state.submissions,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(Teach);\r\n"]},"metadata":{},"sourceType":"module"}