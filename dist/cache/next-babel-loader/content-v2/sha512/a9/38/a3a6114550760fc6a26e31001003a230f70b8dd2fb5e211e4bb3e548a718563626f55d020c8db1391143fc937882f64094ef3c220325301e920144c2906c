{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Highlight\\\\Highlight.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useRef, useState } from 'react';\nimport { useClipboard } from '~/services/Hooks';\nimport LivePreviewDemo from '../LivePreviewDemo';\nimport styles from './Highlight.module.scss';\nexport default function Highlight(_ref) {\n  _s();\n\n  var language = _ref.language,\n      code = _ref.code,\n      className = _ref.className;\n  var btnRef = useRef(null);\n\n  var _useState = useState(''),\n      body = _useState[0],\n      setBody = _useState[1];\n\n  var _useState2 = useState(false),\n      bodyError = _useState2[0],\n      setBodyError = _useState2[1];\n\n  var onMarkdownInput = function onMarkdownInput(text) {\n    setBody(text);\n    setBodyError(false);\n  }; // useEffect(() => {\n  //   import('~/services/highlight').then((module) => {\n  //     const highlight = module.default;\n  //     highlight.highlightBlock(preRef.current);\n  //   });\n  // }, []);\n\n\n  useClipboard(btnRef);\n  return __jsx(\"div\", {\n    className: \"\".concat(styles.highlight, \" \").concat(className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(LivePreviewDemo, {\n    markdown: code,\n    onInput: onMarkdownInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn--transparent\",\n    \"data-clipboard-text\": code,\n    ref: btnRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(FontAwesomeIcon, {\n    className: \"text-silver\",\n    icon: faCopy,\n    width: \"32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: \"d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \" Copy \")));\n}\n\n_s(Highlight, \"BRGGHqnbKGLbx7zizutvMNoBYvQ=\", false, function () {\n  return [useClipboard];\n});\n\n_c = Highlight;\n\nvar _c;\n\n$RefreshReg$(_c, \"Highlight\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Highlight/Highlight.tsx"],"names":["faCopy","FontAwesomeIcon","React","useRef","useState","useClipboard","LivePreviewDemo","styles","Highlight","language","code","className","btnRef","body","setBody","bodyError","setBodyError","onMarkdownInput","text","highlight"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,mCAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,IAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAUA,eAAe,SAASC,SAAT,OAAyD;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,MAApBC,SAAoB,QAApBA,SAAoB;AACtE,MAAMC,MAAM,GAAGT,MAAM,CAAC,IAAD,CAArB;;AADsE,kBAE9CC,QAAQ,CAAC,EAAD,CAFsC;AAAA,MAE/DS,IAF+D;AAAA,MAEzDC,OAFyD;;AAAA,mBAGpCV,QAAQ,CAAC,KAAD,CAH4B;AAAA,MAG/DW,SAH+D;AAAA,MAGpDC,YAHoD;;AAKtE,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAChCJ,IAAAA,OAAO,CAACI,IAAD,CAAP;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD,CALsE,CAUtE;AACA;AACA;AACA;AACA;AACA;;;AAEAX,EAAAA,YAAY,CAACO,MAAD,CAAZ;AAEA,SACE;AAAK,IAAA,SAAS,YAAKL,MAAM,CAACY,SAAZ,cAAyBR,SAAzB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AACE,IAAA,QAAQ,EAAED,IADZ;AAEE,IAAA,OAAO,EAAEO,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EASE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,kBAAhC;AAAmD,2BAAqBP,IAAxE;AAA8E,IAAA,GAAG,EAAEE,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,aAA3B;AAAyC,IAAA,IAAI,EAAEZ,MAA/C;AAAuD,IAAA,KAAK,EAAC,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CATF,CADF;AAgBD;;GAnCuBQ,S;UAiBtBH,Y;;;KAjBsBG,S","sourcesContent":["import { faCopy } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { useClipboard } from '~/services/Hooks';\r\nimport LivePreviewDemo from '../LivePreviewDemo';\r\nimport styles from './Highlight.module.scss';\r\n\r\ntype Language = 'html' | 'css' | 'json' | 'javascript';\r\n\r\ninterface Props {\r\n  code: string,\r\n  language: Language,\r\n  className?: string;\r\n}\r\n\r\nexport default function Highlight({ language, code, className }: Props) {\r\n  const btnRef = useRef(null);\r\n  const [body, setBody] = useState('');\r\n  const [bodyError, setBodyError] = useState(false);\r\n\r\n  const onMarkdownInput = (text) => {\r\n    setBody(text);\r\n    setBodyError(false);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   import('~/services/highlight').then((module) => {\r\n  //     const highlight = module.default;\r\n  //     highlight.highlightBlock(preRef.current);\r\n  //   });\r\n  // }, []);\r\n\r\n  useClipboard(btnRef);\r\n\r\n  return (\r\n    <div className={`${styles.highlight} ${className}`}>\r\n      {/* <div className={language}> */}\r\n      <code>\r\n        <LivePreviewDemo\r\n          markdown={code}\r\n          onInput={onMarkdownInput}\r\n        />\r\n      </code>\r\n      {/* </div> */}\r\n      <button type=\"button\" className=\"btn--transparent\" data-clipboard-text={code} ref={btnRef}>\r\n        <FontAwesomeIcon className=\"text-silver\" icon={faCopy} width=\"32\" />\r\n        <span className=\"d-block\"> Copy </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}