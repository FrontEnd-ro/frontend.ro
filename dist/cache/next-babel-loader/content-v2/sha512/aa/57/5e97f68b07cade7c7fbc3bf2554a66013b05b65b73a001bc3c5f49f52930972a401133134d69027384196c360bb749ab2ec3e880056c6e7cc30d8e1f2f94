{"ast":null,"code":"/* eslint-disable import/no-dynamic-require */\n\n/* eslint-disable prefer-destructuring */\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n\n/* eslint-disable vars-on-top */\n\n/* eslint-disable no-var */\nfunction loadMonaco() {\n  if (window.monaco) {\n    return Promise.resolve(monaco);\n  }\n\n  var script = document.createElement('script');\n  script.src = \"\".concat(process.env.CLOUDFRONT_PUBLIC, \"/lib/vs/loader.js\");\n  document.body.appendChild(script);\n  return new Promise(function (resolve) {\n    script.addEventListener('load', function () {\n      var require = window.require;\n\n      require.config({\n        paths: {\n          vs: \"\".concat(process.env.CLOUDFRONT_PUBLIC, \"/lib/vs\")\n        }\n      });\n\n      require(['vs/editor/editor.main'], function () {\n        monaco = window.monaco;\n        resolve(monaco);\n      });\n    });\n  });\n}\n\nexport default loadMonaco;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Editor/loadMonaco.ts"],"names":["loadMonaco","window","monaco","Promise","resolve","script","document","createElement","src","process","env","CLOUDFRONT_PUBLIC","body","appendChild","addEventListener","require","config","paths","vs"],"mappings":"AAAA;;AACA;;AACA;;AACA;;AACA;AAQA,SAASA,UAAT,GAAqC;AACnC,MAAIC,MAAM,CAACC,MAAX,EAAmB;AACjB,WAAOC,OAAO,CAACC,OAAR,CAAgBF,MAAhB,CAAP;AACD;;AAED,MAAMG,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,EAAAA,MAAM,CAACG,GAAP,aAAgBC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AAEAL,EAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,MAA1B;AAEA,SAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9BC,IAAAA,MAAM,CAACS,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC,UAAMC,OAAY,GAAGd,MAAM,CAACc,OAA5B;;AAEAA,MAAAA,OAAO,CAACC,MAAR,CAAe;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,YAAKT,OAAO,CAACC,GAAR,CAAYC,iBAAjB;AAAJ;AAAT,OAAf;;AACAI,MAAAA,OAAO,CAAC,CAAC,uBAAD,CAAD,EAA4B,YAAM;AACvCb,QAAAA,MAAM,GAAGD,MAAM,CAACC,MAAhB;AACAE,QAAAA,OAAO,CAACF,MAAD,CAAP;AACD,OAHM,CAAP;AAID,KARD;AASD,GAVM,CAAP;AAWD;;AAED,eAAeF,UAAf","sourcesContent":["/* eslint-disable import/no-dynamic-require */\r\n/* eslint-disable prefer-destructuring */\r\n/* eslint-disable @typescript-eslint/ban-ts-comment */\r\n/* eslint-disable vars-on-top */\r\n/* eslint-disable no-var */\r\n\r\ndeclare global {\r\n  // @ts-ignore\r\n  var require: any;\r\n  var monaco: any;\r\n}\r\n\r\nfunction loadMonaco(): Promise<void> {\r\n  if (window.monaco) {\r\n    return Promise.resolve(monaco);\r\n  }\r\n\r\n  const script = document.createElement('script');\r\n  script.src = `${process.env.CLOUDFRONT_PUBLIC}/lib/vs/loader.js`;\r\n\r\n  document.body.appendChild(script);\r\n\r\n  return new Promise((resolve) => {\r\n    script.addEventListener('load', () => {\r\n      const require: any = window.require;\r\n\r\n      require.config({ paths: { vs: `${process.env.CLOUDFRONT_PUBLIC}/lib/vs` } });\r\n      require(['vs/editor/editor.main'], () => {\r\n        monaco = window.monaco;\r\n        resolve(monaco);\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nexport default loadMonaco;\r\n"]},"metadata":{},"sourceType":"module"}