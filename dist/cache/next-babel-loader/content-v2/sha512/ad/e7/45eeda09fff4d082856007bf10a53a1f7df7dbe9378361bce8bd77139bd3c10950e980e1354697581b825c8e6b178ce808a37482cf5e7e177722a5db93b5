{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst mongoose = require('mongoose');\n\nconst {\n  extractDbErrorMessage\n} = require('./database');\n\nconst PAGE_SIZE = 25;\nconst AUTH_EXPIRATION = 7;\nconst MAX_NAME_LENGTH = 255;\nconst MAX_DESCRIPTION_LENGTH = 255;\nconst MAX_USERNAME_LENGTH = 100;\n\nclass ServerError extends Error {\n  constructor(code, err, ...rest) {\n    super(...rest);\n\n    _defineProperty(this, \"code\", void 0);\n\n    _defineProperty(this, \"message\", void 0);\n\n    this.code = code;\n\n    if (typeof err === 'object') {\n      this.message = extractDbErrorMessage(err);\n    } else {\n      this.message = err;\n    }\n  }\n\n  send(res) {\n    res.status(this.code);\n    res.json({\n      code: this.code,\n      message: this.message\n    });\n  }\n\n}\n\nfunction setTokenCookie(token, res) {\n  res.cookie('token', token);\n}\n/** Verify that payload doesn't have extra props not present on the Schema */\n\n\nfunction validateAgainstSchemaProps(payload, Schema) {\n  const keys = Object.keys(payload); // eslint-disable-next-line no-restricted-syntax\n\n  for (const key of keys) {\n    if (!(key in Schema.obj)) {\n      throw new ServerError(400, `Property '${key}' cannot be directly set.`);\n    }\n  }\n}\n\nfunction validateObjectId(_id) {\n  if (!mongoose.isValidObjectId(_id)) {\n    throw new ServerError(400, `Value '${_id}' is not a valid ObjectId identifier`);\n  }\n}\n\nmodule.exports = {\n  ServerError,\n  PAGE_SIZE,\n  AUTH_EXPIRATION,\n  MAX_NAME_LENGTH,\n  MAX_USERNAME_LENGTH,\n  MAX_DESCRIPTION_LENGTH,\n  setTokenCookie,\n  validateAgainstSchemaProps,\n  validateObjectId\n};","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/server/ServerUtils.js"],"names":["mongoose","require","extractDbErrorMessage","PAGE_SIZE","AUTH_EXPIRATION","MAX_NAME_LENGTH","MAX_DESCRIPTION_LENGTH","MAX_USERNAME_LENGTH","ServerError","Error","constructor","code","err","rest","message","send","res","status","json","setTokenCookie","token","cookie","validateAgainstSchemaProps","payload","Schema","keys","Object","key","obj","validateObjectId","_id","isValidObjectId","module","exports"],"mappings":";;AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA4BD,OAAO,CAAC,YAAD,CAAzC;;AAEA,MAAME,SAAS,GAAG,EAAlB;AAEA,MAAMC,eAAe,GAAG,CAAxB;AACA,MAAMC,eAAe,GAAG,GAAxB;AACA,MAAMC,sBAAsB,GAAG,GAA/B;AACA,MAAMC,mBAAmB,GAAG,GAA5B;;AAEA,MAAMC,WAAN,SAA0BC,KAA1B,CAAgC;AAK9BC,EAAAA,WAAW,CAACC,IAAD,EAAOC,GAAP,EAAY,GAAGC,IAAf,EAAqB;AAC9B,UAAM,GAAGA,IAAT;;AAD8B;;AAAA;;AAG9B,SAAKF,IAAL,GAAYA,IAAZ;;AAEA,QAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B;AAC3B,WAAKE,OAAL,GAAeZ,qBAAqB,CAACU,GAAD,CAApC;AACD,KAFD,MAEO;AACL,WAAKE,OAAL,GAAeF,GAAf;AACD;AACF;;AAEDG,EAAAA,IAAI,CAACC,GAAD,EAAM;AACRA,IAAAA,GAAG,CAACC,MAAJ,CAAW,KAAKN,IAAhB;AACAK,IAAAA,GAAG,CAACE,IAAJ,CAAS;AACPP,MAAAA,IAAI,EAAE,KAAKA,IADJ;AAEPG,MAAAA,OAAO,EAAE,KAAKA;AAFP,KAAT;AAID;;AAvB6B;;AA0BhC,SAASK,cAAT,CAAwBC,KAAxB,EAA+BJ,GAA/B,EAAoC;AAClCA,EAAAA,GAAG,CAACK,MAAJ,CAAW,OAAX,EAAoBD,KAApB;AACD;AAED;;;AACA,SAASE,0BAAT,CAAoCC,OAApC,EAA6CC,MAA7C,EAAqD;AACnD,QAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,OAAZ,CAAb,CADmD,CAGnD;;AACA,OAAK,MAAMI,GAAX,IAAkBF,IAAlB,EAAwB;AACtB,QAAI,EAAEE,GAAG,IAAIH,MAAM,CAACI,GAAhB,CAAJ,EAA0B;AACxB,YAAM,IAAIpB,WAAJ,CAAgB,GAAhB,EAAsB,aAAYmB,GAAI,2BAAtC,CAAN;AACD;AACF;AACF;;AAED,SAASE,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7B,MAAI,CAAC9B,QAAQ,CAAC+B,eAAT,CAAyBD,GAAzB,CAAL,EAAoC;AAClC,UAAM,IAAItB,WAAJ,CAAgB,GAAhB,EAAsB,UAASsB,GAAI,sCAAnC,CAAN;AACD;AACF;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACfzB,EAAAA,WADe;AAEfL,EAAAA,SAFe;AAGfC,EAAAA,eAHe;AAIfC,EAAAA,eAJe;AAKfE,EAAAA,mBALe;AAMfD,EAAAA,sBANe;AAOfa,EAAAA,cAPe;AAQfG,EAAAA,0BARe;AASfO,EAAAA;AATe,CAAjB","sourcesContent":["const mongoose = require('mongoose');\r\nconst { extractDbErrorMessage } = require('./database');\r\n\r\nconst PAGE_SIZE = 25;\r\n\r\nconst AUTH_EXPIRATION = 7;\r\nconst MAX_NAME_LENGTH = 255;\r\nconst MAX_DESCRIPTION_LENGTH = 255;\r\nconst MAX_USERNAME_LENGTH = 100;\r\n\r\nclass ServerError extends Error {\r\n  code;\r\n\r\n  message;\r\n\r\n  constructor(code, err, ...rest) {\r\n    super(...rest);\r\n\r\n    this.code = code;\r\n\r\n    if (typeof err === 'object') {\r\n      this.message = extractDbErrorMessage(err);\r\n    } else {\r\n      this.message = err;\r\n    }\r\n  }\r\n\r\n  send(res) {\r\n    res.status(this.code);\r\n    res.json({\r\n      code: this.code,\r\n      message: this.message,\r\n    });\r\n  }\r\n}\r\n\r\nfunction setTokenCookie(token, res) {\r\n  res.cookie('token', token);\r\n}\r\n\r\n/** Verify that payload doesn't have extra props not present on the Schema */\r\nfunction validateAgainstSchemaProps(payload, Schema) {\r\n  const keys = Object.keys(payload);\r\n\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const key of keys) {\r\n    if (!(key in Schema.obj)) {\r\n      throw new ServerError(400, `Property '${key}' cannot be directly set.`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction validateObjectId(_id) {\r\n  if (!mongoose.isValidObjectId(_id)) {\r\n    throw new ServerError(400, `Value '${_id}' is not a valid ObjectId identifier`);\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  ServerError,\r\n  PAGE_SIZE,\r\n  AUTH_EXPIRATION,\r\n  MAX_NAME_LENGTH,\r\n  MAX_USERNAME_LENGTH,\r\n  MAX_DESCRIPTION_LENGTH,\r\n  setTokenCookie,\r\n  validateAgainstSchemaProps,\r\n  validateObjectId,\r\n}"]},"metadata":{},"sourceType":"script"}