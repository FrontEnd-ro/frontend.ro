{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\event\\\\WaitListConfirmation\\\\WaitListConfirmation.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport EventService from '~/services/api/Event.service';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport styles from './WaitListConfirmation.module.scss';\n\nfunction WaitListConfirmation(_ref) {\n  _s();\n\n  var id = _ref.id,\n      userData = _ref.userData;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var addToWaitlist = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return EventService.addToWaitlist(id, userData);\n\n            case 4:\n              SweetAlertService.toast({\n                type: 'success',\n                text: 'Te-am adăugat pe lista de așteptare, te vom contacta în curând!'\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              SweetAlertService.toast({\n                type: 'error',\n                text: _context.t0.message || 'Ne pare rău! Nu am putut să te adăugam pe lista de așteptare. Te rugăm să mai încerci o dată.'\n              });\n\n            case 10:\n              _context.prev = 10;\n              setIsLoading(false);\n              return _context.finish(10);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 7, 10, 13]]);\n    }));\n\n    return function addToWaitlist() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"\".concat(styles['waitlist-confirmation']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Ne pare r\\u0103u, dar locurile la acest eveniment s-au ocupat.\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"E posibil ca unii participan\\u021Bi s\\u0103 se retrag\\u0103, deci dac\\u0103 vrei, te putem pune pe o list\\u0103 de a\\u0219teptare.\"), __jsx(\"div\", {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn--light\",\n    onClick: SweetAlertService.closePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Nu, m-am r\\u0103zg\\xE2ndit\"), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn--blue mb-2 \".concat(isLoading ? 'btn--loading' : ''),\n    disabled: isLoading,\n    onClick: addToWaitlist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Adaug\\u0103-m\\u0103 pe list\\u0103\")));\n}\n\n_s(WaitListConfirmation, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");\n\n_c = WaitListConfirmation;\nexport default WaitListConfirmation;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaitListConfirmation\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/event/WaitListConfirmation/WaitListConfirmation.tsx"],"names":["React","useState","EventService","SweetAlertService","styles","WaitListConfirmation","id","userData","isLoading","setIsLoading","addToWaitlist","toast","type","text","message","closePopup"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;AAEA,OAAOC,MAAP,MAAmB,oCAAnB;;AAWA,SAASC,oBAAT,OAAuD;AAAA;;AAAA,MAAvBC,EAAuB,QAAvBA,EAAuB;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;;AAAA,kBACnBN,QAAQ,CAAC,KAAD,CADW;AAAA,MAC9CO,SAD8C;AAAA,MACnCC,YADmC;;AAGrD,MAAMC,aAAa;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AACpBD,cAAAA,YAAY,CAAC,IAAD,CAAZ;AADoB;AAAA;AAAA,qBAIZP,YAAY,CAACQ,aAAb,CAA2BJ,EAA3B,EAA+BC,QAA/B,CAJY;;AAAA;AAKlBJ,cAAAA,iBAAiB,CAACQ,KAAlB,CAAwB;AACtBC,gBAAAA,IAAI,EAAE,SADgB;AAEtBC,gBAAAA,IAAI,EAAE;AAFgB,eAAxB;AALkB;AAAA;;AAAA;AAAA;AAAA;AAUlBV,cAAAA,iBAAiB,CAACQ,KAAlB,CAAwB;AACtBC,gBAAAA,IAAI,EAAE,OADgB;AAEtBC,gBAAAA,IAAI,EAAE,YAAIC,OAAJ,IAAe;AAFC,eAAxB;;AAVkB;AAAA;AAelBL,cAAAA,YAAY,CAAC,KAAD,CAAZ;AAfkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbC,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAmBA,SACE;AAAK,IAAA,SAAS,YAAKN,MAAM,CAAC,uBAAD,CAAX,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0IAFF,EAME;AAAK,IAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,IAAA,OAAO,EAAED,iBAAiB,CAACY,UAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,+BAAwBP,SAAS,GAAG,cAAH,GAAoB,EAArD,CAFX;AAGE,IAAA,QAAQ,EAAEA,SAHZ;AAIE,IAAA,OAAO,EAAEE,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCARF,CANF,CADF;AA0BD;;GAhDQL,oB;;KAAAA,oB;AAkDT,eAAeA,oBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport EventService from '~/services/api/Event.service';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\n\r\nimport styles from './WaitListConfirmation.module.scss';\r\n\r\ninterface Props {\r\n  id: string;\r\n  userData: {\r\n    name: string;\r\n    tel: string;\r\n    email: string;\r\n  }\r\n}\r\n\r\nfunction WaitListConfirmation({ id, userData }: Props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const addToWaitlist = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await EventService.addToWaitlist(id, userData);\r\n      SweetAlertService.toast({\r\n        type: 'success',\r\n        text: 'Te-am adăugat pe lista de așteptare, te vom contacta în curând!',\r\n      });\r\n    } catch (err) {\r\n      SweetAlertService.toast({\r\n        type: 'error',\r\n        text: err.message || 'Ne pare rău! Nu am putut să te adăugam pe lista de așteptare. Te rugăm să mai încerci o dată.',\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles['waitlist-confirmation']}`}>\r\n      <p>Ne pare rău, dar locurile la acest eveniment s-au ocupat.</p>\r\n      <p>\r\n        E posibil ca unii participanți să se retragă, deci dacă vrei, te putem\r\n        pune pe o listă de așteptare.\r\n      </p>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn--light\"\r\n          onClick={SweetAlertService.closePopup as any}\r\n        >\r\n          Nu, m-am răzgândit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={`btn btn--blue mb-2 ${isLoading ? 'btn--loading' : ''}`}\r\n          disabled={isLoading}\r\n          onClick={addToWaitlist}\r\n        >\r\n          Adaugă-mă pe listă\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WaitListConfirmation;\r\n"]},"metadata":{},"sourceType":"module"}