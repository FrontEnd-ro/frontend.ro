{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\notification-tooltip\\\\notification\\\\Notification.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { timeAgo } from '../../../services/Utils';\nimport styles from './Notification.module.scss';\n\nconst Notification = ({\n  _id,\n  url,\n  avatar,\n  username,\n  name,\n  message,\n  timestamp,\n  isUnread,\n  onMarkAsRead\n}) => __jsx(\"li\", {\n  className: `${styles.notification} ${isUnread ? styles['is--unread'] : ''} text-xs`,\n  onClick: () => onMarkAsRead(_id),\n  role: \"presentation\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }\n}, __jsx(Link, {\n  href: url,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }\n}, __jsx(\"a\", {\n  className: \"d-flex no-underline\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }\n}, __jsx(\"img\", {\n  width: \"32\",\n  height: \"32\",\n  src: avatar,\n  alt: `${username} avatar`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }\n}), __jsx(\"div\", {\n  className: \"body\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }\n}, __jsx(\"p\", {\n  className: \"m-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 11\n  }\n}, __jsx(\"span\", {\n  className: styles.user,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }\n}, name || username), message), __jsx(\"time\", {\n  className: \"text-silver\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 11\n  }\n}, timeAgo(new Date(timestamp)))))));\n\nexport default Notification;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/notification-tooltip/notification/Notification.tsx"],"names":["React","Link","timeAgo","styles","Notification","_id","url","avatar","username","name","message","timestamp","isUnread","onMarkAsRead","notification","user","Date"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;;AAcA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,GADoB;AAEpBC,EAAAA,GAFoB;AAGpBC,EAAAA,MAHoB;AAIpBC,EAAAA,QAJoB;AAKpBC,EAAAA,IALoB;AAMpBC,EAAAA,OANoB;AAOpBC,EAAAA,SAPoB;AAQpBC,EAAAA,QARoB;AASpBC,EAAAA;AAToB,CAAD,KAWnB;AACE,EAAA,SAAS,EAAG,GAAEV,MAAM,CAACW,YAAa,IAAGF,QAAQ,GAAGT,MAAM,CAAC,YAAD,CAAT,GAA0B,EAAG,UAD5E;AAEE,EAAA,OAAO,EAAE,MAAMU,YAAY,CAACR,GAAD,CAF7B;AAGE,EAAA,IAAI,EAAC,cAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAEC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AACE,EAAA,KAAK,EAAC,IADR;AAEE,EAAA,MAAM,EAAC,IAFT;AAGE,EAAA,GAAG,EAAEC,MAHP;AAIE,EAAA,GAAG,EAAG,GAAEC,QAAS,SAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAOE;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAM,EAAA,SAAS,EAAEL,MAAM,CAACY,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA+BN,IAAI,IAAID,QAAvC,CADF,EAEGE,OAFH,CADF,EAKE;AAAM,EAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA+BR,OAAO,CAAC,IAAIc,IAAJ,CAASL,SAAT,CAAD,CAAtC,CALF,CAPF,CADF,CALF,CAXF;;AAoCA,eAAeP,YAAf","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\nimport { timeAgo } from '../../../services/Utils';\r\n\r\nimport styles from './Notification.module.scss';\r\n\r\ninterface Props {\r\n  _id: string;\r\n  avatar: string;\r\n  username: string;\r\n  name: string;\r\n  message: string;\r\n  timestamp: number;\r\n  url: string;\r\n  isUnread: boolean;\r\n  onMarkAsRead: (_id: string) => void\r\n}\r\n\r\nconst Notification = ({\r\n  _id,\r\n  url,\r\n  avatar,\r\n  username,\r\n  name,\r\n  message,\r\n  timestamp,\r\n  isUnread,\r\n  onMarkAsRead,\r\n}: Props) => (\r\n  <li\r\n    className={`${styles.notification} ${isUnread ? styles['is--unread'] : ''} text-xs`}\r\n    onClick={() => onMarkAsRead(_id)}\r\n    role=\"presentation\"\r\n  >\r\n    <Link href={url}>\r\n      <a className=\"d-flex no-underline\">\r\n        <img\r\n          width=\"32\"\r\n          height=\"32\"\r\n          src={avatar}\r\n          alt={`${username} avatar`}\r\n        />\r\n        <div className=\"body\">\r\n          <p className=\"m-0\">\r\n            <span className={styles.user}>{name || username}</span>\r\n            {message}\r\n          </p>\r\n          <time className=\"text-silver\">{timeAgo(new Date(timestamp))}</time>\r\n        </div>\r\n      </a>\r\n    </Link>\r\n  </li>\r\n);\r\n\r\nexport default Notification;\r\n"]},"metadata":{},"sourceType":"module"}