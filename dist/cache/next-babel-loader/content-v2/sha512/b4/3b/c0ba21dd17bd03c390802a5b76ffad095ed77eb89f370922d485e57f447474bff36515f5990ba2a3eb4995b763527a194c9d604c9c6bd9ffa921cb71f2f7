{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Highlight\\\\Highlight.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useRef } from 'react';\nimport { useClipboard } from '~/services/Hooks';\nimport Button from '../Button';\nimport styles from './Highlight.module.scss';\nvar Highlight = /*#__PURE__*/React.forwardRef(_c = _s(function (_ref, forwardRef) {\n  _s();\n\n  var language = _ref.language,\n      code = _ref.code,\n      className = _ref.className;\n  var _ref2 = [useRef(null), useRef(null)],\n      preRef = _ref2[0],\n      btnRef = _ref2[1];\n  useEffect(function () {\n    import('~/services/highlight').then(function (module) {\n      var highlight = module[\"default\"];\n      highlight.highlightBlock(preRef.current);\n    });\n  }, []);\n  useClipboard(btnRef);\n  return __jsx(\"div\", {\n    className: \"\".concat(styles.highlight, \" \").concat(className),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"pre\", {\n    ref: preRef,\n    className: language,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, code)), __jsx(Button, {\n    variant: \"transparent\",\n    \"data-clipboard-text\": code,\n    ref: forwardRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(FontAwesomeIcon, {\n    className: \"text-silver\",\n    icon: faCopy,\n    width: \"32\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: \"d-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \" Copy \")));\n}, \"Ld1zXRTGDnjt1Id6K0OF+gPkaNo=\", false, function () {\n  return [useClipboard];\n}));\n_c2 = Highlight;\nexport default Highlight;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Highlight$React.forwardRef\");\n$RefreshReg$(_c2, \"Highlight\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Highlight/Highlight.tsx"],"names":["faCopy","FontAwesomeIcon","React","useEffect","useRef","useClipboard","Button","styles","Highlight","forwardRef","language","code","className","preRef","btnRef","then","module","highlight","highlightBlock","current"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,mCAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAUA,IAAMC,SAAS,gBAAGN,KAAK,CAACO,UAAN,SAAiB,gBAAuCA,UAAvC,EAAsD;AAAA;;AAAA,MAAnDC,QAAmD,QAAnDA,QAAmD;AAAA,MAAzCC,IAAyC,QAAzCA,IAAyC;AAAA,MAAnCC,SAAmC,QAAnCA,SAAmC;AAAA,cAC9D,CAACR,MAAM,CAAC,IAAD,CAAP,EAAeA,MAAM,CAAC,IAAD,CAArB,CAD8D;AAAA,MAChFS,MADgF;AAAA,MACxEC,MADwE;AAGvFX,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO,sBAAP,EAA+BY,IAA/B,CAAoC,UAACC,MAAD,EAAY;AAC9C,UAAMC,SAAS,GAAGD,MAAM,WAAxB;AACAC,MAAAA,SAAS,CAACC,cAAV,CAAyBL,MAAM,CAACM,OAAhC;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOAd,EAAAA,YAAY,CAACS,MAAD,CAAZ;AAEA,SACE;AAAK,IAAA,SAAS,YAAKP,MAAM,CAACU,SAAZ,cAAyBL,SAAzB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,MAAV;AAAkB,IAAA,SAAS,EAAEH,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IADH,CADF,CADF,EAME,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,aAAhB;AAA8B,2BAAqBA,IAAnD;AAAyD,IAAA,GAAG,EAAEF,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,aAA3B;AAAyC,IAAA,IAAI,EAAET,MAA/C;AAAuD,IAAA,KAAK,EAAC,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CANF,CADF;AAaD,CAzBiB;AAAA,UAUhBK,YAVgB;AAAA,GAAlB;MAAMG,S;AA0BN,eAAeA,SAAf","sourcesContent":["import { faCopy } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { useClipboard } from '~/services/Hooks';\r\nimport Button from '../Button';\r\nimport styles from './Highlight.module.scss';\r\n\r\ntype Language = 'html' | 'css' | 'json' | 'javascript';\r\n\r\ninterface Props {\r\n  code: string,\r\n  language: Language,\r\n  className?: string;\r\n}\r\n\r\nconst Highlight = React.forwardRef(({ language, code, className }: Props, forwardRef) => {\r\n  const [preRef, btnRef] = [useRef(null), useRef(null)];\r\n\r\n  useEffect(() => {\r\n    import('~/services/highlight').then((module) => {\r\n      const highlight = module.default;\r\n      highlight.highlightBlock(preRef.current);\r\n    });\r\n  }, []);\r\n\r\n  useClipboard(btnRef);\r\n\r\n  return (\r\n    <div className={`${styles.highlight} ${className}`}>\r\n      <pre ref={preRef} className={language}>\r\n        <code>\r\n          {code}\r\n        </code>\r\n      </pre>\r\n      <Button variant=\"transparent\" data-clipboard-text={code} ref={forwardRef}>\r\n        <FontAwesomeIcon className=\"text-silver\" icon={faCopy} width=\"32\" />\r\n        <span className=\"d-block\"> Copy </span>\r\n      </Button>\r\n    </div>\r\n  );\r\n});\r\nexport default Highlight;\r\n"]},"metadata":{},"sourceType":"module"}