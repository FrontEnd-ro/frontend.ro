{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\event\\\\EventPage.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { uuid } from '~/services/Utils';\nimport { ShareButton } from '~/components/SocialMediaButtons';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport Form from '../Form';\nimport styles from './EventPage.module.scss';\n\nfunction Event() {\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const router = useRouter();\n  const {\n    0: urlToShare,\n    1: setUrlToShare\n  } = useState(router.pathname);\n  useEffect(() => {\n    setUrlToShare(`${window.location.origin}${router.pathname}`);\n  }, []);\n  const events = [{\n    id: uuid(),\n    title: 'Introducere practică în Git & GitHub pentru toți',\n    cover: '../images/learn/pair-programming.svg',\n    description: 'Înscrie-te și anunță-i și pe colegi! Acest curs include si un proiect interactiv unde puteți colabora.',\n    url: 'Online via Zoom',\n    date: new Date(new Date().getTime() + 10 * 86400000)\n  }];\n\n  const onSubmit = () => {\n    setIsLoading(true);\n\n    try {\n      SweetAlertService.toast({\n        type: 'success',\n        text: 'Felicitări! Înregistrarea la eveniment a avut loc cu succes!'\n      });\n    } catch (err) {\n      setError(err.message || 'Nu am putut să te înregistrăm. Încearcă din nou!');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return __jsx(\"main\", {\n    className: styles.event,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Evenimente\"), events.map(({\n    id,\n    title,\n    description,\n    url,\n    date,\n    cover\n  }) => __jsx(\"section\", {\n    key: id,\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: `${styles.cover}`,\n    style: {\n      backgroundImage: `url(${cover})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: styles['event-details'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(Form, {\n    onInput: () => setError(null),\n    onSubmit: console.log('info'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, error && __jsx(\"p\", {\n    className: \"text-red text-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, error), __jsx(\"div\", {\n    className: `${styles.buttons} d-flex justify-content-between flex-wrap my-5`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    className: `btn btn--blue ${isLoading ? 'btn--loading' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Trimite\"), __jsx(ShareButton, {\n    url: urlToShare,\n    config: {\n      copy: true,\n      facebook: true,\n      whatsapp: true,\n      linkedin: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })))))));\n}\n\nexport default Event;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/event/EventPage.tsx"],"names":["React","useEffect","useState","useRouter","uuid","ShareButton","SweetAlertService","Form","styles","Event","error","setError","isLoading","setIsLoading","router","urlToShare","setUrlToShare","pathname","window","location","origin","events","id","title","cover","description","url","date","Date","getTime","onSubmit","toast","type","text","err","message","event","map","backgroundImage","console","log","buttons","copy","facebook","whatsapp","linkedin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport Link from 'next/link';\r\n\r\nimport { formatDate, uuid } from '~/services/Utils';\r\nimport { ShareButton } from '~/components/SocialMediaButtons';\r\n\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\nimport Form, { FormGroup } from '../Form';\r\n\r\nimport styles from './EventPage.module.scss';\r\n\r\nfunction Event() {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const router = useRouter();\r\n  const [urlToShare, setUrlToShare] = useState(router.pathname);\r\n\r\n  useEffect(() => {\r\n    setUrlToShare(`${window.location.origin}${router.pathname}`);\r\n  }, []);\r\n\r\n  const events = [\r\n    {\r\n      id: uuid(),\r\n      title: 'Introducere practică în Git & GitHub pentru toți',\r\n      cover: '../images/learn/pair-programming.svg',\r\n      description:\r\n        'Înscrie-te și anunță-i și pe colegi! Acest curs include si un proiect interactiv unde puteți colabora.',\r\n      url: 'Online via Zoom',\r\n      date: new Date((new Date()).getTime() + (10 * 86400000)),\r\n    },\r\n  ];\r\n\r\n  const onSubmit = () => {\r\n    setIsLoading(true);\r\n    try {\r\n      SweetAlertService.toast({\r\n        type: 'success',\r\n        text: 'Felicitări! Înregistrarea la eveniment a avut loc cu succes!',\r\n      });\r\n    } catch (err) {\r\n      setError(err.message || 'Nu am putut să te înregistrăm. Încearcă din nou!');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className={styles.event}>\r\n      <h1>Evenimente</h1>\r\n      {events.map(({\r\n        id, title, description, url, date, cover,\r\n      }) => (\r\n        <section key={id} className=\"d-flex justify-content-between align-items-center\">\r\n          <div\r\n            className={`${styles.cover}`}\r\n            style={{\r\n              backgroundImage: `url(${cover})`,\r\n            }}\r\n          />\r\n          <div className={styles['event-details']}>\r\n            {/* <div>\r\n              <h2>\r\n                <span>{title}</span>\r\n              </h2>\r\n              <div className=\"d-flex justify-content-between flex-wrap\">\r\n                <span>\r\n                  Dată:\r\n                  {' '}\r\n                  <strong>\r\n                    <time>{formatDate(date)}</time>\r\n                  </strong>\r\n                </span>\r\n                <span>\r\n                  Locație:\r\n                  {' '}\r\n                  <Link href=\"#\">\r\n                    <a className={`${styles['event-location']} text-bold no-underline d-inline-block relative`}>\r\n                      {url}\r\n                    </a>\r\n                  </Link>\r\n                </span>\r\n              </div>\r\n              <p className=\"my-5\">{description}</p>\r\n            </div> */}\r\n            <Form onInput={() => setError(null)} onSubmit={console.log('info')}>\r\n              {/* <FormGroup className=\"mb-4\">\r\n                <label>\r\n                  <span className=\"label text-bold mb-2\">\r\n                    Nume si prenume\r\n                  </span>\r\n                  <input type=\"text\" name=\"name\" required />\r\n                </label>\r\n              </FormGroup>\r\n\r\n              <FormGroup className=\"mb-4\">\r\n                <label>\r\n                  <span className=\"label text-bold mb-2\">\r\n                    Adresa de email\r\n                  </span>\r\n                  <input type=\"email\" name=\"email\" required />\r\n                </label>\r\n              </FormGroup> */}\r\n\r\n              {error && (\r\n              <p className=\"text-red text-bold\">\r\n                {error}\r\n              </p>\r\n              )}\r\n              <div className={`${styles.buttons} d-flex justify-content-between flex-wrap my-5`}>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isLoading}\r\n                  className={`btn btn--blue ${isLoading ? 'btn--loading' : ''}`}\r\n                >\r\n                  Trimite\r\n                </button>\r\n                <ShareButton\r\n                  url={urlToShare}\r\n                  config={{\r\n                    copy: true,\r\n                    facebook: true,\r\n                    whatsapp: true,\r\n                    linkedin: true,\r\n                  }}\r\n                />\r\n              </div>\r\n            </Form>\r\n            {/* <Link href=\"#\">\r\n              <a href=\"#\" className={`${styles['tell-me-more']} d-flex justify-content-center no-underline`}>\r\n                Spune-mi mai multe\r\n              </a>\r\n            </Link> */}\r\n          </div>\r\n        </section>\r\n      ))}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Event;\r\n"]},"metadata":{},"sourceType":"module"}