{"ast":null,"code":"import _classCallCheck from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Editor\\\\FileSwitcher\\\\FileSwitcher.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faCloudDownloadAlt, faFolderPlus, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit, faFileAlt, faFolder, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\nimport { uuid, nextUntitledFilename } from '~/services/Utils';\nimport HResizable from '../HResizable/HResizable';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport FileIcons from '~/services/utils/FileIcons';\nimport { NewSourceFile } from '~/services/utils/FolderStructure';\nimport FilesList from '../FileList/FilesList';\nimport FolderBrowse from '../FolderBrowser/FolderBrowse';\nimport Feedbacks from '../Feedbacks';\nimport Button from '~/components/Button';\nimport styles from './FileSwitcher.module.scss';\nvar MIN_WIDTH_PX = 150;\nvar INITIAL_WIDTH_PX = 250;\n\nvar FileSwitcher = /*#__PURE__*/function (_React$Component) {\n  _inherits(FileSwitcher, _React$Component);\n\n  var _super = _createSuper(FileSwitcher);\n\n  function FileSwitcher(props) {\n    var _this;\n\n    _classCallCheck(this, FileSwitcher);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"fileSwitcherRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"closeMenu\", function () {\n      _this.setState({\n        ctxMenuKey: null,\n        ctxMenuType: null,\n        dropdownStyle: {\n          display: 'none'\n        }\n      });\n\n      document.removeEventListener('click', _this.closeMenu);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectFile\", function (key) {\n      var onSelect = _this.props.onSelect;\n      var renamedAsset = _this.state.renamedAsset;\n\n      if (!renamedAsset || key !== renamedAsset.key) {\n        /** Editing a file's name & clicking on another file */\n        document.activeElement.blur();\n      }\n\n      if (onSelect) {\n        onSelect(key);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"enterEditMode\", function (key) {\n      var folderStructure = _this.props.folderStructure;\n      var renamedAsset = folderStructure.getFile(key).file;\n\n      if (renamedAsset) {\n        renamedAsset = _objectSpread(_objectSpread({}, renamedAsset), {}, {\n          type: 'FILE'\n        });\n      } else {\n        renamedAsset = _objectSpread(_objectSpread({}, folderStructure.getFolder(key).folder), {}, {\n          type: 'FOLDER'\n        });\n      }\n\n      _this.setState({\n        renamedAsset: renamedAsset\n      });\n\n      setTimeout(function () {\n        _this.fileSwitcherRef.current.querySelector(\"[data-key=\\\"\".concat(key, \"\\\"] input\")).focus();\n      }, 0);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRename\", function (_ref) {\n      var target = _ref.target;\n      var value = target.value;\n      var renamedAsset = _this.state.renamedAsset;\n\n      _this.setState({\n        renamedAsset: _objectSpread(_objectSpread({}, renamedAsset), {}, {\n          name: value\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDownload\", function () {\n      var onDownload = _this.props.onDownload;\n\n      _this.setState({\n        isGeneratingArchive: true\n      });\n\n      onDownload()[\"catch\"](function () {\n        SweetAlertService.toast({\n          type: 'error',\n          text: 'Oups, generating the archive failed. Give it another try!'\n        });\n      })[\"finally\"](function () {\n        return _this.setState({\n          isGeneratingArchive: false\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveAsset\", function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var renamedAsset = _this.state.renamedAsset;\n      var _this$props = _this.props,\n          onFileRename = _this$props.onFileRename,\n          onFolderRename = _this$props.onFolderRename;\n\n      if (renamedAsset.type === 'FOLDER') {\n        onFolderRename(renamedAsset.key, renamedAsset.name);\n      } else {\n        onFileRename(renamedAsset.key, renamedAsset.name);\n      }\n\n      _this.setState({\n        renamedAsset: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"openMenu\", function (e) {\n      var isFolder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      e.preventDefault();\n      e.stopPropagation();\n      document.removeEventListener('click', _this.closeMenu);\n      var clientX = e.clientX,\n          clientY = e.clientY;\n\n      var bbox = _this.fileSwitcherRef.current.getBoundingClientRect();\n\n      _this.setState({\n        dropdownStyle: {\n          top: \"\".concat(clientY - bbox.y, \"px\"),\n          left: \"\".concat(clientX - bbox.x, \"px\")\n        }\n      });\n\n      _this.setState({\n        ctxMenuKey: e.target.dataset.key,\n        ctxMenuType: isFolder ? 'FOLDER' : 'FILE'\n      });\n\n      document.addEventListener('click', _this.closeMenu);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"newFile\", function () {\n      var parentKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var _this$props2 = _this.props,\n          folderStructure = _this$props2.folderStructure,\n          onFileAdd = _this$props2.onFileAdd;\n      var renamedAsset = NewSourceFile(nextUntitledFilename(folderStructure.getFolder(parentKey).folder.files.map(function (f) {\n        return f.name;\n      })));\n\n      _this.setState({\n        renamedAsset: _objectSpread(_objectSpread({}, renamedAsset), {}, {\n          type: 'FILE'\n        })\n      });\n\n      onFileAdd(parentKey, renamedAsset, function () {\n        _this.selectFile(renamedAsset.key);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"newFolder\", function () {\n      var parentKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var _this$props3 = _this.props,\n          folderStructure = _this$props3.folderStructure,\n          onFolderAdd = _this$props3.onFolderAdd;\n      var renamedAsset = {\n        key: uuid(),\n        files: [],\n        folders: [],\n        name: nextUntitledFilename(folderStructure.getFolder(parentKey).folder.folders.map(function (f) {\n          return f.name;\n        }), 'Untitled folder')\n      }; // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n\n      _this.setState({\n        renamedAsset: _objectSpread(_objectSpread({}, renamedAsset), {}, {\n          type: 'FOLDER'\n        })\n      });\n\n      onFolderAdd(parentKey, renamedAsset);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleCollapse\", function () {\n      var isCollapsed = _this.state.isCollapsed;\n      var onResize = _this.props.onResize;\n\n      _this.setState({\n        isCollapsed: !isCollapsed\n      }, function () {\n        if (isCollapsed) {\n          onResize(INITIAL_WIDTH_PX);\n        } else {\n          onResize(0);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onResize\", function (_ref2) {\n      var dx = _ref2.dx;\n      var newWidth = Number(_this.fileSwitcherRef.current.style.width.split('px')[0]) + dx;\n      newWidth = Math.min(Math.max(newWidth, MIN_WIDTH_PX), window.innerWidth / 2);\n      _this.fileSwitcherRef.current.style.width = \"\".concat(newWidth, \"px\");\n\n      _this.props.onResize(newWidth);\n    });\n\n    _this.state = {\n      ctxMenuKey: null,\n      ctxMenuType: null,\n      renamedAsset: null,\n      isCollapsed: false,\n      isGeneratingArchive: false,\n      dropdownStyle: {\n        display: 'none'\n      }\n    };\n    _this.fileSwitcherRef = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(FileSwitcher, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var onResize = this.props.onResize;\n      onResize(INITIAL_WIDTH_PX);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('click', this.closeMenu);\n    }\n  }, {\n    key: \"deleteFileOrFolder\",\n    value: function deleteFileOrFolder(key) {\n      var ctxMenuType = this.state.ctxMenuType;\n      var _this$props4 = this.props,\n          onFolderDelete = _this$props4.onFolderDelete,\n          onFileDelete = _this$props4.onFileDelete;\n\n      if (ctxMenuType === 'FOLDER') {\n        onFolderDelete(key);\n      } else {\n        onFileDelete(key);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          readOnly = _this$props5.readOnly,\n          maxHeight = _this$props5.maxHeight,\n          folderStructure = _this$props5.folderStructure,\n          selectedFileKey = _this$props5.selectedFileKey,\n          feedbacksProp = _this$props5.feedbacks;\n      var _this$state = this.state,\n          ctxMenuKey = _this$state.ctxMenuKey,\n          isCollapsed = _this$state.isCollapsed,\n          ctxMenuType = _this$state.ctxMenuType,\n          dropdownStyle = _this$state.dropdownStyle,\n          isGeneratingArchive = _this$state.isGeneratingArchive;\n      var renamedAsset = this.state.renamedAsset; // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n\n      renamedAsset = renamedAsset || {\n        key: null\n      };\n      var files = folderStructure.files.map(function (f) {\n        return _objectSpread(_objectSpread({}, f), {}, {\n          icon: FileIcons.getIcon(f.name)\n        });\n      });\n      var feedbacks = new Feedbacks(null, feedbacksProp || []).getTypesByFileKey();\n      return __jsx(\"div\", {\n        className: \"\\n          \".concat(styles['file-switcher'], \"\\n          \").concat(readOnly ? styles['is--read-only'] : '', \"\\n          \").concat(isCollapsed ? styles['is--collapsed'] : ''),\n        ref: this.fileSwitcherRef,\n        style: {\n          width: \"\".concat(INITIAL_WIDTH_PX, \"px\"),\n          minWidth: \"\".concat(MIN_WIDTH_PX, \"px\"),\n          maxHeight: \"\".concat(maxHeight, \"px\")\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 7\n        }\n      }, isCollapsed && __jsx(Button, {\n        variant: \"transparent\",\n        onClick: this.toggleCollapse,\n        title: \"Browse files\",\n        className: \"\".concat(styles['toggle-button']),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }\n      }, __jsx(\"img\", {\n        src: FileIcons.getIconUrl('svg'),\n        alt: \"File SVG icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }\n      })), __jsx(\"div\", {\n        className: styles.controls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }\n      }, !readOnly && __jsx(Button, {\n        variant: \"transparent\",\n        onClick: function onClick() {\n          return _this2.newFile();\n        },\n        title: \"New file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: faPlus,\n        width: \"18\",\n        height: \"18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }\n      })), !readOnly && __jsx(Button, {\n        variant: \"transparent\",\n        onClick: function onClick() {\n          return _this2.newFolder();\n        },\n        title: \"New folder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: faFolderPlus,\n        width: \"18\",\n        height: \"18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }\n      })), __jsx(Button, {\n        variant: \"transparent\",\n        onClick: this.onDownload,\n        disabled: isGeneratingArchive,\n        title: \"Download to device\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: faCloudDownloadAlt,\n        width: \"18\",\n        height: \"18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }\n      }))), __jsx(\"button\", {\n        onClick: this.toggleCollapse,\n        type: \"button\",\n        className: \"btn--transparent\",\n        title: \"Collapse panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: faChevronLeft,\n        width: \"18\",\n        height: \"18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }\n      }))), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 9\n        }\n      }, folderStructure.folders.map(function (folder, index) {\n        return __jsx(FolderBrowse, {\n          key: folder.key,\n          folderKey: folder.key,\n          folderStructure: folderStructure // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          ,\n          feedbacks: feedbacks,\n          readOnly: readOnly,\n          selectFile: _this2.selectFile,\n          selectedFileKey: selectedFileKey,\n          renamedAsset: renamedAsset,\n          ctxMenuKey: ctxMenuKey,\n          openMenu: _this2.openMenu,\n          enterEditMode: _this2.enterEditMode,\n          onRename: _this2.onRename,\n          saveAsset: _this2.saveAsset,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }\n        });\n      }), __jsx(FilesList, {\n        readOnly: readOnly,\n        files: files,\n        feedbacks: feedbacks,\n        selectedFileKey: selectedFileKey,\n        ctxMenuKey: ctxMenuKey,\n        selectFile: this.selectFile,\n        enterEditMode: this.enterEditMode,\n        openMenu: this.openMenu,\n        renamedAsset: renamedAsset,\n        onRename: this.onRename,\n        saveAsset: this.saveAsset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }\n      })), __jsx(\"ul\", {\n        className: styles['dropdown-menu'],\n        style: dropdownStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 9\n        }\n      }, ctxMenuType === 'FOLDER' && __jsx(React.Fragment, null, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 15\n        }\n      }, __jsx(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.newFile(ctxMenuKey);\n        },\n        className: \"btn btn--transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 17\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: faFileAlt,\n        width: \"18\",\n        height: \"18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 19\n        }\n      }), \"New file\")), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 15\n        }\n      }, __jsx(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.newFolder(ctxMenuKey);\n        },\n        className: \"btn btn--transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 17\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: faFolder,\n        width: \"18\",\n        height: \"18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 19\n        }\n      }), \"New folder\"))), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }\n      }, __jsx(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.enterEditMode(ctxMenuKey);\n        },\n        className: \"btn btn--transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: faEdit,\n        width: \"18\",\n        height: \"18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 15\n        }\n      }), \"Rename\")), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }\n      }, __jsx(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.deleteFileOrFolder(ctxMenuKey);\n        },\n        className: \"btn btn--transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: faTrashAlt,\n        width: \"18\",\n        height: \"18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }\n      }), \"Delete\"))), __jsx(HResizable, {\n        onResize: this.onResize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return FileSwitcher;\n}(React.Component);\n\nexport default FileSwitcher;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Editor/FileSwitcher/FileSwitcher.tsx"],"names":["React","FontAwesomeIcon","faChevronLeft","faCloudDownloadAlt","faFolderPlus","faPlus","faEdit","faFileAlt","faFolder","faTrashAlt","uuid","nextUntitledFilename","HResizable","SweetAlertService","FileIcons","NewSourceFile","FilesList","FolderBrowse","Feedbacks","Button","styles","MIN_WIDTH_PX","INITIAL_WIDTH_PX","FileSwitcher","props","setState","ctxMenuKey","ctxMenuType","dropdownStyle","display","document","removeEventListener","closeMenu","key","onSelect","renamedAsset","state","activeElement","blur","folderStructure","getFile","file","type","getFolder","folder","setTimeout","fileSwitcherRef","current","querySelector","focus","target","value","name","onDownload","isGeneratingArchive","toast","text","e","preventDefault","stopPropagation","onFileRename","onFolderRename","isFolder","clientX","clientY","bbox","getBoundingClientRect","top","y","left","x","dataset","addEventListener","parentKey","onFileAdd","files","map","f","selectFile","onFolderAdd","folders","isCollapsed","onResize","dx","newWidth","Number","style","width","split","Math","min","max","window","innerWidth","createRef","onFolderDelete","onFileDelete","readOnly","maxHeight","selectedFileKey","feedbacksProp","feedbacks","icon","getIcon","getTypesByFileKey","minWidth","toggleCollapse","getIconUrl","controls","newFile","newFolder","index","openMenu","enterEditMode","onRename","saveAsset","deleteFileOrFolder","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faChevronLeft,\r\n  faCloudDownloadAlt,\r\n  faFileUpload,\r\n  faFolderPlus,\r\n  faPlus,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  faEdit, faFileAlt, faFolder, faTrashAlt,\r\n} from '@fortawesome/free-regular-svg-icons';\r\nimport { uuid, nextUntitledFilename } from '~/services/Utils';\r\nimport HResizable from '../HResizable/HResizable';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\nimport FileIcons from '~/services/utils/FileIcons';\r\nimport FolderStructure, { ExerciseFile, ExerciseFolder, NewSourceFile } from '~/services/utils/FolderStructure';\r\nimport FilesList from '../FileList/FilesList';\r\nimport FolderBrowse from '../FolderBrowser/FolderBrowse';\r\nimport Feedbacks from '../Feedbacks';\r\nimport Button from '~/components/Button';\r\n\r\nimport styles from './FileSwitcher.module.scss';\r\n\r\nconst MIN_WIDTH_PX = 150;\r\nconst INITIAL_WIDTH_PX = 250;\r\n\r\ninterface Props {\r\n  readOnly: boolean,\r\n  maxHeight: number,\r\n  selectedFileKey: string;\r\n  folderStructure: FolderStructure,\r\n  onResize: (px: number) => void\r\n  onSelect?: (key: string) => void\r\n  onDownload?: () => Promise<void>\r\n  onFolderAdd?: (key: string, asset: any) => void;\r\n  onFolderRename?: (key: string, name: string) => void;\r\n  onFolderDelete?: (key: string) => void;\r\n  onFileAdd?: (key: string, asset: any, cb: () => void) => void\r\n  onFileRename?: (key: string, name: string) => void;\r\n  onFileDelete?: (key: string) => void;\r\n  feedbacks?: any;\r\n}\r\n\r\ninterface State {\r\n  ctxMenuKey: string;\r\n  ctxMenuType: 'FILE' | 'FOLDER';\r\n  renamedAsset: (ExerciseFile | ExerciseFolder) & { type: 'FILE' | 'FOLDER' };\r\n  isCollapsed: boolean;\r\n  isGeneratingArchive: boolean;\r\n  dropdownStyle: Record<string, any>\r\n}\r\n\r\nclass FileSwitcher extends React.Component<Props, State> {\r\n  private fileSwitcherRef: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ctxMenuKey: null,\r\n      ctxMenuType: null,\r\n      renamedAsset: null,\r\n      isCollapsed: false,\r\n      isGeneratingArchive: false,\r\n      dropdownStyle: { display: 'none' },\r\n    };\r\n\r\n    this.fileSwitcherRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { onResize } = this.props;\r\n\r\n    onResize(INITIAL_WIDTH_PX);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('click', this.closeMenu);\r\n  }\r\n\r\n  closeMenu = () => {\r\n    this.setState({\r\n      ctxMenuKey: null,\r\n      ctxMenuType: null,\r\n      dropdownStyle: { display: 'none' },\r\n    });\r\n\r\n    document.removeEventListener('click', this.closeMenu);\r\n  }\r\n\r\n  selectFile = (key: string) => {\r\n    const { onSelect } = this.props;\r\n    const { renamedAsset } = this.state;\r\n\r\n    if (!renamedAsset || key !== renamedAsset.key) {\r\n      /** Editing a file's name & clicking on another file */\r\n      (document.activeElement as HTMLElement).blur();\r\n    }\r\n\r\n    if (onSelect) {\r\n      onSelect(key);\r\n    }\r\n  }\r\n\r\n  enterEditMode = (key) => {\r\n    const { folderStructure } = this.props;\r\n\r\n    let renamedAsset = folderStructure.getFile(key).file;\r\n    if (renamedAsset) {\r\n      renamedAsset = { ...renamedAsset, type: 'FILE' };\r\n    } else {\r\n      renamedAsset = { ...folderStructure.getFolder(key).folder, type: 'FOLDER' };\r\n    }\r\n\r\n    this.setState({ renamedAsset });\r\n\r\n    setTimeout(() => {\r\n      (this.fileSwitcherRef.current.querySelector(`[data-key=\"${key}\"] input`) as HTMLElement).focus();\r\n    }, 0);\r\n  }\r\n\r\n  onRename = ({ target }) => {\r\n    const { value } = target;\r\n    const { renamedAsset } = this.state;\r\n\r\n    this.setState({\r\n      renamedAsset: { ...renamedAsset, name: value },\r\n    });\r\n  }\r\n\r\n  onDownload = () => {\r\n    const { onDownload } = this.props;\r\n\r\n    this.setState({ isGeneratingArchive: true });\r\n\r\n    onDownload()\r\n      .catch(() => {\r\n        SweetAlertService.toast({\r\n          type: 'error',\r\n          text: 'Oups, generating the archive failed. Give it another try!',\r\n        });\r\n      })\r\n\r\n      .finally(() => this.setState({ isGeneratingArchive: false }));\r\n  }\r\n\r\n  saveAsset = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const { renamedAsset } = this.state;\r\n    const { onFileRename, onFolderRename } = this.props;\r\n\r\n    if (renamedAsset.type === 'FOLDER') {\r\n      onFolderRename(renamedAsset.key, renamedAsset.name);\r\n    } else {\r\n      onFileRename(renamedAsset.key, renamedAsset.name);\r\n    }\r\n\r\n    this.setState({ renamedAsset: null });\r\n  }\r\n\r\n  openMenu = (e, isFolder = false) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    document.removeEventListener('click', this.closeMenu);\r\n\r\n    const { clientX, clientY } = e;\r\n\r\n    const bbox = this.fileSwitcherRef.current.getBoundingClientRect();\r\n\r\n    this.setState({\r\n      dropdownStyle: {\r\n        top: `${clientY - bbox.y}px`,\r\n        left: `${clientX - bbox.x}px`,\r\n      },\r\n    });\r\n\r\n    this.setState({\r\n      ctxMenuKey: e.target.dataset.key,\r\n      ctxMenuType: isFolder ? 'FOLDER' : 'FILE',\r\n    });\r\n    document.addEventListener('click', this.closeMenu);\r\n  }\r\n\r\n  newFile = (parentKey = null) => {\r\n    const { folderStructure, onFileAdd } = this.props;\r\n    const renamedAsset = NewSourceFile(nextUntitledFilename(folderStructure\r\n      .getFolder(parentKey).folder.files.map((f) => f.name)));\r\n\r\n    this.setState({ renamedAsset: { ...renamedAsset, type: 'FILE' } });\r\n    onFileAdd(parentKey, renamedAsset, () => {\r\n      this.selectFile(renamedAsset.key);\r\n    });\r\n  }\r\n\r\n  newFolder = (parentKey = null) => {\r\n    const { folderStructure, onFolderAdd } = this.props;\r\n    const renamedAsset = {\r\n      key: uuid(),\r\n      files: [],\r\n      folders: [],\r\n      name: nextUntitledFilename(folderStructure.getFolder(parentKey).folder.folders.map((f) => f.name), 'Untitled folder'),\r\n    };\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore\r\n    this.setState({ renamedAsset: { ...renamedAsset, type: 'FOLDER' } });\r\n    onFolderAdd(parentKey, renamedAsset);\r\n  }\r\n\r\n  toggleCollapse = () => {\r\n    const { isCollapsed } = this.state;\r\n    const { onResize } = this.props;\r\n\r\n    this.setState(\r\n      {\r\n        isCollapsed: !isCollapsed,\r\n      },\r\n      () => {\r\n        if (isCollapsed) {\r\n          onResize(INITIAL_WIDTH_PX);\r\n        } else {\r\n          onResize(0);\r\n        }\r\n      },\r\n    );\r\n  }\r\n\r\n  onResize = ({ dx }) => {\r\n    let newWidth = Number(this.fileSwitcherRef.current.style.width.split('px')[0]) + dx;\r\n    newWidth = Math.min(Math.max(newWidth, MIN_WIDTH_PX), window.innerWidth / 2);\r\n\r\n    this.fileSwitcherRef.current.style.width = `${newWidth}px`;\r\n\r\n    this.props.onResize(newWidth);\r\n  }\r\n\r\n  deleteFileOrFolder(key) {\r\n    const { ctxMenuType } = this.state;\r\n    const { onFolderDelete, onFileDelete } = this.props;\r\n\r\n    if (ctxMenuType === 'FOLDER') {\r\n      onFolderDelete(key);\r\n    } else {\r\n      onFileDelete(key);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      readOnly,\r\n      maxHeight,\r\n      folderStructure,\r\n      selectedFileKey,\r\n      feedbacks: feedbacksProp,\r\n    } = this.props;\r\n\r\n    const {\r\n      ctxMenuKey,\r\n      isCollapsed,\r\n      ctxMenuType,\r\n      dropdownStyle,\r\n      isGeneratingArchive,\r\n    } = this.state;\r\n\r\n    let { renamedAsset } = this.state;\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore\r\n    renamedAsset = renamedAsset || { key: null };\r\n\r\n    const files = folderStructure.files.map((f) => ({ ...f, icon: FileIcons.getIcon(f.name) }));\r\n    const feedbacks = new Feedbacks(null, feedbacksProp || []).getTypesByFileKey();\r\n\r\n    return (\r\n      <div\r\n        className={`\r\n          ${styles['file-switcher']}\r\n          ${readOnly ? styles['is--read-only'] : ''}\r\n          ${isCollapsed ? styles['is--collapsed'] : ''}`}\r\n        ref={this.fileSwitcherRef}\r\n        style={{ width: `${INITIAL_WIDTH_PX}px`, minWidth: `${MIN_WIDTH_PX}px`, maxHeight: `${maxHeight}px` }}\r\n      >\r\n        {isCollapsed && (\r\n          <Button variant=\"transparent\" onClick={this.toggleCollapse} title=\"Browse files\" className={`${styles['toggle-button']}`}>\r\n            <img src={FileIcons.getIconUrl('svg')} alt=\"File SVG icon\" />\r\n          </Button>\r\n        )}\r\n        <div className={styles.controls}>\r\n          <div>\r\n            {!readOnly && (\r\n              <Button variant=\"transparent\" onClick={() => this.newFile()} title=\"New file\">\r\n                <FontAwesomeIcon icon={faPlus} width=\"18\" height=\"18\" />\r\n              </Button>\r\n            )}\r\n            {!readOnly && (\r\n              <Button variant=\"transparent\" onClick={() => this.newFolder()} title=\"New folder\">\r\n                <FontAwesomeIcon icon={faFolderPlus} width=\"18\" height=\"18\" />\r\n              </Button>\r\n            )}\r\n            <Button\r\n              variant=\"transparent\"\r\n              onClick={this.onDownload}\r\n              disabled={isGeneratingArchive}\r\n              title=\"Download to device\"\r\n            >\r\n              <FontAwesomeIcon icon={faCloudDownloadAlt} width=\"18\" height=\"18\" />\r\n            </Button>\r\n          </div>\r\n          <button onClick={this.toggleCollapse} type=\"button\" className=\"btn--transparent\" title=\"Collapse panel\">\r\n            <FontAwesomeIcon icon={faChevronLeft} width=\"18\" height=\"18\" />\r\n          </button>\r\n        </div>\r\n        {/* <Scroll className=\"is--fliped-x\"> */}\r\n        <div>\r\n          {folderStructure.folders.map((folder, index) => (\r\n            <FolderBrowse\r\n              key={folder.key}\r\n              folderKey={folder.key}\r\n              folderStructure={folderStructure}\r\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n              // @ts-ignore\r\n              feedbacks={feedbacks}\r\n              readOnly={readOnly}\r\n              selectFile={this.selectFile}\r\n              selectedFileKey={selectedFileKey}\r\n              renamedAsset={renamedAsset}\r\n              ctxMenuKey={ctxMenuKey}\r\n              openMenu={this.openMenu}\r\n              enterEditMode={this.enterEditMode}\r\n              onRename={this.onRename}\r\n              saveAsset={this.saveAsset}\r\n            />\r\n          ))}\r\n          <FilesList\r\n            readOnly={readOnly}\r\n            files={files}\r\n            feedbacks={feedbacks}\r\n            selectedFileKey={selectedFileKey}\r\n            ctxMenuKey={ctxMenuKey}\r\n            selectFile={this.selectFile}\r\n            enterEditMode={this.enterEditMode}\r\n            openMenu={this.openMenu}\r\n            renamedAsset={renamedAsset}\r\n            onRename={this.onRename}\r\n            saveAsset={this.saveAsset}\r\n          />\r\n        </div>\r\n        {/* </Scroll> */}\r\n        <ul className={styles['dropdown-menu']} style={dropdownStyle}>\r\n          {ctxMenuType === 'FOLDER' && (\r\n            <>\r\n              <li>\r\n                <button type=\"button\" onClick={() => this.newFile(ctxMenuKey)} className=\"btn btn--transparent\">\r\n                  <FontAwesomeIcon icon={faFileAlt} width=\"18\" height=\"18\" />\r\n                  New file\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button type=\"button\" onClick={() => this.newFolder(ctxMenuKey)} className=\"btn btn--transparent\">\r\n                  <FontAwesomeIcon icon={faFolder} width=\"18\" height=\"18\" />\r\n                  New folder\r\n                </button>\r\n              </li>\r\n            </>\r\n          )}\r\n          <li>\r\n            <button type=\"button\" onClick={() => this.enterEditMode(ctxMenuKey)} className=\"btn btn--transparent\">\r\n              <FontAwesomeIcon icon={faEdit} width=\"18\" height=\"18\" />\r\n              Rename\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <button type=\"button\" onClick={() => this.deleteFileOrFolder(ctxMenuKey)} className=\"btn btn--transparent\">\r\n              <FontAwesomeIcon icon={faTrashAlt} width=\"18\" height=\"18\" />\r\n              Delete\r\n            </button>\r\n          </li>\r\n        </ul>\r\n        <HResizable onResize={this.onResize} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileSwitcher;\r\n"]},"metadata":{},"sourceType":"module"}