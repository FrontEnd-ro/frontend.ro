{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Editor\\\\InitForm\\\\InitForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Button from '~/components/Button';\nimport Form from '~/components/Form';\nimport { uuid } from '~/services/Utils';\nimport styles from './InitForm.module.scss';\n\nfunction InitForm({\n  createFirstFile,\n  uploadStructure\n}) {\n  const {\n    0: fileInputID\n  } = useState(uuid());\n  const {\n    0: isDropable,\n    1: setIsDropable\n  } = useState(false);\n\n  const onDragEnter = e => {\n    e.preventDefault();\n    setIsDropable(true);\n  };\n\n  const onDragLeave = e => {\n    e.preventDefault();\n\n    if (e.target.tagName === 'INPUT' && e.target.type === 'file') {\n      setIsDropable(false);\n    }\n  };\n\n  const onDrop = () => setIsDropable(false);\n\n  return __jsx(Form, {\n    className: `\n        ${styles['init-editor-form']} \n        ${isDropable ? styles['is--dropable'] : ''} \n        d-flex align-items-center justify-content-center`,\n    onDragEnter: onDragEnter,\n    onDragLeave: onDragLeave,\n    onDrop: onDrop,\n    onSubmit: createFirstFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Numele fi\\u0219ierului*\"), __jsx(\"div\", {\n    className: styles['input-and-button'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    required: true,\n    type: \"text\",\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Creeaz\\u0103\"))), __jsx(\"span\", {\n    className: styles.separator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"sau\")), __jsx(\"p\", {\n    className: styles['dnd-cta'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: fileInputID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Drag and drop\"), ' ', \"fi\\u0219iere \\u0219i foldere\"), __jsx(\"label\", {\n    className: `${styles['upload-label']} pin-full d-flex align-items-center justify-content-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"icon-check mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), \"Adaug\\u0103 fi\\u0219ierele\"), __jsx(\"input\", {\n    className: \"pin-full\",\n    id: fileInputID,\n    type: \"file\",\n    multiple: true,\n    onChange: uploadStructure,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default InitForm;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Editor/InitForm/InitForm.tsx"],"names":["React","useState","Button","Form","uuid","styles","InitForm","createFirstFile","uploadStructure","fileInputID","isDropable","setIsDropable","onDragEnter","e","preventDefault","onDragLeave","target","tagName","type","onDrop","separator"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '~/components/Button';\r\nimport Form from '~/components/Form';\r\nimport { uuid } from '~/services/Utils';\r\n\r\nimport styles from './InitForm.module.scss';\r\n\r\ninterface Props {\r\n  createFirstFile: ({ name: string }) => void;\r\n  uploadStructure: (e: any) => void\r\n}\r\n\r\nfunction InitForm({ createFirstFile, uploadStructure }: Props) {\r\n  const [fileInputID] = useState(uuid());\r\n  const [isDropable, setIsDropable] = useState(false);\r\n\r\n  const onDragEnter = (e) => {\r\n    e.preventDefault();\r\n    setIsDropable(true);\r\n  };\r\n\r\n  const onDragLeave = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.tagName === 'INPUT' && e.target.type === 'file') {\r\n      setIsDropable(false);\r\n    }\r\n  };\r\n\r\n  const onDrop = () => setIsDropable(false);\r\n\r\n  return (\r\n    <Form\r\n      className={`\r\n        ${styles['init-editor-form']} \r\n        ${isDropable ? styles['is--dropable'] : ''} \r\n        d-flex align-items-center justify-content-center`}\r\n      onDragEnter={onDragEnter}\r\n      onDragLeave={onDragLeave}\r\n      onDrop={onDrop}\r\n      onSubmit={createFirstFile}\r\n    >\r\n      <label>\r\n        <span>Numele fișierului*</span>\r\n        <div className={styles['input-and-button']}>\r\n          <input required type=\"text\" name=\"name\" />\r\n          <Button type=\"submit\" variant=\"success\">\r\n            Creează\r\n          </Button>\r\n        </div>\r\n      </label>\r\n      <span className={styles.separator}>\r\n        <span>sau</span>\r\n      </span>\r\n      <p className={styles['dnd-cta']}>\r\n        <label htmlFor={fileInputID}>Drag and drop</label>\r\n        {' '}\r\n        fișiere și foldere\r\n      </p>\r\n\r\n      <label className={`${styles['upload-label']} pin-full d-flex align-items-center justify-content-center`}>\r\n        <p>\r\n          <span className=\"icon-check mr-2\" />\r\n          Adaugă fișierele\r\n        </p>\r\n        <input className=\"pin-full\" id={fileInputID} type=\"file\" multiple onChange={uploadStructure} />\r\n      </label>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default InitForm;\r\n"]},"metadata":{},"sourceType":"module"}