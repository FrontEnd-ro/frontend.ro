{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Header\\\\Header.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport AccountTooltip from './AccountTooltip/AccountTooltip';\nimport Button from '../Button';\nimport styles from './Header.module.scss';\n\nfunction Header(_ref) {\n  _s();\n\n  var _ref$href = _ref.href,\n      href = _ref$href === void 0 ? '/' : _ref$href,\n      demoPage = _ref.demoPage,\n      onMenuClick = _ref.onMenuClick,\n      isLoggedIn = _ref.isLoggedIn;\n\n  var _useState = useState(false),\n      isMenuOpen = _useState[0],\n      setIsMenuOpen = _useState[1];\n\n  return __jsx(\"header\", {\n    className: \"\".concat(styles.header, \" \").concat(isMenuOpen ? \" \".concat(styles['header-menu-open']) : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex justify-content-between w-100 align-items-center h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, onMenuClick && __jsx(Button, {\n    variant: \"transparent\",\n    onClick: onMenuClick,\n    className: \"header__menu-btn \".concat(styles.menu),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faBars,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })), __jsx(Link, {\n    href: href,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: \"/logo.png\",\n    alt: \"FrontEnd.ro logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }))), __jsx(\"nav\", {\n    className: styles['main-nav'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/evenimente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \" Evenimente \"))))), demoPage && __jsx(\"p\", {\n    className: \"\".concat(styles['demo-label'], \" text-white mx-5 text-bold\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"DEMO\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, isLoggedIn ? __jsx(AccountTooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 26\n    }\n  }) : null));\n}\n\n_s(Header, \"vK10R+uCyHfZ4DZVnxbYkMWJB8g=\");\n\n_c = Header;\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggedIn: !!state.user.info\n  };\n}\n\nvar connector = connect(mapStateToProps);\nexport default _c2 = connector(Header);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Header/Header.tsx"],"names":["React","useState","Link","FontAwesomeIcon","faBars","connect","AccountTooltip","Button","styles","Header","href","demoPage","onMenuClick","isLoggedIn","isMenuOpen","setIsMenuOpen","header","menu","logo","mapStateToProps","state","user","info","connector"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AAEA,SAASC,OAAT,QAAwC,aAAxC;AAEA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;;AASA,SAASC,MAAT,OAK6C;AAAA;;AAAA,uBAJ3CC,IAI2C;AAAA,MAJ3CA,IAI2C,0BAJpC,GAIoC;AAAA,MAH3CC,QAG2C,QAH3CA,QAG2C;AAAA,MAF3CC,WAE2C,QAF3CA,WAE2C;AAAA,MAD3CC,UAC2C,QAD3CA,UAC2C;;AAAA,kBACPZ,QAAQ,CAAC,KAAD,CADD;AAAA,MACpCa,UADoC;AAAA,MACxBC,aADwB;;AAG3C,SACE;AAAQ,IAAA,SAAS,YAAKP,MAAM,CAACQ,MAAZ,cAAsBF,UAAU,cAAON,MAAM,CAAC,kBAAD,CAAb,IAAsC,EAAtE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,+DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,WAAW,IACV,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,aADV;AAEE,IAAA,OAAO,EAAEA,WAFX;AAGE,IAAA,SAAS,6BAAsBJ,MAAM,CAACS,IAA7B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEb,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFJ,EAUE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEM,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEF,MAAM,CAACU,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAC,WAAT;AAAqB,IAAA,GAAG,EAAC,kBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAVF,EAeE;AAAK,IAAA,SAAS,EAAEV,MAAM,CAAC,UAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CADF,CADF,CAfF,EAgDGG,QAAQ,IACP;AAAG,IAAA,SAAS,YAAKH,MAAM,CAAC,YAAD,CAAX,+BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjDJ,CADF,EAuDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMK,UAAU,GAAG,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAwB,IAAxC,CAvDF,CADF;AA2DD;;GAnEQJ,M;;KAAAA,M;;AAqET,SAASU,eAAT,CAAyBC,KAAzB,EAA2C;AACzC,SAAO;AACLP,IAAAA,UAAU,EAAE,CAAC,CAACO,KAAK,CAACC,IAAN,CAAWC;AADpB,GAAP;AAGD;;AAED,IAAMC,SAAS,GAAGlB,OAAO,CAACc,eAAD,CAAzB;AAEA,qBAAeI,SAAS,CAACd,MAAD,CAAxB","sourcesContent":["import React, { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { connect, ConnectedProps } from 'react-redux';\r\n\r\nimport AccountTooltip from './AccountTooltip/AccountTooltip';\r\nimport Button from '../Button';\r\nimport { RootState } from '~/redux/root.reducer';\r\n\r\nimport styles from './Header.module.scss';\r\n\r\n\r\ninterface Props {\r\n  href?: string;\r\n  demoPage?: boolean;\r\n  onMenuClick?: () => void;\r\n}\r\n\r\nfunction Header({\r\n  href = '/',\r\n  demoPage,\r\n  onMenuClick,\r\n  isLoggedIn,\r\n}: ConnectedProps<typeof connector> & Props) {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <header className={`${styles.header} ${isMenuOpen ? ` ${styles['header-menu-open']}` : ''}`}>\r\n      <div className=\"d-flex justify-content-between w-100 align-items-center h-100\">\r\n        {onMenuClick && (\r\n          <Button\r\n            variant=\"transparent\"\r\n            onClick={onMenuClick}\r\n            className={`header__menu-btn ${styles.menu}`}\r\n          >\r\n            <FontAwesomeIcon icon={faBars} />\r\n          </Button>\r\n        )}\r\n        <Link href={href}>\r\n          <a className={styles.logo}>\r\n            <img src=\"/logo.png\" alt=\"FrontEnd.ro logo\" />\r\n          </a>\r\n        </Link>\r\n        <nav className={styles['main-nav']}>\r\n          <ul>\r\n            <li>\r\n              <Link href=\"/evenimente\">\r\n                <a> Evenimente </a>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        {/* <button type=\"button\" className=\"btn btn--blue\" id={styles.menuOpenBtn} onClick={() => setIsMenuOpen(true)}>\r\n          <span> Meniu </span>\r\n          <span className={styles.hamburger}>\r\n            <FontAwesomeIcon icon={faBars} />\r\n          </span>\r\n        </button> */}\r\n        {/* <nav className={styles['mobile-menu']}>\r\n          <Link href={href}>\r\n            <a className={styles.title} href=\"/\">\r\n              FrontEnd.ro\r\n            </a>\r\n          </Link>\r\n          <ul>\r\n            <li>\r\n              <a href=\"/slideuri\">Slide-uri</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/evenimente\">Evenimente</a>\r\n            </li>\r\n          </ul>\r\n          <button type=\"button\" className=\"btn\" id={styles.menuCloseBtn} onClick={() => setIsMenuOpen(false)}>\r\n            <span> Inchide </span>\r\n          </button>\r\n        </nav> */}\r\n        {demoPage && (\r\n          <p className={`${styles['demo-label']} text-white mx-5 text-bold`}>\r\n            DEMO\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div>{isLoggedIn ? <AccountTooltip /> : null}</div>\r\n    </header>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    isLoggedIn: !!state.user.info,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(Header);\r\n"]},"metadata":{},"sourceType":"module"}