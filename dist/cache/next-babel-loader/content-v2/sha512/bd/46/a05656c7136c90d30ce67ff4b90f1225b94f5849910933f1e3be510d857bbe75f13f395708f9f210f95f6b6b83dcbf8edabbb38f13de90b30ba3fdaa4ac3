{"ast":null,"code":"var _regeneratorRuntime = require(\"C:/Users/didi/Desktop/frontend.ro/node_modules/@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"C:/Users/didi/Desktop/frontend.ro/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _asyncToGenerator = require(\"C:/Users/didi/Desktop/frontend.ro/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable @typescript-eslint/no-var-requires */\nvar jwt = require('jsonwebtoken');\n\nvar mongoose = require('mongoose');\n\nvar uniqueValidator = require('mongoose-unique-validator');\n\nvar _require = require('../server/ServerUtils'),\n    ServerError = _require.ServerError;\n\nvar UsersSchema = new mongoose.Schema({\n  avatar: {\n    type: String,\n    required: true\n  },\n  name: {\n    type: String,\n    required: false,\n    \"default\": ''\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  username: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  lastLogin: {\n    type: Date,\n    \"default\": Date.now()\n  }\n});\nUsersSchema.plugin(uniqueValidator);\nvar User = mongoose.models.User || mongoose.model('User', UsersSchema);\n\nfunction ping(_x) {\n  return _ping.apply(this, arguments);\n}\n\nfunction _ping() {\n  _ping = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(token) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n              jwt.verify(token, process.env.TOKEN_SECRET, /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(err, decodedInfo) {\n                  var _id, user;\n\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!err) {\n                            _context.next = 3;\n                            break;\n                          }\n\n                          reject(new ServerError(401, 'Not authenticated'));\n                          return _context.abrupt(\"return\");\n\n                        case 3:\n                          _id = decodedInfo._id;\n                          _context.next = 6;\n                          return findUserBy({\n                            _id: _id\n                          });\n\n                        case 6:\n                          user = _context.sent;\n\n                          if (user) {\n                            _context.next = 10;\n                            break;\n                          }\n\n                          reject(new ServerError(404, \"User doesn't exist anymore!\"));\n                          return _context.abrupt(\"return\");\n\n                        case 10:\n                          resolve(user);\n\n                        case 11:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x3, _x4) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _ping.apply(this, arguments);\n}\n\nfunction sanitize(user) {\n  var sanitizedUser = _objectSpread({}, user.toObject());\n\n  var propsToDelete = ['_id', '__v', 'password'];\n  propsToDelete.forEach(function (prop) {\n    return delete sanitizedUser[prop];\n  });\n  return sanitizedUser;\n}\n\nfunction findUserBy(_x2) {\n  return _findUserBy.apply(this, arguments);\n}\n\nfunction _findUserBy() {\n  _findUserBy = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(filters) {\n    var user;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return User.findOne(filters);\n\n          case 2:\n            user = _context3.sent;\n            return _context3.abrupt(\"return\", user || null);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _findUserBy.apply(this, arguments);\n}\n\nmodule.exports = {\n  User: User,\n  UsersSchema: UsersSchema,\n  ping: ping,\n  sanitize: sanitize,\n  findUserBy: findUserBy\n};","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/shared/user.shared-model.js"],"names":["jwt","require","mongoose","uniqueValidator","ServerError","UsersSchema","Schema","avatar","type","String","required","name","email","unique","username","password","lastLogin","Date","now","plugin","User","models","model","ping","token","Promise","resolve","reject","verify","process","env","TOKEN_SECRET","err","decodedInfo","_id","findUserBy","user","sanitize","sanitizedUser","toObject","propsToDelete","forEach","prop","filters","findOne","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-var-requires */\r\nconst jwt = require('jsonwebtoken');\r\nconst mongoose = require('mongoose');\r\nconst uniqueValidator = require('mongoose-unique-validator');\r\nconst { ServerError } = require('../server/ServerUtils');\r\n\r\nconst UsersSchema = new mongoose.Schema({\r\n  avatar: { type: String, required: true },\r\n  name: { type: String, required: false, default: '' },\r\n  email: { type: String, required: true, unique: true },\r\n  username: { type: String, required: true, unique: true },\r\n  password: { type: String, required: true },\r\n  lastLogin: { type: Date, default: Date.now() },\r\n});\r\nUsersSchema.plugin(uniqueValidator);\r\n\r\nconst User = mongoose.models.User || mongoose.model('User', UsersSchema);\r\n\r\nasync function ping(token) {\r\n  return new Promise((resolve, reject) => {\r\n    jwt.verify(token, process.env.TOKEN_SECRET, async (err, decodedInfo) => {\r\n      if (err) {\r\n        reject(new ServerError(401, 'Not authenticated'));\r\n        return;\r\n      }\r\n\r\n      const { _id } = decodedInfo;\r\n\r\n      const user = await findUserBy({ _id });\r\n      if (!user) {\r\n        reject(new ServerError(404, \"User doesn't exist anymore!\"));\r\n        return;\r\n      }\r\n\r\n      resolve(user);\r\n    });\r\n  });\r\n}\r\n\r\nfunction sanitize(user) {\r\n  const sanitizedUser = { ...user.toObject() };\r\n  const propsToDelete = ['_id', '__v', 'password'];\r\n\r\n  propsToDelete.forEach((prop) => delete sanitizedUser[prop]);\r\n\r\n  return sanitizedUser;\r\n}\r\n\r\nasync function findUserBy(filters) {\r\n  const user = await User.findOne(filters);\r\n\r\n  return user || null;\r\n}\r\n\r\nmodule.exports = {\r\n  User,\r\n  UsersSchema,\r\n  ping,\r\n  sanitize,\r\n  findUserBy,\r\n};\r\n"]},"metadata":{},"sourceType":"script"}