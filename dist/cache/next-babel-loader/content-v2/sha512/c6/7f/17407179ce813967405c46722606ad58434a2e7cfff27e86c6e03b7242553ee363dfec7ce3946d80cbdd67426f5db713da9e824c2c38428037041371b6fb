{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\NavLinks\\\\NavLinks.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport UserService from '~/services/User.service';\nimport { logoutUser } from '~/redux/user/user.actions';\nimport Button from '~/components/Button';\nimport styles from './NavLinks.module.scss';\n\nfunction NavLinks({\n  user,\n  dispatch\n}) {\n  const router = useRouter();\n  const isLoggedIn = !!user.info;\n\n  const logout = () => {\n    UserService.logout().then(() => {\n      router.replace('/').then(() => {\n        dispatch(logoutUser());\n      });\n    });\n  };\n\n  return __jsx(\"nav\", {\n    className: styles['nav-links'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/lectii\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Lec\\u021Bii\"))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/exercitii\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Exerci\\u021Bii\"))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/evenimente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Evenimente\"))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/slides\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Slide-uri\"))), isLoggedIn ? __jsx(\"li\", {\n    className: styles.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"transparent\",\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Sign out\")) : __jsx(\"li\", {\n    className: styles.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: `/auth?next=${encodeURIComponent(router.asPath)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Intr\\u0103 \\xEEn cont\")))));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nconst connector = connect(mapStateToProps);\nexport default connector(NavLinks);","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/NavLinks/NavLinks.tsx"],"names":["React","Link","useRouter","connect","UserService","logoutUser","Button","styles","NavLinks","user","dispatch","router","isLoggedIn","info","logout","then","replace","login","encodeURIComponent","asPath","mapStateToProps","state","connector"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { RootState } from '~/redux/root.reducer';\r\nimport UserService from '~/services/User.service';\r\nimport { logoutUser } from '~/redux/user/user.actions';\r\nimport Button from '~/components/Button';\r\n\r\nimport styles from './NavLinks.module.scss';\r\n\r\nfunction NavLinks({ user, dispatch }: ConnectedProps<typeof connector>) {\r\n  const router = useRouter();\r\n  const isLoggedIn = !!user.info;\r\n\r\n  const logout = () => {\r\n    UserService.logout().then(() => {\r\n      router.replace('/').then(() => {\r\n        dispatch(logoutUser());\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <nav className={styles['nav-links']}>\r\n      <ol>\r\n        <li>\r\n          <Link href=\"/lectii\">\r\n            <a>\r\n              Lecții\r\n            </a>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link href=\"/exercitii\">\r\n            <a>\r\n              Exerciții\r\n            </a>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link href=\"/evenimente\">\r\n            <a>\r\n              Evenimente\r\n            </a>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link href=\"/slides\">\r\n            <a>\r\n              Slide-uri\r\n            </a>\r\n          </Link>\r\n        </li>\r\n        {isLoggedIn ? (\r\n          <li className={styles.login}>\r\n            <Button variant=\"transparent\" onClick={logout}>\r\n              Sign out\r\n            </Button>\r\n          </li>\r\n        ) : (\r\n          <li className={styles.login}>\r\n            <Link href={`/auth?next=${encodeURIComponent(router.asPath)}`}>\r\n              <a>\r\n                Intră în cont\r\n              </a>\r\n            </Link>\r\n          </li>\r\n        )}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(NavLinks);\r\n"]},"metadata":{},"sourceType":"module"}