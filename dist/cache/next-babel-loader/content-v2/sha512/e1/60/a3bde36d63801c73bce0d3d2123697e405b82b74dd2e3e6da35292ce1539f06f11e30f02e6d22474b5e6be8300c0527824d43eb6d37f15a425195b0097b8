{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Spinner\\\\Spinner.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styles from './Spinner.module.scss';\n\nvar Spinner = function Spinner(_ref) {\n  var _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$showText = _ref.showText,\n      showText = _ref$showText === void 0 ? false : _ref$showText,\n      _ref$text = _ref.text,\n      text = _ref$text === void 0 ? 'Se încarcă' : _ref$text;\n  return __jsx(\"div\", {\n    className: \"\".concat(styles.spinner, \" \").concat(className),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, showText && __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, text));\n};\n\n_c = Spinner;\nexport default Spinner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spinner\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Spinner/Spinner.tsx"],"names":["React","styles","Spinner","className","showText","text","spinner"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAQA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAsE;AAAA,4BAAnEC,SAAmE;AAAA,MAAnEA,SAAmE,+BAAvD,EAAuD;AAAA,2BAAnDC,QAAmD;AAAA,MAAnDA,QAAmD,8BAAxC,KAAwC;AAAA,uBAAjCC,IAAiC;AAAA,MAAjCA,IAAiC,0BAA1B,YAA0B;AACpF,SACE;AAAK,IAAA,SAAS,YAAKJ,MAAM,CAACK,OAAZ,cAAuBH,SAAvB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QAAQ,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IADH,CAFJ,CADF;AASD,CAVD;;KAAMH,O;AAYN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport styles from './Spinner.module.scss';\r\n\r\ninterface Props {\r\n  text?: string;\r\n  className?: string;\r\n  showText?: boolean;\r\n}\r\n\r\nconst Spinner = ({ className = '', showText = false, text = 'Se încarcă' }: Props) => {\r\n  return (\r\n    <div className={`${styles.spinner} ${className}`}>\r\n      {showText && (\r\n        <p>\r\n          {text}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n"]},"metadata":{},"sourceType":"module"}