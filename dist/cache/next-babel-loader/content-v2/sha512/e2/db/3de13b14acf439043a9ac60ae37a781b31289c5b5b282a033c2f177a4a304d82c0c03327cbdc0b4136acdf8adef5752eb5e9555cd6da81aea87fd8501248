{"ast":null,"code":"import HttpService from './Http.service';\n\nclass SubmissionService {\n  static searchSubmissions(page = 0, query = '') {\n    return HttpService.get(`${process.env.ENDPOINT}/submissions?page=${page}&query=${query}`).then(response => response.json());\n  }\n\n  static getOwnSubmission(exerciseId) {\n    return HttpService.get(`${process.env.ENDPOINT}/submissions/exercise/${exerciseId}`).then(resp => resp.json());\n  }\n\n  static getUserSubmission(username, exerciseId) {\n    return HttpService.get(`${process.env.ENDPOINT}/submissions/${username}/${exerciseId}`).then(resp => resp.json());\n  }\n\n  static submitSubmission(exerciseId, code) {\n    return HttpService.post(`${process.env.ENDPOINT}/submissions/exercise/${exerciseId}`, {\n      code\n    }).then(resp => resp.json());\n  } // payload is an object with a Submission props\n\n\n  static updateSubmission(submissionId, payload) {\n    return HttpService.put(`${process.env.ENDPOINT}/submissions/${submissionId}`, {\n      payload\n    }).then(resp => resp.json());\n  }\n\n  static approveSubmission(submissionId, feedbacks) {\n    return HttpService.post(`${process.env.ENDPOINT}/submissions/${submissionId}/approve`, {\n      feedbacks\n    });\n  }\n\n  static sendFeedback(submissionId, feedbacks) {\n    return HttpService.post(`${process.env.ENDPOINT}/submissions/${submissionId}/feedback`, {\n      feedbacks\n    });\n  }\n\n  static markFeedbackAsDone(feedbackId) {\n    return HttpService.delete(`${process.env.ENDPOINT}/submissions/feedback/${feedbackId}`);\n  }\n\n}\n\nexport default SubmissionService;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/services/Submission.service.ts"],"names":["HttpService","SubmissionService","searchSubmissions","page","query","get","process","env","ENDPOINT","then","response","json","getOwnSubmission","exerciseId","resp","getUserSubmission","username","submitSubmission","code","post","updateSubmission","submissionId","payload","put","approveSubmission","feedbacks","sendFeedback","markFeedbackAsDone","feedbackId","delete"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;;AAGA,MAAMC,iBAAN,CAAwB;AACtB,SAAOC,iBAAP,CAAyBC,IAAI,GAAG,CAAhC,EAAmCC,KAAK,GAAG,EAA3C,EAA+C;AAC7C,WAAOJ,WAAW,CAACK,GAAZ,CAAiB,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,qBAAoBL,IAAK,UAASC,KAAM,EAAhF,EACJK,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,CAAP;AAED;;AAED,SAAOC,gBAAP,CAAwBC,UAAxB,EAA4C;AAC1C,WAAOb,WAAW,CACfK,GADI,CACC,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,yBAAwBK,UAAW,EAD3D,EAEJJ,IAFI,CAEEK,IAAD,IAAUA,IAAI,CAACH,IAAL,EAFX,CAAP;AAGD;;AAED,SAAOI,iBAAP,CAAyBC,QAAzB,EAA2CH,UAA3C,EAA+D;AAC7D,WAAOb,WAAW,CACfK,GADI,CACC,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,gBAAeQ,QAAS,IAAGH,UAAW,EAD9D,EAEJJ,IAFI,CAEEK,IAAD,IAAUA,IAAI,CAACH,IAAL,EAFX,CAAP;AAGD;;AAED,SAAOM,gBAAP,CAAwBJ,UAAxB,EAA4CK,IAA5C,EAA0D;AACxD,WAAOlB,WAAW,CACfmB,IADI,CACE,GAAEb,OAAO,CAACC,GAAR,CAAYC,QAAS,yBAAwBK,UAAW,EAD5D,EAC+D;AAAEK,MAAAA;AAAF,KAD/D,EAEJT,IAFI,CAEEK,IAAD,IAAUA,IAAI,CAACH,IAAL,EAFX,CAAP;AAGD,GAtBqB,CAwBtB;;;AACA,SAAOS,gBAAP,CAAwBC,YAAxB,EAA8CC,OAA9C,EAA4D;AAC1D,WAAOtB,WAAW,CACfuB,GADI,CACC,GAAEjB,OAAO,CAACC,GAAR,CAAYC,QAAS,gBAAea,YAAa,EADpD,EACuD;AAC1DC,MAAAA;AAD0D,KADvD,EAIJb,IAJI,CAIEK,IAAD,IAAUA,IAAI,CAACH,IAAL,EAJX,CAAP;AAKD;;AAED,SAAOa,iBAAP,CAAyBH,YAAzB,EAA+CI,SAA/C,EAAiE;AAC/D,WAAOzB,WAAW,CACfmB,IADI,CACE,GAAEb,OAAO,CAACC,GAAR,CAAYC,QAAS,gBAAea,YAAa,UADrD,EACgE;AACnEI,MAAAA;AADmE,KADhE,CAAP;AAID;;AAED,SAAOC,YAAP,CAAoBL,YAApB,EAA0CI,SAA1C,EAA4D;AAC1D,WAAOzB,WAAW,CACfmB,IADI,CACE,GAAEb,OAAO,CAACC,GAAR,CAAYC,QAAS,gBAAea,YAAa,WADrD,EACiE;AACpEI,MAAAA;AADoE,KADjE,CAAP;AAID;;AAED,SAAOE,kBAAP,CAA0BC,UAA1B,EAA8C;AAC5C,WAAO5B,WAAW,CACf6B,MADI,CACI,GAAEvB,OAAO,CAACC,GAAR,CAAYC,QAAS,yBAAwBoB,UAAW,EAD9D,CAAP;AAED;;AAlDqB;;AAqDxB,eAAe3B,iBAAf","sourcesContent":["import HttpService from './Http.service';\r\nimport { Submission } from '~/redux/exercise-submissions/types';\r\n\r\nclass SubmissionService {\r\n  static searchSubmissions(page = 0, query = '') {\r\n    return HttpService.get(`${process.env.ENDPOINT}/submissions?page=${page}&query=${query}`)\r\n      .then((response) => response.json()) as unknown as Promise<Submission[]>;\r\n  }\r\n\r\n  static getOwnSubmission(exerciseId: string) {\r\n    return HttpService\r\n      .get(`${process.env.ENDPOINT}/submissions/exercise/${exerciseId}`)\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static getUserSubmission(username: string, exerciseId: string) {\r\n    return HttpService\r\n      .get(`${process.env.ENDPOINT}/submissions/${username}/${exerciseId}`)\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static submitSubmission(exerciseId: string, code: string) {\r\n    return HttpService\r\n      .post(`${process.env.ENDPOINT}/submissions/exercise/${exerciseId}`, { code })\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  // payload is an object with a Submission props\r\n  static updateSubmission(submissionId: string, payload: any) {\r\n    return HttpService\r\n      .put(`${process.env.ENDPOINT}/submissions/${submissionId}`, {\r\n        payload,\r\n      })\r\n      .then((resp) => resp.json());\r\n  }\r\n\r\n  static approveSubmission(submissionId: string, feedbacks: any[]) {\r\n    return HttpService\r\n      .post(`${process.env.ENDPOINT}/submissions/${submissionId}/approve`, {\r\n        feedbacks,\r\n      });\r\n  }\r\n\r\n  static sendFeedback(submissionId: string, feedbacks: any[]) {\r\n    return HttpService\r\n      .post(`${process.env.ENDPOINT}/submissions/${submissionId}/feedback`, {\r\n        feedbacks,\r\n      });\r\n  }\r\n\r\n  static markFeedbackAsDone(feedbackId: string) {\r\n    return HttpService\r\n      .delete(`${process.env.ENDPOINT}/submissions/feedback/${feedbackId}`);\r\n  }\r\n}\r\n\r\nexport default SubmissionService;\r\n"]},"metadata":{},"sourceType":"module"}