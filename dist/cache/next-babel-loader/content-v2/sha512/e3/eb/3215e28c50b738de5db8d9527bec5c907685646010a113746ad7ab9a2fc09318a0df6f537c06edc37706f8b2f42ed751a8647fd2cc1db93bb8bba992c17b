{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport noop from 'lodash/noop';\nimport React from 'react';\nimport styles from './SweetAlert.module.scss';\nlet Toast = null;\n\nclass SweetAlertService {\n  static confirm({\n    title,\n    text,\n    html = '',\n    confirmButtonText = 'Ok',\n    preConfirm = noop\n  }) {\n    return import('sweetalert2').then(swal => {\n      return swal.default.fire({\n        title,\n        text,\n        html,\n        icon: 'warning',\n        showCancelButton: true,\n        customClass: {\n          actions: styles['swal-actions'],\n          confirmButton: 'btn btn--blue',\n          cancelButton: 'btn btn--danger'\n        },\n        confirmButtonText,\n        focusConfirm: false,\n        buttonsStyling: false,\n        reverseButtons: true,\n        heightAuto: false,\n        preConfirm,\n        allowOutsideClick: () => !swal.default.isLoading()\n      });\n    });\n  }\n\n  static error({\n    title = 'Oops!',\n    text,\n    buttonText\n  }) {\n    return import('sweetalert2').then(swal => {\n      return swal.default.fire({\n        title,\n        text,\n        icon: 'error',\n        customClass: {\n          confirmButton: 'btn btn--light'\n        },\n        confirmButtonText: buttonText,\n        buttonsStyling: false,\n        heightAuto: false\n      });\n    });\n  }\n\n  static toast({\n    text,\n    href = null,\n    timer = 3000,\n    type = 'success'\n  }) {\n    SweetAlertService.init();\n    let target = document.body;\n\n    if (href) {\n      SweetAlertService.anchorTag.href = href;\n      target = SweetAlertService.anchorTag;\n    }\n\n    return new Promise(resolve => {\n      if (Toast !== null) {\n        return resolve();\n      }\n\n      import('sweetalert2').then(swal => {\n        Toast = swal.default.mixin({\n          toast: true,\n          position: 'bottom-end',\n          showConfirmButton: false,\n          background: '#1b1b15',\n          customClass: {\n            container: styles['swal--dark']\n          }\n        });\n        resolve();\n      }).catch(err => {\n        console.error(err);\n      });\n    }).then(() => {\n      Toast.fire({\n        icon: type,\n        title: type === 'error' ? text || 'Oups, something went wrong...' : text,\n        target,\n        timer\n      });\n    });\n  }\n\n  static async content(ReactComponent, title = null, props = {}) {\n    const [contentModule, swalModule] = await Promise.all([import('sweetalert2-react-content'), import('sweetalert2')]);\n    const ReactSwal = contentModule.default(swalModule.default);\n    return ReactSwal.fire({\n      title,\n      html: /*#__PURE__*/React.createElement(ReactComponent, _objectSpread({\n        closeModal: () => swalModule.default.close()\n      }, props)),\n      customClass: styles['swal2-content'],\n      showConfirmButton: false,\n      heightAuto: false\n    });\n  }\n\n  static async closePopup(result) {\n    const swal = await import('sweetalert2');\n    swal.default.close(result);\n  }\n\n  static toggleLoading() {\n    import('sweetalert2').then(swal => swal.default.getConfirmButton().classList.toggle('btn--loading'));\n  }\n\n  static init() {\n    SweetAlertService.anchorTag = document.createElement('a');\n    document.body.appendChild(SweetAlertService.anchorTag);\n  }\n\n}\n\n_defineProperty(SweetAlertService, \"anchorTag\", void 0);\n\nexport default SweetAlertService;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/services/sweet-alert/SweetAlert.service.ts"],"names":["noop","React","styles","Toast","SweetAlertService","confirm","title","text","html","confirmButtonText","preConfirm","then","swal","default","fire","icon","showCancelButton","customClass","actions","confirmButton","cancelButton","focusConfirm","buttonsStyling","reverseButtons","heightAuto","allowOutsideClick","isLoading","error","buttonText","toast","href","timer","type","init","target","document","body","anchorTag","Promise","resolve","mixin","position","showConfirmButton","background","container","catch","err","console","content","ReactComponent","props","contentModule","swalModule","all","ReactSwal","createElement","closeModal","close","closePopup","result","toggleLoading","getConfirmButton","classList","toggle","appendChild"],"mappings":"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","sourcesContent":["import noop from 'lodash/noop';\r\nimport React from 'react';\r\nimport { SweetAlertResult } from 'sweetalert2';\r\nimport styles from './SweetAlert.module.scss';\r\n\r\nlet Toast = null;\r\n\r\ninterface ToastI {\r\n  text: string;\r\n  href?: string;\r\n  timer?: number;\r\n  type?: 'error' | 'success' | 'info';\r\n}\r\n\r\nclass SweetAlertService {\r\n  private static anchorTag: HTMLAnchorElement;\r\n\r\n  static confirm({\r\n    title,\r\n    text,\r\n    html = '',\r\n    confirmButtonText = 'Ok',\r\n    preConfirm = noop,\r\n  }) {\r\n    return import('sweetalert2').then((swal) => {\r\n      return swal.default.fire({\r\n        title,\r\n        text,\r\n        html,\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        customClass: {\r\n          actions: styles['swal-actions'],\r\n          confirmButton: 'btn btn--blue',\r\n          cancelButton: 'btn btn--danger',\r\n        },\r\n        confirmButtonText,\r\n        focusConfirm: false,\r\n        buttonsStyling: false,\r\n        reverseButtons: true,\r\n        heightAuto: false,\r\n        preConfirm,\r\n        allowOutsideClick: () => !swal.default.isLoading(),\r\n      });\r\n    });\r\n  }\r\n\r\n  static error({ title = 'Oops!', text, buttonText }) {\r\n    return import('sweetalert2').then((swal) => {\r\n      return swal.default.fire({\r\n        title,\r\n        text,\r\n        icon: 'error',\r\n        customClass: {\r\n          confirmButton: 'btn btn--light',\r\n        },\r\n        confirmButtonText: buttonText,\r\n        buttonsStyling: false,\r\n        heightAuto: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  static toast({\r\n    text, href = null, timer = 3000, type = 'success',\r\n  }: ToastI) {\r\n    SweetAlertService.init();\r\n\r\n    let target = document.body;\r\n    if (href) {\r\n      SweetAlertService.anchorTag.href = href;\r\n      target = SweetAlertService.anchorTag;\r\n    }\r\n\r\n    return new Promise<void>((resolve) => {\r\n      if (Toast !== null) {\r\n        return resolve();\r\n      }\r\n\r\n      import('sweetalert2')\r\n        .then((swal) => {\r\n          Toast = swal.default.mixin({\r\n            toast: true,\r\n            position: 'bottom-end',\r\n            showConfirmButton: false,\r\n            background: '#1b1b15',\r\n            customClass: {\r\n              container: styles['swal--dark'],\r\n            },\r\n          });\r\n\r\n          resolve();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    }).then(() => {\r\n      Toast.fire({\r\n        icon: type,\r\n        title:\r\n          type === 'error' ? text || 'Oups, something went wrong...' : text,\r\n        target,\r\n        timer,\r\n      });\r\n    });\r\n  }\r\n\r\n  static async content(ReactComponent: any, title = null, props = {}) {\r\n    const [contentModule, swalModule] = await Promise.all([\r\n      import('sweetalert2-react-content'),\r\n      import('sweetalert2'),\r\n    ]);\r\n\r\n    const ReactSwal = contentModule.default(swalModule.default);\r\n\r\n    return ReactSwal.fire({\r\n      title,\r\n      html: React.createElement(ReactComponent, {\r\n        closeModal: () => swalModule.default.close(),\r\n        ...props,\r\n      }),\r\n      customClass: styles['swal2-content'],\r\n      showConfirmButton: false,\r\n      heightAuto: false,\r\n    });\r\n  }\r\n\r\n  static async closePopup(result?: SweetAlertResult<any>) {\r\n    const swal = await import('sweetalert2');\r\n    swal.default.close(result);\r\n  }\r\n\r\n  static toggleLoading() {\r\n    import('sweetalert2').then((swal) => swal.default.getConfirmButton().classList.toggle('btn--loading'));\r\n  }\r\n\r\n  private static init() {\r\n    SweetAlertService.anchorTag = document.createElement('a');\r\n    document.body.appendChild(SweetAlertService.anchorTag);\r\n  }\r\n}\r\n\r\nexport default SweetAlertService;\r\n"]},"metadata":{},"sourceType":"module"}