{"ast":null,"code":"import _classCallCheck from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\Editor\\\\FolderBrowser\\\\FolderBrowse.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport { faChevronDown, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport Button from '~/components/Button';\nimport FileIcons from '~/services/utils/FileIcons';\nimport FilesList from '../FileList/FilesList';\nimport styles from './FolderBrowse.module.scss';\n\nvar FolderBrowse = /*#__PURE__*/function (_React$Component) {\n  _inherits(FolderBrowse, _React$Component);\n\n  var _super = _createSuper(FolderBrowse);\n\n  function FolderBrowse(props) {\n    var _this;\n\n    _classCallCheck(this, FolderBrowse);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function (value) {\n      var _this$props = _this.props,\n          renamedAsset = _this$props.renamedAsset,\n          folderKey = _this$props.folderKey;\n      var isOpen = _this.state.isOpen;\n\n      if (renamedAsset && renamedAsset.key === folderKey) {\n        return;\n      }\n\n      _this.setState({\n        isOpen: value === undefined ? !isOpen : value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onContextMenu\", function (e) {\n      var _this$props2 = _this.props,\n          readOnly = _this$props2.readOnly,\n          openMenu = _this$props2.openMenu;\n\n      if (!readOnly) {\n        _this.toggle(true);\n\n        openMenu(e, true);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"containsFileWithFeedback\", function () {\n      var _this$props3 = _this.props,\n          feedbacks = _this$props3.feedbacks,\n          folderStructure = _this$props3.folderStructure,\n          folderKey = _this$props3.folderKey;\n      return !!Object.keys(feedbacks).find(function (fileKey) {\n        return folderStructure.hasFile(fileKey, folderStructure.getFolder(folderKey).folder);\n      });\n    });\n\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(FolderBrowse, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          folderKey = _this$props4.folderKey,\n          folderStructure = _this$props4.folderStructure,\n          ctxMenuKey = _this$props4.ctxMenuKey,\n          readOnly = _this$props4.readOnly,\n          renamedAsset = _this$props4.renamedAsset,\n          selectFile = _this$props4.selectFile,\n          openMenu = _this$props4.openMenu,\n          enterEditMode = _this$props4.enterEditMode,\n          onRename = _this$props4.onRename,\n          saveAsset = _this$props4.saveAsset,\n          selectedFileKey = _this$props4.selectedFileKey,\n          feedbacks = _this$props4.feedbacks;\n      var _folderStructure$getF = folderStructure.getFolder(folderKey).folder,\n          folders = _folderStructure$getF.folders,\n          files = _folderStructure$getF.files,\n          name = _folderStructure$getF.name;\n      var isOpen = this.state.isOpen;\n      files = files.map(function (f) {\n        return _objectSpread(_objectSpread({}, f), {}, {\n          icon: FileIcons.getIcon(f.name)\n        });\n      });\n      return __jsx(\"div\", {\n        className: \"\\n        \".concat(styles['folder-browse'], \"\\n        \").concat(isOpen ? styles['is--open'] : '', \"\\n        \").concat(this.containsFileWithFeedback() ? styles['has--file-with-feedback'] : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        onClick: function onClick() {\n          return _this2.toggle();\n        },\n        onContextMenu: this.onContextMenu,\n        \"data-key\": folderKey,\n        className: \"\\n            \".concat(styles['folder-button'], \" \\n            btn--transparent \\n            ellipsis-overflow\\n            \").concat(renamedAsset.key === folderKey ? 'is-being-renamed' : '', \"\\n            \").concat(folderKey === ctxMenuKey ? 'is--ctx-selected' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, __jsx(\"form\", {\n        noValidate: true,\n        onSubmit: saveAsset,\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, __jsx(React.Fragment, null, isOpen ? __jsx(FontAwesomeIcon, {\n        style: {\n          marginRight: '0.5em'\n        },\n        icon: faChevronDown,\n        width: \"18\",\n        height: \"18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }\n      }) : __jsx(FontAwesomeIcon, {\n        style: {\n          marginRight: '0.5em'\n        },\n        icon: faChevronRight,\n        width: \"18\",\n        height: \"18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      })), __jsx(\"input\", {\n        className: styles['folder-input'],\n        type: \"text\",\n        value: renamedAsset.key === folderKey ? renamedAsset.name : name,\n        disabled: renamedAsset.key !== folderKey,\n        onChange: onRename // eslint-disable-next-line jsx-a11y/no-autofocus\n        ,\n        autoFocus: renamedAsset.key === folderKey,\n        onBlur: saveAsset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }), __jsx(Button, {\n        variant: \"transparent\",\n        hidden: true,\n        disabled: renamedAsset.key !== folderKey,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }))), folders.map(function (folder) {\n        return __jsx(FolderBrowse, {\n          key: folder.key,\n          folderKey: folder.key,\n          folderStructure: folderStructure,\n          feedbacks: feedbacks,\n          readOnly: readOnly,\n          selectFile: selectFile,\n          selectedFileKey: selectedFileKey,\n          renamedAsset: renamedAsset,\n          ctxMenuKey: ctxMenuKey,\n          openMenu: openMenu,\n          enterEditMode: enterEditMode,\n          onRename: onRename,\n          saveAsset: saveAsset,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }\n        });\n      }), __jsx(FilesList, {\n        readOnly: readOnly,\n        files: files,\n        feedbacks: feedbacks,\n        ctxMenuKey: ctxMenuKey,\n        selectFile: selectFile,\n        selectedFileKey: selectedFileKey,\n        enterEditMode: enterEditMode,\n        openMenu: openMenu,\n        renamedAsset: renamedAsset,\n        onRename: onRename,\n        saveAsset: saveAsset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return FolderBrowse;\n}(React.Component);\n\nexport default FolderBrowse;","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/Editor/FolderBrowser/FolderBrowse.tsx"],"names":["faChevronDown","faChevronRight","FontAwesomeIcon","React","Button","FileIcons","FilesList","styles","FolderBrowse","props","value","renamedAsset","folderKey","isOpen","state","key","setState","undefined","e","readOnly","openMenu","toggle","feedbacks","folderStructure","Object","keys","find","fileKey","hasFile","getFolder","folder","ctxMenuKey","selectFile","enterEditMode","onRename","saveAsset","selectedFileKey","folders","files","name","map","f","icon","getIcon","containsFileWithFeedback","onContextMenu","marginRight","Component"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n\r\nimport { faChevronDown, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Button from '~/components/Button';\r\nimport FileIcons from '~/services/utils/FileIcons';\r\nimport FolderStructure from '~/services/utils/FolderStructure';\r\nimport Feedbacks from '../Feedbacks';\r\nimport FilesList from '../FileList/FilesList';\r\n\r\nimport styles from './FolderBrowse.module.scss';\r\n\r\ninterface Props {\r\n  folderKey: string;\r\n  readOnly: boolean;\r\n  ctxMenuKey: string;\r\n  feedbacks: Feedbacks;\r\n  selectedFileKey: string;\r\n  folderStructure: FolderStructure;\r\n  renamedAsset: { key: string, name: string, type: 'FILE' | 'FOLDER' };\r\n  onRename: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  saveAsset: (e: any) => void;\r\n  selectFile: (key: string) => void;\r\n  enterEditMode: (key: string) => void;\r\n  openMenu: (e: Event, isFolder: boolean) => void;\r\n}\r\n\r\ninterface State {\r\n  isOpen: boolean;\r\n}\r\n\r\nclass FolderBrowse extends React.Component<Props, State> {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n    };\r\n  }\r\n\r\n  toggle = (value?: boolean) => {\r\n    const { renamedAsset, folderKey } = this.props;\r\n    const { isOpen } = this.state;\r\n\r\n    if (renamedAsset && renamedAsset.key === folderKey) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ isOpen: value === undefined ? !isOpen : value });\r\n  }\r\n\r\n  onContextMenu = (e) => {\r\n    const { readOnly, openMenu } = this.props;\r\n\r\n    if (!readOnly) {\r\n      this.toggle(true);\r\n      openMenu(e, true);\r\n    }\r\n  }\r\n\r\n  containsFileWithFeedback = () => {\r\n    const { feedbacks, folderStructure, folderKey } = this.props;\r\n    return !!Object.keys(feedbacks).find((fileKey) => {\r\n      return folderStructure.hasFile(fileKey, folderStructure.getFolder(folderKey).folder);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      folderKey,\r\n      folderStructure,\r\n      ctxMenuKey,\r\n      readOnly,\r\n      renamedAsset,\r\n      selectFile,\r\n      openMenu,\r\n      enterEditMode,\r\n      onRename,\r\n      saveAsset,\r\n      selectedFileKey,\r\n      feedbacks,\r\n    } = this.props;\r\n    let { folders, files, name } = folderStructure.getFolder(folderKey).folder;\r\n    const { isOpen } = this.state;\r\n\r\n    files = files.map((f) => ({ ...f, icon: FileIcons.getIcon(f.name) }));\r\n\r\n    return (\r\n      <div className={`\r\n        ${styles['folder-browse']}\r\n        ${isOpen ? styles['is--open'] : ''}\r\n        ${this.containsFileWithFeedback() ? styles['has--file-with-feedback'] : ''}`}\r\n      >\r\n        <div\r\n          onClick={() => this.toggle()}\r\n          onContextMenu={this.onContextMenu}\r\n          data-key={folderKey}\r\n          className={`\r\n            ${styles['folder-button']} \r\n            btn--transparent \r\n            ellipsis-overflow\r\n            ${renamedAsset.key === folderKey ? 'is-being-renamed' : ''}\r\n            ${folderKey === ctxMenuKey ? 'is--ctx-selected' : ''}`}\r\n        >\r\n          <form noValidate onSubmit={saveAsset} className=\"d-flex align-items-center\">\r\n            <>\r\n              {isOpen\r\n                ? <FontAwesomeIcon style={{ marginRight: '0.5em' }} icon={faChevronDown} width=\"18\" height=\"18\" />\r\n                : <FontAwesomeIcon style={{ marginRight: '0.5em' }} icon={faChevronRight} width=\"18\" height=\"18\" /> }\r\n            </>\r\n            <input\r\n              className={styles['folder-input']}\r\n              type=\"text\"\r\n              value={renamedAsset.key === folderKey ? renamedAsset.name : name}\r\n              disabled={renamedAsset.key !== folderKey}\r\n              onChange={onRename}\r\n              // eslint-disable-next-line jsx-a11y/no-autofocus\r\n              autoFocus={renamedAsset.key === folderKey}\r\n              onBlur={saveAsset}\r\n            />\r\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\r\n            <Button variant=\"transparent\" hidden disabled={renamedAsset.key !== folderKey} type=\"submit\" />\r\n          </form>\r\n        </div>\r\n        {folders.map((folder) => (\r\n          <FolderBrowse\r\n            key={folder.key}\r\n            folderKey={folder.key}\r\n            folderStructure={folderStructure}\r\n            feedbacks={feedbacks}\r\n            readOnly={readOnly}\r\n            selectFile={selectFile}\r\n            selectedFileKey={selectedFileKey}\r\n            renamedAsset={renamedAsset}\r\n            ctxMenuKey={ctxMenuKey}\r\n            openMenu={openMenu}\r\n            enterEditMode={enterEditMode}\r\n            onRename={onRename}\r\n            saveAsset={saveAsset}\r\n          />\r\n        ))}\r\n        <FilesList\r\n          readOnly={readOnly}\r\n          files={files}\r\n          feedbacks={feedbacks}\r\n          ctxMenuKey={ctxMenuKey}\r\n          selectFile={selectFile}\r\n          selectedFileKey={selectedFileKey}\r\n          enterEditMode={enterEditMode}\r\n          openMenu={openMenu}\r\n          renamedAsset={renamedAsset}\r\n          onRename={onRename}\r\n          saveAsset={saveAsset}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FolderBrowse;\r\n"]},"metadata":{},"sourceType":"module"}