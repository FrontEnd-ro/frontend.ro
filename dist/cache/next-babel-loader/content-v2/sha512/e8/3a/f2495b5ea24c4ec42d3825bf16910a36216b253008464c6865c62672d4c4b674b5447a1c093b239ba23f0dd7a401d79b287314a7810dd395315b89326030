{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/didi/Desktop/frontend.ro/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/didi/Desktop/frontend.ro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:/Users/didi/Desktop/frontend.ro/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\MarkdownTextarea\\\\MarkdownTextarea.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport { faMarkdown } from '@fortawesome/free-brands-svg-icons';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IMAGES_MIME_TYPES } from '~/services/Constants';\nimport { filterFiles } from '~/services/utils/FileUtils';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport styles from './MarkdownTextarea.module.scss';\n\nfunction MarkdownTextarea(_ref) {\n  _s();\n\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'Modifică' : _ref$title,\n      _ref$markdown = _ref.markdown,\n      markdown = _ref$markdown === void 0 ? '' : _ref$markdown,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      onInput = _ref.onInput,\n      onUpload = _ref.onUpload;\n  var previewRef = useRef(null);\n  var textareaRef = useRef(null);\n  var fileInputRef = useRef(null);\n\n  var _useState = useState(false),\n      isPreview = _useState[0],\n      setIsPreview = _useState[1];\n\n  var _useState2 = useState(false),\n      isFechingMarked = _useState2[0],\n      setIsFetchingMarked = _useState2[1];\n\n  var _useState3 = useState(false),\n      isUploading = _useState3[0],\n      setIsUploading = _useState3[1];\n\n  var textareaInput = function textareaInput(e) {\n    var text = e.target.value;\n    onInput(text);\n  };\n\n  var fileInput = function fileInput(e) {\n    return uploadFiles(_toConsumableArray(e.target.files));\n  };\n\n  var uploadFiles = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(files) {\n      var validFiles, cursorPosition;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              validFiles = filterFiles(files, IMAGES_MIME_TYPES);\n\n              if (validFiles.length) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              setIsUploading(true);\n              cursorPosition = textareaRef.current.selectionStart;\n              _context.prev = 5;\n              _context.next = 8;\n              return onUpload(validFiles, cursorPosition);\n\n            case 8:\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](5);\n              SweetAlertService.toast({\n                text: _context.t0.message || 'Oops! Nu am putut încărca poza ta. Încearcă din nou!',\n                type: 'error'\n              });\n\n            case 13:\n              _context.prev = 13;\n              setIsUploading(false);\n              fileInputRef.current.value = null;\n              return _context.finish(13);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 10, 13, 17]]);\n    }));\n\n    return function uploadFiles(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var paste = function paste(e) {\n    var first = e.clipboardData.items[0];\n\n    if ((first === null || first === void 0 ? void 0 : first.kind) === 'file') {\n      uploadFiles([first.getAsFile()]);\n    }\n  };\n\n  useEffect(function () {\n    if (isPreview) {\n      setIsFetchingMarked(true);\n      import('marked').then(function (module) {\n        var marked = module[\"default\"];\n        console.log(marked);\n        previewRef.current.innerHTML = marked(markdown);\n      })[\"catch\"](function (err) {\n        previewRef.current.innerHTML = '<p style=\"color: red;\"> Oops! Verifică conexiunea la net și încearcă din nou </p>';\n      })[\"finally\"](function () {\n        return setIsFetchingMarked(false);\n      });\n    }\n  }, [isPreview]);\n  return __jsx(\"div\", {\n    className: \"\".concat(styles['markdown-textarea'], \" \").concat(className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    className: \"\".concat(styles.label, \" \").concat(isPreview ? '' : \"\".concat(styles['is--checked'])),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, title, __jsx(\"input\", {\n    checked: !isPreview,\n    onChange: function onChange() {\n      return setIsPreview(false);\n    },\n    type: \"radio\",\n    name: \"nav\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), __jsx(\"label\", {\n    className: \"\".concat(styles.label, \" \").concat(isPreview ? \"\".concat(styles['is--checked']) : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, isFechingMarked ? __jsx(FontAwesomeIcon, {\n    width: \"20\",\n    className: \"text-white rotate\",\n    icon: faSpinner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }) : 'Preview', __jsx(\"input\", {\n    checked: isPreview,\n    onChange: function onChange() {\n      return setIsPreview(true);\n    },\n    type: \"radio\",\n    name: \"nav\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(\"textarea\", {\n    placeholder: \"Editeaz\\u0103 folosing Markdown...\",\n    ref: textareaRef,\n    disabled: isPreview,\n    className: \"\".concat(isPreview ? 'd-none absolute' : ''),\n    value: markdown,\n    rows: 10,\n    onChange: textareaInput,\n    onPaste: paste,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    ref: previewRef,\n    className: \"\".concat(isPreview ? '' : 'd-none absolute'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  })), __jsx(\"footer\", {\n    className: \"text-right relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, !isPreview && __jsx(\"label\", {\n    className: \"absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, isUploading ? __jsx(FontAwesomeIcon, {\n    className: \"rotate\",\n    icon: faSpinner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 30\n    }\n  }) : 'Adaugă imagini', __jsx(\"input\", {\n    ref: fileInputRef,\n    disabled: isUploading || disabled,\n    type: \"file\",\n    multiple: false,\n    accept: IMAGES_MIME_TYPES.join(','),\n    onChange: fileInput,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  })), __jsx(FontAwesomeIcon, {\n    icon: faMarkdown,\n    width: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_s(MarkdownTextarea, \"27RrP+a4RB96JbT89hydrZWn2Mw=\");\n\n_c = MarkdownTextarea;\nexport default MarkdownTextarea;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarkdownTextarea\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/MarkdownTextarea/MarkdownTextarea.tsx"],"names":["React","useEffect","useRef","useState","faMarkdown","faSpinner","FontAwesomeIcon","IMAGES_MIME_TYPES","filterFiles","SweetAlertService","styles","MarkdownTextarea","title","markdown","className","disabled","onInput","onUpload","previewRef","textareaRef","fileInputRef","isPreview","setIsPreview","isFechingMarked","setIsFetchingMarked","isUploading","setIsUploading","textareaInput","e","text","target","value","fileInput","uploadFiles","files","validFiles","length","cursorPosition","current","selectionStart","toast","message","type","paste","first","clipboardData","items","kind","getAsFile","then","module","marked","console","log","innerHTML","err","label","join"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { faMarkdown } from '@fortawesome/free-brands-svg-icons';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IMAGES_MIME_TYPES } from '~/services/Constants';\r\nimport { filterFiles } from '~/services/utils/FileUtils';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\n\r\nimport styles from './MarkdownTextarea.module.scss';\r\n\r\ninterface Props {\r\n  title?: string;\r\n  markdown?: string;\r\n  className?: string;\r\n  disabled?: boolean;\r\n  onInput: (text: string) => void;\r\n  onUpload: (files: File[], cursorPosition: number) => void;\r\n}\r\n\r\nfunction MarkdownTextarea({\r\n  title = 'Modifică',\r\n  markdown = '',\r\n  className = '',\r\n  disabled = false,\r\n  onInput,\r\n  onUpload,\r\n}: Props) {\r\n  const previewRef = useRef(null);\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [isPreview, setIsPreview] = useState(false);\r\n  const [isFechingMarked, setIsFetchingMarked] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const textareaInput = (e) => {\r\n    const text = e.target.value;\r\n    onInput(text);\r\n  };\r\n\r\n  const fileInput = (e: React.ChangeEvent<HTMLInputElement>) => uploadFiles([...e.target.files]);\r\n\r\n  const uploadFiles = async (files: File[]) => {\r\n    const validFiles = filterFiles(files, IMAGES_MIME_TYPES);\r\n\r\n    if (!validFiles.length) {\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    const cursorPosition = textareaRef.current.selectionStart;\r\n\r\n    try {\r\n      await onUpload(validFiles, cursorPosition);\r\n    } catch (err) {\r\n      SweetAlertService.toast({\r\n        text: err.message || 'Oops! Nu am putut încărca poza ta. Încearcă din nou!',\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setIsUploading(false);\r\n      fileInputRef.current.value = null;\r\n    }\r\n  };\r\n\r\n  const paste = (e: React.ClipboardEvent<HTMLTextAreaElement>) => {\r\n    const first = e.clipboardData.items[0];\r\n\r\n    if (first?.kind === 'file') {\r\n      uploadFiles([first.getAsFile()]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isPreview) {\r\n      setIsFetchingMarked(true);\r\n      import('marked')\r\n        .then((module) => {\r\n          const marked = module.default;\r\n          console.log(marked);\r\n\r\n          previewRef.current.innerHTML = marked(markdown);\r\n        })\r\n        .catch((err) => {\r\n          previewRef.current.innerHTML = '<p style=\"color: red;\"> Oops! Verifică conexiunea la net și încearcă din nou </p>';\r\n        })\r\n        .finally(() => setIsFetchingMarked(false));\r\n    }\r\n  }, [isPreview]);\r\n\r\n  return (\r\n    <div className={`${styles['markdown-textarea']} ${className}`}>\r\n      <label className={`${styles.label} ${isPreview ? '' : `${styles['is--checked']}`}`}>\r\n        {title}\r\n        <input checked={!isPreview} onChange={() => setIsPreview(false)} type=\"radio\" name=\"nav\" hidden />\r\n      </label>\r\n      <label className={`${styles.label} ${isPreview ? `${styles['is--checked']}` : ''}`}>\r\n        {isFechingMarked\r\n          ? <FontAwesomeIcon width=\"20\" className=\"text-white rotate\" icon={faSpinner} />\r\n          : 'Preview'}\r\n        <input checked={isPreview} onChange={() => setIsPreview(true)} type=\"radio\" name=\"nav\" hidden />\r\n      </label>\r\n\r\n      <div>\r\n        <div className=\"relative\">\r\n          <textarea\r\n            placeholder=\"Editează folosing Markdown...\"\r\n            ref={textareaRef}\r\n            disabled={isPreview}\r\n            className={`${isPreview ? 'd-none absolute' : ''}`}\r\n            value={markdown}\r\n            rows={10}\r\n            onChange={textareaInput}\r\n            onPaste={paste}\r\n          />\r\n          <div ref={previewRef} className={`${isPreview ? '' : 'd-none absolute'}`} />\r\n        </div>\r\n        <footer className=\"text-right relative\">\r\n          {!isPreview && (\r\n            <label className=\"absolute\">\r\n              {isUploading ? <FontAwesomeIcon className=\"rotate\" icon={faSpinner} /> : 'Adaugă imagini'}\r\n              <input\r\n                ref={fileInputRef}\r\n                disabled={isUploading || disabled}\r\n                type=\"file\"\r\n                multiple={false}\r\n                accept={IMAGES_MIME_TYPES.join(',')}\r\n                onChange={fileInput}\r\n                hidden\r\n              />\r\n            </label>\r\n          )}\r\n\r\n          <FontAwesomeIcon icon={faMarkdown} width=\"20\" />\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MarkdownTextarea;\r\n"]},"metadata":{},"sourceType":"module"}