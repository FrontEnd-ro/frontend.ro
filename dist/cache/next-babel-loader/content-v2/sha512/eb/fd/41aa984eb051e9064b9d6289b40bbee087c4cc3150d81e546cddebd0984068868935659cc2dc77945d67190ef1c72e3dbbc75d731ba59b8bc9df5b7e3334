{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\user-profile\\\\ChangeAvatar\\\\ChangeAvatar.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport { faCamera, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from 'react-redux';\nimport { IMAGES_MIME_TYPES } from '~/services/Constants';\nimport { cropImage, filterFiles, loadImage } from '~/services/utils/FileUtils';\nimport Button from '~/components/Button';\nimport UserService from '~/services/User.service';\nimport { loadInfo } from '~/redux/user/user.actions';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport styles from './ChangeAvatar.module.scss';\n\nfunction ChangeAvatar(_ref) {\n  _s();\n\n  var user = _ref.user,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(null),\n      newAvatar = _useState[0],\n      setNewAvatar = _useState[1];\n\n  var _useState2 = useState(false),\n      isUploading = _useState2[0],\n      setIsUploading = _useState2[1];\n\n  var _useState3 = useState(false),\n      isLoadingBlob = _useState3[0],\n      setIsLoadingBlob = _useState3[1];\n\n  var cropedImage = useRef(null);\n\n  var changeAvatar = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var imgUrl, src;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.persist();\n\n              if (!(filterFiles([e.target.files[0]], IMAGES_MIME_TYPES).length === 0)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              setIsLoadingBlob(true);\n              imgUrl = URL.createObjectURL(e.target.files[0]);\n              _context.next = 7;\n              return cropImage(imgUrl);\n\n            case 7:\n              cropedImage.current = _context.sent;\n              src = URL.createObjectURL(cropedImage.current);\n              _context.next = 11;\n              return loadImage(src);\n\n            case 11:\n              setNewAvatar(src);\n              e.target.value = null;\n              setIsLoadingBlob(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function changeAvatar(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var cancel = function cancel() {\n    return setNewAvatar(null);\n  };\n\n  var save = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var newUserData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsUploading(true);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return UserService.uploadAvatar(cropedImage.current);\n\n            case 4:\n              newUserData = _context2.sent;\n              dispatch(loadInfo(newUserData));\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              SweetAlertService.toast({\n                type: 'error',\n                text: _context2.t0.message || 'Oops! Nu am putut încărca avatarul'\n              });\n\n            case 11:\n              _context2.prev = 11;\n              setNewAvatar(null);\n              setIsUploading(false);\n              return _context2.finish(11);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8, 11, 15]]);\n    }));\n\n    return function save() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"\".concat(styles['change-avatar'], \" \").concat(newAvatar ? styles['change-avatar--new'] : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    className: \"relative d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, !newAvatar && __jsx(React.Fragment, null, !isLoadingBlob && !isUploading && __jsx(\"div\", {\n    className: \"\".concat(styles.overlay, \" pin-full d-flex align-items-center justify-content-center\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(FontAwesomeIcon, {\n    width: \"48\",\n    icon: faCamera,\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  })), isLoadingBlob && __jsx(\"div\", {\n    className: \"\".concat(styles['spinner-overlay'], \" pin-full d-flex align-items-center justify-content-center\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(FontAwesomeIcon, {\n    width: \"48\",\n    icon: faSpinner,\n    className: \"text-white rotate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }))), __jsx(\"img\", {\n    src: newAvatar || user.info.avatar,\n    alt: \"\".concat(user.info.name || user.info.username, \" avatar\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    disabled: isUploading,\n    hidden: true,\n    type: \"file\",\n    multiple: false,\n    onChange: changeAvatar,\n    accept: IMAGES_MIME_TYPES.join(','),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), newAvatar && __jsx(\"div\", {\n    className: \"\".concat(styles.controls, \" d-flex justify-content-between\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"light\",\n    disabled: isUploading,\n    onClick: cancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \" Cancel \"), __jsx(Button, {\n    variant: \"blue\",\n    disabled: isUploading,\n    className: \"\".concat(isUploading ? 'btn--loading' : ''),\n    onClick: save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \" Save \")));\n}\n\n_s(ChangeAvatar, \"71ixPZfO4WUki444iEdAJLSloo8=\");\n\n_c = ChangeAvatar;\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nvar connector = connect(mapStateToProps);\nexport default _c2 = connector(ChangeAvatar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChangeAvatar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/user-profile/ChangeAvatar/ChangeAvatar.tsx"],"names":["React","useState","useRef","faCamera","faSpinner","FontAwesomeIcon","connect","IMAGES_MIME_TYPES","cropImage","filterFiles","loadImage","Button","UserService","loadInfo","SweetAlertService","styles","ChangeAvatar","user","dispatch","newAvatar","setNewAvatar","isUploading","setIsUploading","isLoadingBlob","setIsLoadingBlob","cropedImage","changeAvatar","e","persist","target","files","length","imgUrl","URL","createObjectURL","current","src","value","cancel","save","uploadAvatar","newUserData","toast","type","text","message","overlay","info","avatar","name","username","join","controls","mapStateToProps","state","connector"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { faCamera, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { RootState } from '~/redux/root.reducer';\r\nimport { IMAGES_MIME_TYPES } from '~/services/Constants';\r\nimport { cropImage, filterFiles, loadImage } from '~/services/utils/FileUtils';\r\nimport Button from '~/components/Button';\r\n\r\nimport UserService from '~/services/User.service';\r\nimport { loadInfo } from '~/redux/user/user.actions';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\n\r\nimport styles from './ChangeAvatar.module.scss';\r\n\r\n\r\nfunction ChangeAvatar({ user, dispatch }: ConnectedProps<typeof connector>) {\r\n  const [newAvatar, setNewAvatar] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isLoadingBlob, setIsLoadingBlob] = useState(false);\r\n\r\n  const cropedImage = useRef<Blob>(null);\r\n\r\n  const changeAvatar = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n\r\n    if (filterFiles([e.target.files[0]], IMAGES_MIME_TYPES).length === 0) {\r\n      return;\r\n    }\r\n\r\n    setIsLoadingBlob(true);\r\n\r\n    const imgUrl = URL.createObjectURL(e.target.files[0]);\r\n    cropedImage.current = await cropImage(imgUrl);\r\n\r\n    const src = URL.createObjectURL(cropedImage.current);\r\n    await loadImage(src);\r\n    setNewAvatar(src);\r\n\r\n    e.target.value = null;\r\n    setIsLoadingBlob(false);\r\n  };\r\n\r\n  const cancel = () => setNewAvatar(null);\r\n  const save = async () => {\r\n    setIsUploading(true);\r\n    try {\r\n      const newUserData = await UserService.uploadAvatar(cropedImage.current);\r\n      dispatch(loadInfo(newUserData));\r\n    } catch (err) {\r\n      SweetAlertService.toast({\r\n        type: 'error',\r\n        text: err.message || 'Oops! Nu am putut încărca avatarul',\r\n      });\r\n    } finally {\r\n      setNewAvatar(null);\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles['change-avatar']} ${newAvatar ? styles['change-avatar--new'] : ''}`}>\r\n      <label className=\"relative d-block\">\r\n        {!newAvatar && (\r\n          <>\r\n            {!isLoadingBlob && !isUploading && (\r\n            <div className={`${styles.overlay} pin-full d-flex align-items-center justify-content-center`}>\r\n              <FontAwesomeIcon width=\"48\" icon={faCamera} className=\"text-white\" />\r\n            </div>\r\n            )}\r\n            {isLoadingBlob && (\r\n            <div className={`${styles['spinner-overlay']} pin-full d-flex align-items-center justify-content-center`}>\r\n              <FontAwesomeIcon width=\"48\" icon={faSpinner} className=\"text-white rotate\" />\r\n            </div>\r\n            )}\r\n          </>\r\n        )}\r\n        <img src={newAvatar || user.info.avatar} alt={`${user.info.name || user.info.username} avatar`} />\r\n        <input disabled={isUploading} hidden type=\"file\" multiple={false} onChange={changeAvatar} accept={IMAGES_MIME_TYPES.join(',')} />\r\n      </label>\r\n      {newAvatar && (\r\n        <div className={`${styles.controls} d-flex justify-content-between`}>\r\n          <Button  variant=\"light\" disabled={isUploading} onClick={cancel}> Cancel </Button>\r\n          <Button  variant=\"blue\" disabled={isUploading} className={`${isUploading ? 'btn--loading' : ''}`} onClick={save}> Save </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(ChangeAvatar);\r\n"]},"metadata":{},"sourceType":"module"}