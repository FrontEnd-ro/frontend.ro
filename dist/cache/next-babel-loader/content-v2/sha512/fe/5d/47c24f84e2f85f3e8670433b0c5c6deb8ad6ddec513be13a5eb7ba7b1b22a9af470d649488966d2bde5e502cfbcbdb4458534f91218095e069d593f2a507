{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/didi/Desktop/frontend.ro/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\event\\\\RegisterEventCard\\\\RegisterEventCard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport { format } from 'date-fns';\nimport ReactSelect from 'react-select';\nimport EventService from '~/services/api/Event.service';\nimport Form, { FormGroup } from '~/components/Form';\nimport { ShareButton } from '~/components/SocialMediaButtons';\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\nimport WaitlistConfirmation from '../WaitListConfirmation/WaitListConfirmation';\nimport styles from './RegisterEventCard.module.scss';\n\nfunction EventCard(_ref) {\n  _s();\n\n  var _this = this;\n\n  var userInfo = _ref.userInfo,\n      id = _ref.id,\n      title = _ref.title,\n      cover = _ref.cover,\n      url = _ref.url,\n      duration = _ref.duration,\n      description = _ref.description,\n      location = _ref.location,\n      eventDates = _ref.eventDates,\n      className = _ref.className;\n\n  var _useState = useState(null),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(url),\n      urlToShare = _useState3[0],\n      setUrlToShare = _useState3[1];\n\n  var isPastEvent = eventDates.every(function (_ref2) {\n    var timestamp = _ref2.timestamp;\n    return Date.now() > timestamp;\n  });\n  useEffect(function () {\n    // If we have the `url` prop then let's use that\n    // as the share url. Otherwise default to the current page.\n    if (url) {\n      setUrlToShare(\"\".concat(window.location.origin).concat(url));\n    } else {\n      setUrlToShare(\"\".concat(window.location.origin).concat(window.location.pathname));\n    }\n  }, []);\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {\n      var shouldResetForm, seatsInfo;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              shouldResetForm = true;\n\n              if (!formData.timestamp) {\n                formData.timestamp = formData.timestamp || eventDates[0].timestamp;\n              }\n\n              _context.prev = 3;\n              _context.next = 6;\n              return EventService.getSeatsInfo(id);\n\n            case 6:\n              seatsInfo = _context.sent;\n\n              if (!(seatsInfo.free > 0)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 10;\n              return EventService.register(id, formData);\n\n            case 10:\n              SweetAlertService.toast({\n                type: 'success',\n                text: 'Felicitări! Vei primi un email cu mai multe informații!'\n              });\n              _context.next = 14;\n              break;\n\n            case 13:\n              SweetAlertService.content(function () {\n                return __jsx(WaitlistConfirmation, {\n                  id: id,\n                  userData: formData,\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 17\n                  }\n                });\n              }, 'Listă de așteptare', {\n                onSuccess: function onSuccess() {\n                  SweetAlertService.closePopup();\n                }\n              });\n\n            case 14:\n              _context.next = 20;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](3);\n              shouldResetForm = false;\n              setError(_context.t0.message || 'Nu am putut să te înregistrăm. Încearcă din nou!');\n\n            case 20:\n              _context.prev = 20;\n              setIsLoading(false);\n              return _context.finish(20);\n\n            case 23:\n              return _context.abrupt(\"return\", shouldResetForm);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 16, 20, 23]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"\".concat(styles['register-event-card'], \" \").concat(className || '', \" d-flex justify-content-between align-items-center\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, cover && __jsx(\"img\", {\n    className: styles['cover--row'],\n    src: cover,\n    alt: \"\".concat(title, \" cover\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), __jsx(Form, {\n    onSubmit: onSubmit,\n    onInput: function onInput() {\n      return setError(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, title && __jsx(\"h2\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, title), cover && __jsx(\"img\", {\n    className: styles['cover--column'],\n    src: cover,\n    alt: \"\".concat(title, \" cover\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    className: \"d-flex justify-content-between flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Durat\\u0103:\", ' ', __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, duration)), eventDates.length === 1 && __jsx(\"p\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Dat\\u0103:\", ' ', __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, __jsx(\"time\", {\n    dateTime: format(eventDates[0].timestamp, 'yyyy-MM-dd'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, eventDates[0].label)))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Pre\\u021B:\", ' ', __jsx(\"span\", {\n    className: \"text-blue text-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"Gratuit\")), __jsx(\"p\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Loca\\u021Bie:\", ' ', __jsx(\"span\", {\n    className: \"text-blue text-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, location)))), __jsx(\"p\", {\n    className: \"my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, description), !isPastEvent && __jsx(React.Fragment, null, __jsx(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"label text-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"Nume si prenume\"), userInfo && __jsx(\"input\", {\n    type: \"text\",\n    value: userInfo.name,\n    name: \"name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 30\n    }\n  }))), __jsx(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"label text-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, \"Adresa de email\"), userInfo && __jsx(\"input\", {\n    type: \"email\",\n    value: userInfo.email,\n    name: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 30\n    }\n  }))), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"label text-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, \"Num\\u0103r de telefon\"), __jsx(\"span\", {\n    className: \"text-xs text-grey d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, \"Te vom contacta cu o zi \\xEEnainte de eveniment a confirma participarea\"), __jsx(\"input\", {\n    type: \"tel\",\n    name: \"tel\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  })))), eventDates.length > 1 && __jsx(ReactSelect, {\n    isSearchable: true,\n    placeholder: \"Alege data si ora la care vrei sa participi\",\n    className: styles.select,\n    options: eventDates,\n    name: \"timestamp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }), error && __jsx(\"p\", {\n    className: \"text-red text-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, error), !isPastEvent && __jsx(\"footer\", {\n    className: \"d-flex my-5 justify-content-between flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    className: \"btn btn--blue \".concat(isLoading ? 'btn--loading' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, \"\\xCEnscrie-te\"), __jsx(ShareButton, {\n    variant: \"light\",\n    url: urlToShare,\n    config: {\n      copy: true,\n      facebook: true,\n      whatsapp: true,\n      linkedin: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  })), url && __jsx(\"div\", {\n    className: \"text-right my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, \"Afl\\u0103 mai multe\")))));\n}\n\n_s(EventCard, \"uaaWZzfd0rdJORKFDhPIPv868fU=\");\n\n_c = EventCard;\n\nfunction mapStateToProps(state) {\n  return {\n    userInfo: state.user.info\n  };\n}\n\nvar connector = connect(mapStateToProps);\nexport default _c2 = connector(EventCard);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EventCard\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/event/RegisterEventCard/RegisterEventCard.tsx"],"names":["React","useEffect","useState","connect","Link","format","ReactSelect","EventService","Form","FormGroup","ShareButton","SweetAlertService","WaitlistConfirmation","styles","EventCard","userInfo","id","title","cover","url","duration","description","location","eventDates","className","error","setError","isLoading","setIsLoading","urlToShare","setUrlToShare","isPastEvent","every","timestamp","Date","now","window","origin","pathname","onSubmit","formData","shouldResetForm","getSeatsInfo","seatsInfo","free","register","toast","type","text","content","onSuccess","closePopup","message","length","label","name","email","select","copy","facebook","whatsapp","linkedin","mapStateToProps","state","user","info","connector"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport Link from 'next/link';\r\nimport { format } from 'date-fns';\r\nimport ReactSelect from 'react-select';\r\nimport { RootState } from '~/redux/root.reducer';\r\n\r\nimport EventService from '~/services/api/Event.service';\r\nimport Form, { FormGroup } from '~/components/Form';\r\nimport { ShareButton } from '~/components/SocialMediaButtons';\r\nimport SweetAlertService from '~/services/sweet-alert/SweetAlert.service';\r\nimport WaitlistConfirmation from '../WaitListConfirmation/WaitListConfirmation';\r\n\r\nimport styles from './RegisterEventCard.module.scss';\r\n\r\nexport interface EventDate {\r\n  label: string;\r\n  timestamp: number;\r\n}\r\n\r\ninterface Props {\r\n  id: string;\r\n  duration: string;\r\n  location: string;\r\n  eventDates: EventDate[];\r\n  title?: string;\r\n  description?: string;\r\n  url?: string;\r\n  cover?: string;\r\n  className?: string;\r\n}\r\n\r\nfunction EventCard({\r\n  userInfo,\r\n  id,\r\n  title,\r\n  cover,\r\n  url,\r\n  duration,\r\n  description,\r\n  location,\r\n  eventDates,\r\n  className,\r\n}: ConnectedProps<typeof connector> & Props) {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [urlToShare, setUrlToShare] = useState(url);\r\n\r\n  const isPastEvent = eventDates.every(({ timestamp }) => Date.now() > timestamp);\r\n\r\n  useEffect(() => {\r\n    // If we have the `url` prop then let's use that\r\n    // as the share url. Otherwise default to the current page.\r\n    if (url) {\r\n      setUrlToShare(`${window.location.origin}${url}`);\r\n    } else {\r\n      setUrlToShare(`${window.location.origin}${window.location.pathname}`);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = async (formData: {\r\n    name: string;\r\n    email: string;\r\n    tel: string;\r\n    timestamp: number;\r\n  }) => {\r\n    setIsLoading(true);\r\n    let shouldResetForm = true;\r\n\r\n    if (!formData.timestamp) {\r\n      formData.timestamp = formData.timestamp || eventDates[0].timestamp;\r\n    }\r\n\r\n    try {\r\n      const seatsInfo = await EventService.getSeatsInfo(id);\r\n\r\n      if (seatsInfo.free > 0) {\r\n        await EventService.register(id, formData);\r\n\r\n        SweetAlertService.toast({\r\n          type: 'success',\r\n          text: 'Felicitări! Vei primi un email cu mai multe informații!',\r\n        });\r\n      } else {\r\n        SweetAlertService.content(\r\n          () => <WaitlistConfirmation id={id} userData={formData} />,\r\n          'Listă de așteptare',\r\n          {\r\n            onSuccess() {\r\n              SweetAlertService.closePopup();\r\n            },\r\n          },\r\n        );\r\n      }\r\n    } catch (err) {\r\n      shouldResetForm = false;\r\n      setError(err.message || 'Nu am putut să te înregistrăm. Încearcă din nou!');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n    return shouldResetForm;\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles['register-event-card']} ${className || ''} d-flex justify-content-between align-items-center`}>\r\n      {cover && <img className={styles['cover--row']} src={cover} alt={`${title} cover`} />}\r\n      <Form onSubmit={onSubmit} onInput={() => setError(null)}>\r\n        {title && (\r\n          <h2 className={styles.title}>\r\n            {title}\r\n          </h2>\r\n        )}\r\n        {cover && <img className={styles['cover--column']} src={cover} alt={`${title} cover`} />}\r\n        <div className=\"d-flex justify-content-between flex-wrap\">\r\n          <div>\r\n            <p className=\"m-0\">\r\n              Durată:\r\n              {' '}\r\n              <strong>\r\n                {duration}\r\n              </strong>\r\n            </p>\r\n            {eventDates.length === 1 && (\r\n              <p className=\"m-0\">\r\n                Dată:\r\n                {' '}\r\n                <strong>\r\n                  <time dateTime={format(eventDates[0].timestamp, 'yyyy-MM-dd')}>{eventDates[0].label}</time>\r\n                </strong>\r\n              </p>\r\n            )}\r\n\r\n          </div>\r\n          <div>\r\n            <p className=\"m-0\">\r\n              Preț:\r\n              {' '}\r\n              <span className=\"text-blue text-bold\">\r\n                Gratuit\r\n              </span>\r\n            </p>\r\n            <p className=\"m-0\">\r\n              Locație:\r\n              {' '}\r\n              <span className=\"text-blue text-bold\">\r\n                {location}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <p className=\"my-5\">{description}</p>\r\n        {!isPastEvent && (\r\n          <>\r\n            <FormGroup className=\"mb-4\">\r\n              <label>\r\n                <span className=\"label text-bold mb-2\">\r\n                  Nume si prenume\r\n                </span>\r\n                {userInfo && <input type=\"text\" value={userInfo.name} name=\"name\" required />}\r\n\r\n              </label>\r\n            </FormGroup>\r\n\r\n            <FormGroup className=\"mb-4\">\r\n              <label>\r\n                <span className=\"label text-bold mb-2\">\r\n                  Adresa de email\r\n                </span>\r\n                {userInfo && <input type=\"email\" value={userInfo.email} name=\"email\" required />}\r\n\r\n              </label>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <label>\r\n                <span className=\"label text-bold mb-2\">\r\n                  Număr de telefon\r\n                </span>\r\n                <span className=\"text-xs text-grey d-flex align-items-center\">\r\n                  Te vom contacta cu o zi înainte de eveniment a confirma participarea\r\n                </span>\r\n                <input type=\"tel\" name=\"tel\" required />\r\n              </label>\r\n            </FormGroup>\r\n          </>\r\n        )}\r\n\r\n        {eventDates.length > 1 && (\r\n          <ReactSelect\r\n            isSearchable\r\n            placeholder=\"Alege data si ora la care vrei sa participi\"\r\n            className={styles.select}\r\n            options={eventDates}\r\n            name=\"timestamp\"\r\n          />\r\n        )}\r\n\r\n        {error && (\r\n          <p className=\"text-red text-bold\">\r\n            {error}\r\n          </p>\r\n        )}\r\n        {!isPastEvent && (\r\n          <footer className=\"d-flex my-5 justify-content-between flex-wrap\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className={`btn btn--blue ${isLoading ? 'btn--loading' : ''}`}\r\n            >\r\n              Înscrie-te\r\n            </button>\r\n            <ShareButton\r\n              variant=\"light\"\r\n              url={urlToShare}\r\n              config={{\r\n                copy: true,\r\n                facebook: true,\r\n                whatsapp: true,\r\n                linkedin: true,\r\n              }}\r\n            />\r\n          </footer>\r\n\r\n        )}\r\n        {url && (\r\n          <div className=\"text-right my-5\">\r\n            <Link href={url}>\r\n              <a>\r\n                Află mai multe\r\n              </a>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  return {\r\n    userInfo: state.user.info,\r\n  };\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\nexport default connector(EventCard);\r\n"]},"metadata":{},"sourceType":"module"}