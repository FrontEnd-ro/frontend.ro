{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi\\\\Desktop\\\\frontend.ro\\\\client\\\\components\\\\AudioPlayer\\\\AudioPlayer.tsx\";\nvar __jsx = React.createElement;\nimport { faPause, faPlay, faStop } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useState, useRef, useEffect } from 'react';\nimport Button from '../Button';\nimport styles from './AudioPlayer.module.scss';\nexport default function AudioPlayer({\n  title,\n  src,\n  className\n}) {\n  const ref = useRef(null);\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n\n  const onPlay = () => {\n    setIsPlaying(true);\n  };\n\n  const onPause = () => {\n    setIsPlaying(false);\n  };\n\n  const togglePlay = () => {\n    const {\n      paused\n    } = ref.current;\n\n    if (paused) {\n      ref.current.play();\n    } else {\n      ref.current.pause();\n    }\n  };\n\n  const stop = () => {\n    ref.current.pause();\n    ref.current.currentTime = 0;\n  };\n\n  useEffect(() => {\n    ref.current.addEventListener('play', onPlay);\n    ref.current.addEventListener('pause', onPause);\n    return () => {\n      ref.current.removeEventListener('play', onPlay);\n      ref.current.removeEventListener('pause', onPause);\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: `${styles['audio-player']} ${className} d-flex align-items-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    variant: \"transparent\",\n    onClick: togglePlay,\n    className: \"bg-white text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: isPlaying ? faPause : faPlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), __jsx(Button, {\n    variant: \"transparent\",\n    className: `${styles['stop-button']}${isPlaying ? ` ${styles['stop-button--visible']}` : ''}`,\n    onClick: stop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), __jsx(\"p\", {\n    title: title,\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"audio\", {\n    ref: ref,\n    src: src,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/didi/Desktop/frontend.ro/client/components/AudioPlayer/AudioPlayer.tsx"],"names":["faPause","faPlay","faStop","FontAwesomeIcon","React","useState","useRef","useEffect","Button","styles","AudioPlayer","title","src","className","ref","isPlaying","setIsPlaying","onPlay","onPause","togglePlay","paused","current","play","pause","stop","currentTime","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { faPause, faPlay, faStop } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport Button from '../Button';\r\n\r\nimport styles from './AudioPlayer.module.scss';\r\n\r\ninterface Props {\r\n  title: string;\r\n  src: string;\r\n  className?: string;\r\n}\r\n\r\nexport default function AudioPlayer({ title, src, className } : Props) {\r\n  const ref = useRef<HTMLAudioElement>(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  const onPlay = () => { setIsPlaying(true); };\r\n  const onPause = () => { setIsPlaying(false); };\r\n\r\n  const togglePlay = () => {\r\n    const { paused } = ref.current;\r\n\r\n    if (paused) {\r\n      ref.current.play();\r\n    } else {\r\n      ref.current.pause();\r\n    }\r\n  };\r\n\r\n  const stop = () => {\r\n    ref.current.pause();\r\n    ref.current.currentTime = 0;\r\n  };\r\n\r\n  useEffect(() => {\r\n    ref.current.addEventListener('play', onPlay);\r\n    ref.current.addEventListener('pause', onPause);\r\n\r\n    return () => {\r\n      ref.current.removeEventListener('play', onPlay);\r\n      ref.current.removeEventListener('pause', onPause);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`${styles['audio-player']} ${className} d-flex align-items-center`}>\r\n      <Button variant=\"transparent\" onClick={togglePlay} className=\"bg-white text-black\">\r\n        <FontAwesomeIcon icon={isPlaying ? faPause : faPlay} />\r\n      </Button>\r\n      <Button variant=\"transparent\" className={`${styles['stop-button']}${isPlaying ? ` ${styles['stop-button--visible']}` : ''}`} onClick={stop}>\r\n        <FontAwesomeIcon icon={faStop} />\r\n      </Button>\r\n      <p title={title} className=\"text-white\">{title}</p>\r\n      {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\r\n      <audio ref={ref} src={src} hidden />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}