{"ast":null,"code":"var LOAD_INFO = 'user/LOAD_INFO';\nvar ADD_NOTIFICATIONS = 'user/ADD_NOTIFICATIONS';\nvar LOAD_NOTIFICATIONS = 'user/LOAD_NOTIFICATIONS';\nvar MARK_AS_READ = 'user/MARK_NOTIFICATIONS_AS_READ';\nvar MARK_AS_UNREAD = 'user/MARK_NOTIFICATIONS_AS_UNREAD';\nvar MARK_ALL_AS_READ = 'user/MARK_ALL_NOTIFICATIONS_AS_READ';\nexport var USER_INFO = {\n  LOAD: LOAD_INFO\n};\nexport var USER_NOTIFICATIONS = {\n  ADD: ADD_NOTIFICATIONS,\n  LOAD: LOAD_NOTIFICATIONS,\n  MARK_AS_READ: MARK_AS_READ,\n  MARK_AS_UNREAD: MARK_AS_UNREAD,\n  MARK_ALL_AS_READ: MARK_ALL_AS_READ\n};\n/** User info */\n\nexport var loadInfo = function loadInfo(info) {\n  return {\n    type: LOAD_INFO,\n    payload: info\n  };\n};\n/** Notifications */\n\nexport var addNotification = function addNotification(notification) {\n  var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return {\n    type: ADD_NOTIFICATIONS,\n    payload: {\n      notification: notification,\n      index: index\n    }\n  };\n};\nexport var loadNotificationsSuccess = function loadNotificationsSuccess(newNotifications) {\n  return {\n    type: LOAD_NOTIFICATIONS,\n    payload: {\n      newNotifications: newNotifications\n    }\n  };\n};\nexport var markNotificationAsRead = function markNotificationAsRead(id) {\n  return {\n    type: MARK_AS_READ,\n    payload: {\n      id: id\n    }\n  };\n};\nexport var markNotificationAsUnread = function markNotificationAsUnread(id) {\n  return {\n    type: MARK_AS_UNREAD,\n    payload: {\n      id: id\n    }\n  };\n};\nexport var markAllAsRead = function markAllAsRead() {\n  return {\n    type: MARK_ALL_AS_READ,\n    payload: null\n  };\n};","map":{"version":3,"sources":["/Users/nmaties/Projects/personal/frontend.ro/frontend-ssr/redux/user/user.actions.ts"],"names":["LOAD_INFO","ADD_NOTIFICATIONS","LOAD_NOTIFICATIONS","MARK_AS_READ","MARK_AS_UNREAD","MARK_ALL_AS_READ","USER_INFO","LOAD","USER_NOTIFICATIONS","ADD","loadInfo","info","type","payload","addNotification","notification","index","loadNotificationsSuccess","newNotifications","markNotificationAsRead","id","markNotificationAsUnread","markAllAsRead"],"mappings":"AAEA,IAAMA,SAAS,GAAG,gBAAlB;AAEA,IAAMC,iBAAiB,GAAG,wBAA1B;AACA,IAAMC,kBAAkB,GAAG,yBAA3B;AAEA,IAAMC,YAAY,GAAG,iCAArB;AACA,IAAMC,cAAc,GAAG,mCAAvB;AACA,IAAMC,gBAAgB,GAAG,qCAAzB;AAEA,OAAO,IAAMC,SAAS,GAAG;AACvBC,EAAAA,IAAI,EAAEP;AADiB,CAAlB;AAIP,OAAO,IAAMQ,kBAAkB,GAAG;AAChCC,EAAAA,GAAG,EAAER,iBAD2B;AAEhCM,EAAAA,IAAI,EAAEL,kBAF0B;AAGhCC,EAAAA,YAAY,EAAZA,YAHgC;AAIhCC,EAAAA,cAAc,EAAdA,cAJgC;AAKhCC,EAAAA,gBAAgB,EAAhBA;AALgC,CAA3B;AAQP;;AACA,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD;AAAA,SAAgB;AACtCC,IAAAA,IAAI,EAAEZ,SADgC;AAEtCa,IAAAA,OAAO,EAAEF;AAF6B,GAAhB;AAAA,CAAjB;AAKP;;AACA,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,YAAD;AAAA,MAA8CC,KAA9C,uEAAsD,CAAtD;AAAA,SAA6D;AAC1FJ,IAAAA,IAAI,EAAEX,iBADoF;AAE1FY,IAAAA,OAAO,EAAE;AACPE,MAAAA,YAAY,EAAZA,YADO;AAEPC,MAAAA,KAAK,EAALA;AAFO;AAFiF,GAA7D;AAAA,CAAxB;AAQP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,gBAAD;AAAA,SAAuC;AAC7EN,IAAAA,IAAI,EAAEV,kBADuE;AAE7EW,IAAAA,OAAO,EAAE;AACPK,MAAAA,gBAAgB,EAAhBA;AADO;AAFoE,GAAvC;AAAA,CAAjC;AAOP,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,EAAD;AAAA,SAAiB;AACrDR,IAAAA,IAAI,EAAET,YAD+C;AAErDU,IAAAA,OAAO,EAAE;AACPO,MAAAA,EAAE,EAAFA;AADO;AAF4C,GAAjB;AAAA,CAA/B;AAOP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACD,EAAD;AAAA,SAAiB;AACvDR,IAAAA,IAAI,EAAER,cADiD;AAEvDS,IAAAA,OAAO,EAAE;AACPO,MAAAA,EAAE,EAAFA;AADO;AAF8C,GAAjB;AAAA,CAAjC;AAOP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAO;AAClCV,IAAAA,IAAI,EAAEP,gBAD4B;AAElCQ,IAAAA,OAAO,EAAE;AAFyB,GAAP;AAAA,CAAtB","sourcesContent":["import { Notification } from './types';\n\nconst LOAD_INFO = 'user/LOAD_INFO';\n\nconst ADD_NOTIFICATIONS = 'user/ADD_NOTIFICATIONS';\nconst LOAD_NOTIFICATIONS = 'user/LOAD_NOTIFICATIONS';\n\nconst MARK_AS_READ = 'user/MARK_NOTIFICATIONS_AS_READ';\nconst MARK_AS_UNREAD = 'user/MARK_NOTIFICATIONS_AS_UNREAD';\nconst MARK_ALL_AS_READ = 'user/MARK_ALL_NOTIFICATIONS_AS_READ';\n\nexport const USER_INFO = {\n  LOAD: LOAD_INFO,\n};\n\nexport const USER_NOTIFICATIONS = {\n  ADD: ADD_NOTIFICATIONS,\n  LOAD: LOAD_NOTIFICATIONS,\n  MARK_AS_READ,\n  MARK_AS_UNREAD,\n  MARK_ALL_AS_READ,\n};\n\n/** User info */\nexport const loadInfo = (info: any) => ({\n  type: LOAD_INFO,\n  payload: info,\n});\n\n/** Notifications */\nexport const addNotification = (notification: Notification | Notification[], index = 0) => ({\n  type: ADD_NOTIFICATIONS,\n  payload: {\n    notification,\n    index,\n  },\n});\n\nexport const loadNotificationsSuccess = (newNotifications: Notification[]) => ({\n  type: LOAD_NOTIFICATIONS,\n  payload: {\n    newNotifications,\n  },\n});\n\nexport const markNotificationAsRead = (id: string) => ({\n  type: MARK_AS_READ,\n  payload: {\n    id,\n  },\n});\n\nexport const markNotificationAsUnread = (id: string) => ({\n  type: MARK_AS_UNREAD,\n  payload: {\n    id,\n  },\n});\n\nexport const markAllAsRead = () => ({\n  type: MARK_ALL_AS_READ,\n  payload: null,\n});\n"]},"metadata":{},"sourceType":"module"}