{"ast":null,"code":"export { v4 as uuid } from 'uuid'; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nexport function noop() {}\n/**\n * Here we make the function timeAgo to format a JavaScript Date as a\n * string stating the time elapsed. We parse the time, and show it\n * depending on when it was submitted:\n *\n * ➤ Just now - if the submission was under one minute ago\n * ➤ X minutes ago or Y hours ago\n * ➤ Yesterday\n * ➤ X days ago - up to 3 days\n * ➤ 10 Sept 2020 if it as more than 3 days ago\n */\n\nexport var timeAgo = function timeAgo(date) {\n  var ms = Date.now() - date.getTime();\n  var seconds = Math.floor(ms / 1000);\n  var minutes = Math.floor(seconds / 60);\n  var hours = Math.floor(minutes / 60);\n  var days = Math.floor(hours / 24);\n\n  if (seconds < 60) {\n    return 'Just now';\n  }\n\n  if (minutes < 60) {\n    return minutes === 1 ? \"\".concat(minutes, \" minute ago\") : \"\".concat(minutes, \" minutes ago\");\n  }\n\n  if (hours < 24) {\n    return hours === 1 ? \"\".concat(hours, \" hour ago\") : \"\".concat(hours, \" hours ago\");\n  }\n\n  if (hours > 24 && hours < 24 * 2) {\n    return 'Yesterday';\n  }\n\n  if (days < 3) {\n    return days === 1 ? \"\".concat(days, \" day ago\") : \"\".concat(days, \" days ago\");\n  }\n\n  if (days > 3) {\n    return formatDate(date);\n  }\n\n  return formatDate(date);\n};\nexport var formatDate = function formatDate(dateToFormat) {\n  //  Convert a string like '2020-09-20T00:00:00' into '20 September 2020'\n  var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var date = new Date(dateToFormat);\n  var str = \"\".concat(date.getDate(), \" \").concat(months[date.getMonth()], \" \").concat(date.getFullYear());\n  return str;\n};","map":{"version":3,"sources":["/Users/nmaties/Projects/personal/frontend.ro/frontend-ssr/services/Utils.ts"],"names":["v4","uuid","noop","timeAgo","date","ms","Date","now","getTime","seconds","Math","floor","minutes","hours","days","formatDate","dateToFormat","months","str","getDate","getMonth","getFullYear"],"mappings":"AAAA,SAASA,EAAE,IAAIC,IAAf,QAA2B,MAA3B,C,CAEA;;AACA,OAAO,SAASC,IAAT,GAAgB,CAAE;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAwB;AAC7C,MAAIC,EAAE,GAAGC,IAAI,CAACC,GAAL,KAAaH,IAAI,CAACI,OAAL,EAAtB;AACA,MAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,EAAE,GAAG,IAAhB,CAAd;AACA,MAAIO,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,EAArB,CAAd;AACA,MAAII,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWC,OAAO,GAAG,EAArB,CAAZ;AACA,MAAIE,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWE,KAAK,GAAG,EAAnB,CAAX;;AAEA,MAAIJ,OAAO,GAAG,EAAd,EAAkB;AAChB,WAAO,UAAP;AACD;;AACD,MAAIG,OAAO,GAAG,EAAd,EAAkB;AAChB,WAAOA,OAAO,KAAK,CAAZ,aACAA,OADA,6BAEAA,OAFA,iBAAP;AAGD;;AACD,MAAIC,KAAK,GAAG,EAAZ,EAAgB;AACd,WAAOA,KAAK,KAAK,CAAV,aACAA,KADA,2BAEAA,KAFA,eAAP;AAGD;;AACD,MAAIA,KAAK,GAAG,EAAR,IAAcA,KAAK,GAAG,KAAK,CAA/B,EAAkC;AAChC,WAAO,WAAP;AACD;;AACD,MAAIC,IAAI,GAAG,CAAX,EAAc;AACZ,WAAOA,IAAI,KAAK,CAAT,aACAA,IADA,0BAEAA,IAFA,cAAP;AAGD;;AACD,MAAIA,IAAI,GAAG,CAAX,EAAc;AACZ,WAAOC,UAAU,CAACX,IAAD,CAAjB;AACD;;AACD,SAAOW,UAAU,CAACX,IAAD,CAAjB;AACD,CAhCM;AAiCP,OAAO,IAAMW,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAgC;AACxD;AACA,MAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAb;AACA,MAAIb,IAAI,GAAG,IAAIE,IAAJ,CAASU,YAAT,CAAX;AACA,MAAIE,GAAG,aAAMd,IAAI,CAACe,OAAL,EAAN,cAAwBF,MAAM,CAACb,IAAI,CAACgB,QAAL,EAAD,CAA9B,cAAmDhB,IAAI,CAACiB,WAAL,EAAnD,CAAP;AACA,SAAOH,GAAP;AACD,CANM","sourcesContent":["export { v4 as uuid } from 'uuid';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n\n/**\n * Here we make the function timeAgo to format a JavaScript Date as a\n * string stating the time elapsed. We parse the time, and show it\n * depending on when it was submitted:\n *\n * ➤ Just now - if the submission was under one minute ago\n * ➤ X minutes ago or Y hours ago\n * ➤ Yesterday\n * ➤ X days ago - up to 3 days\n * ➤ 10 Sept 2020 if it as more than 3 days ago\n */\nexport const timeAgo = (date: Date): string => {\n  let ms = Date.now() - date.getTime();\n  let seconds = Math.floor(ms / 1000);\n  let minutes = Math.floor(seconds / 60);\n  let hours = Math.floor(minutes / 60);\n  let days = Math.floor(hours / 24);\n\n  if (seconds < 60) {\n    return 'Just now';\n  }\n  if (minutes < 60) {\n    return minutes === 1\n      ? `${minutes} minute ago`\n      : `${minutes} minutes ago`;\n  }\n  if (hours < 24) {\n    return hours === 1\n      ? `${hours} hour ago`\n      : `${hours} hours ago`;\n  }\n  if (hours > 24 && hours < 24 * 2) {\n    return 'Yesterday';\n  }\n  if (days < 3) {\n    return days === 1\n      ? `${days} day ago`\n      : `${days} days ago`;\n  }\n  if (days > 3) {\n    return formatDate(date);\n  }\n  return formatDate(date);\n};\nexport const formatDate = (dateToFormat: Date): string => {\n  //  Convert a string like '2020-09-20T00:00:00' into '20 September 2020'\n  let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  let date = new Date(dateToFormat);\n  let str = `${date.getDate()} ${months[date.getMonth()]} ${date.getFullYear()}`;\n  return str;\n};\n"]},"metadata":{},"sourceType":"module"}