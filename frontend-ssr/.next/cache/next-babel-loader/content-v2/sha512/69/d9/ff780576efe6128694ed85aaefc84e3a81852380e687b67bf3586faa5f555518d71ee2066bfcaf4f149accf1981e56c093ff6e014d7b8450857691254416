{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport styles from './SweetAlert.module.scss';\nlet Toast = null;\n\nclass SweetAlertService {\n  static toast({\n    text,\n    href = null,\n    timer = 3000,\n    type = 'success'\n  }) {\n    SweetAlertService.init();\n    let target = document.body;\n\n    if (href) {\n      SweetAlertService.anchorTag.href = href;\n      target = SweetAlertService.anchorTag;\n    }\n\n    return new Promise(resolve => {\n      if (Toast !== null) {\n        return resolve();\n      }\n\n      import('sweetalert2').then(swal => {\n        Toast = swal.default.mixin({\n          toast: true,\n          position: 'bottom-end',\n          showConfirmButton: false,\n          background: '#1b1b15',\n          customClass: {\n            container: styles['swal--dark']\n          }\n        });\n        resolve();\n      });\n    }).then(() => {\n      Toast.fire({\n        icon: type,\n        title: type === 'error' ? text || 'Oups, something went wrong...' : text,\n        target,\n        timer\n      });\n    });\n  }\n\n  static init() {\n    SweetAlertService.anchorTag = document.createElement('a');\n    document.body.appendChild(SweetAlertService.anchorTag);\n  }\n\n}\n\n_defineProperty(SweetAlertService, \"anchorTag\", void 0);\n\nexport default SweetAlertService;","map":{"version":3,"sources":["/Users/nmaties/Projects/personal/frontend.ro/frontend-ssr/services/sweet-alert/SweetAlert.service.ts"],"names":["styles","Toast","SweetAlertService","toast","text","href","timer","type","init","target","document","body","anchorTag","Promise","resolve","then","swal","default","mixin","position","showConfirmButton","background","customClass","container","fire","icon","title","createElement","appendChild"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AASA,MAAMC,iBAAN,CAAwB;AAGtB,SAAOC,KAAP,CAAa;AACXC,IAAAA,IADW;AAEXC,IAAAA,IAAI,GAAG,IAFI;AAGXC,IAAAA,KAAK,GAAG,IAHG;AAIXC,IAAAA,IAAI,GAAG;AAJI,GAAb,EAKW;AACTL,IAAAA,iBAAiB,CAACM,IAAlB;AAEA,QAAIC,MAAM,GAAGC,QAAQ,CAACC,IAAtB;;AACA,QAAIN,IAAJ,EAAU;AACRH,MAAAA,iBAAiB,CAACU,SAAlB,CAA4BP,IAA5B,GAAmCA,IAAnC;AACAI,MAAAA,MAAM,GAAGP,iBAAiB,CAACU,SAA3B;AACD;;AAED,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,UAAIb,KAAK,KAAK,IAAd,EAAoB;AAClB,eAAOa,OAAO,EAAd;AACD;;AAED,aAAO,aAAP,EAAsBC,IAAtB,CAA4BC,IAAD,IAAU;AACnCf,QAAAA,KAAK,GAAGe,IAAI,CAACC,OAAL,CAAaC,KAAb,CAAmB;AACzBf,UAAAA,KAAK,EAAE,IADkB;AAEzBgB,UAAAA,QAAQ,EAAE,YAFe;AAGzBC,UAAAA,iBAAiB,EAAE,KAHM;AAIzBC,UAAAA,UAAU,EAAE,SAJa;AAKzBC,UAAAA,WAAW,EAAE;AACXC,YAAAA,SAAS,EAAEvB,MAAM,CAAC,YAAD;AADN;AALY,SAAnB,CAAR;AAUAc,QAAAA,OAAO;AACR,OAZD;AAaD,KAlBM,EAkBJC,IAlBI,CAkBC,MAAM;AACZd,MAAAA,KAAK,CAACuB,IAAN,CAAW;AACTC,QAAAA,IAAI,EAAElB,IADG;AAETmB,QAAAA,KAAK,EAAEnB,IAAI,KAAK,OAAT,GAAmBH,IAAI,IAAI,+BAA3B,GAA6DA,IAF3D;AAGTK,QAAAA,MAHS;AAITH,QAAAA;AAJS,OAAX;AAMD,KAzBM,CAAP;AA0BD;;AAED,SAAeE,IAAf,GAAsB;AACpBN,IAAAA,iBAAiB,CAACU,SAAlB,GAA8BF,QAAQ,CAACiB,aAAT,CAAuB,GAAvB,CAA9B;AACAjB,IAAAA,QAAQ,CAACC,IAAT,CAAciB,WAAd,CAA0B1B,iBAAiB,CAACU,SAA5C;AACD;;AAhDqB;;gBAAlBV,iB;;AAmDN,eAAeA,iBAAf","sourcesContent":["import styles from './SweetAlert.module.scss';\n\nlet Toast = null;\n\ninterface ToastI {\n  text: string;\n  href?: string;\n  timer?: number;\n  type?: 'error' | 'success';\n}\n\nclass SweetAlertService {\n  private static anchorTag: HTMLAnchorElement;\n\n  static toast({\n    text,\n    href = null,\n    timer = 3000,\n    type = 'success',\n  }: ToastI) {\n    SweetAlertService.init();\n\n    let target = document.body;\n    if (href) {\n      SweetAlertService.anchorTag.href = href;\n      target = SweetAlertService.anchorTag;\n    }\n\n    return new Promise((resolve) => {\n      if (Toast !== null) {\n        return resolve();\n      }\n\n      import('sweetalert2').then((swal) => {\n        Toast = swal.default.mixin({\n          toast: true,\n          position: 'bottom-end',\n          showConfirmButton: false,\n          background: '#1b1b15',\n          customClass: {\n            container: styles['swal--dark'],\n          },\n        });\n\n        resolve();\n      });\n    }).then(() => {\n      Toast.fire({\n        icon: type,\n        title: type === 'error' ? text || 'Oups, something went wrong...' : text,\n        target,\n        timer,\n      });\n    });\n  }\n\n  private static init() {\n    SweetAlertService.anchorTag = document.createElement('a');\n    document.body.appendChild(SweetAlertService.anchorTag);\n  }\n}\n\nexport default SweetAlertService;\n"]},"metadata":{},"sourceType":"module"}