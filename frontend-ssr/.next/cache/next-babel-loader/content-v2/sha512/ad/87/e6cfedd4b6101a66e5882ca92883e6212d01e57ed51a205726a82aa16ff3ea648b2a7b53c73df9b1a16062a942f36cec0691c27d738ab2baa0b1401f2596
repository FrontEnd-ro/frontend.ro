{"ast":null,"code":"var _jsxFileName = \"/Users/nmaties/Projects/personal/frontend.ro/frontend-ssr/pages/[username].tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport NotFoundPage from './404';\nimport UserProfile from '~/components/user-profile/UserProfile';\nexport default function Username(props) {\n  // eslint-disable-next-line react/destructuring-assignment\n  return props.user ? __jsx(UserProfile, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 23\n    }\n  })) : __jsx(NotFoundPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 52\n    }\n  });\n}\nexport async function getServerSideProps({\n  res,\n  params\n}) {\n  const resp = await fetch(`${process.env.HOST}/api/users/${params.username}`);\n  let user = null;\n\n  if (resp.status === 404) {\n    res.statusCode = 404;\n  } else {\n    user = await resp.json();\n  }\n\n  return {\n    props: {\n      user\n    }\n  };\n}","map":{"version":3,"sources":["/Users/nmaties/Projects/personal/frontend.ro/frontend-ssr/pages/[username].tsx"],"names":["React","NotFoundPage","UserProfile","Username","props","user","getServerSideProps","res","params","resp","fetch","process","env","HOST","username","status","statusCode","json"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAA8B;AAC3C;AACA,SAAOA,KAAK,CAACC,IAAN,GAAa,MAAC,WAAD,eAAiBD,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb,GAA0C,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjD;AACD;AAED,OAAO,eAAeE,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAAmD;AACxD,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,IAAK,cAAaL,MAAM,CAACM,QAAS,EAAlD,CAAxB;AACA,MAAIT,IAAI,GAAG,IAAX;;AAEA,MAAII,IAAI,CAACM,MAAL,KAAgB,GAApB,EAAyB;AACvBR,IAAAA,GAAG,CAACS,UAAJ,GAAiB,GAAjB;AACD,GAFD,MAEO;AACLX,IAAAA,IAAI,GAAG,MAAMI,IAAI,CAACQ,IAAL,EAAb;AACD;;AAED,SAAO;AACLb,IAAAA,KAAK,EAAE;AACLC,MAAAA;AADK;AADF,GAAP;AAKD","sourcesContent":["import React from 'react';\nimport NotFoundPage from './404';\nimport UserProfile from '~/components/user-profile/UserProfile';\n\nexport default function Username(props: any) {\n  // eslint-disable-next-line react/destructuring-assignment\n  return props.user ? <UserProfile {...props} /> : <NotFoundPage />;\n}\n\nexport async function getServerSideProps({ res, params }) {\n  const resp = await fetch(`${process.env.HOST}/api/users/${params.username}`);\n  let user = null;\n\n  if (resp.status === 404) {\n    res.statusCode = 404;\n  } else {\n    user = await resp.json();\n  }\n\n  return {\n    props: {\n      user,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}