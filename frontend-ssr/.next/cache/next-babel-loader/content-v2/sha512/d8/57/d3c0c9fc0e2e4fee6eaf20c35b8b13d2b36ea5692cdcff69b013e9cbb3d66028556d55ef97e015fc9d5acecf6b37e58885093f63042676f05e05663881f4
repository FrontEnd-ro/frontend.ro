{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass Http {\n  get(url, options = {}) {\n    return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n      method: 'GET'\n    }));\n  }\n\n  post(url, body = {}, options = {}) {\n    return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n      method: 'POST',\n      body: JSON.stringify(body)\n    }));\n  }\n\n  put(url, body = {}, options = {}) {\n    return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n      method: 'PUT',\n      body: JSON.stringify(body)\n    }));\n  }\n\n  patch(url, body = {}, options = {}) {\n    return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n      method: 'PATCH',\n      body: JSON.stringify(body)\n    }));\n  }\n\n  delete(url, body = {}, options = {}) {\n    return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n      method: 'DELETE',\n      body: JSON.stringify(body)\n    }));\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  httpGeneric(url, options = {}) {\n    return fetch(url, _objectSpread({\n      headers: new Headers({\n        'content-type': 'application/json'\n      }),\n      credentials: 'include'\n    }, options)).then(resp => {\n      if (resp.ok) {\n        return resp;\n      }\n\n      return resp.json().then(jsonResp => {\n        throw jsonResp;\n      });\n    }).catch(err => {\n      if (!err || !err.code || err.code === 500) {\n        alert('Oops! Something went wrong. Refresh and try again!');\n      }\n\n      throw err;\n    });\n  }\n\n}\n\nexport default new Http();","map":{"version":3,"sources":["/Users/nmaties/Projects/personal/frontend.ro/frontend-ssr/services/Http.service.ts"],"names":["Http","get","url","options","httpGeneric","method","post","body","JSON","stringify","put","patch","delete","fetch","headers","Headers","credentials","then","resp","ok","json","jsonResp","catch","err","code","alert"],"mappings":";;;;;;AAAA,MAAMA,IAAN,CAAW;AACTC,EAAAA,GAAG,CAACC,GAAD,EAAcC,OAAO,GAAG,EAAxB,EAA4B;AAC7B,WAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCAA2BC,OAA3B;AAAoCE,MAAAA,MAAM,EAAE;AAA5C,OAAP;AACD;;AAEDC,EAAAA,IAAI,CAACJ,GAAD,EAAcK,IAAI,GAAG,EAArB,EAAyBJ,OAAO,GAAG,EAAnC,EAAuC;AACzC,WAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCACFC,OADE;AAELE,MAAAA,MAAM,EAAE,MAFH;AAGLE,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAHD,OAAP;AAKD;;AAEDG,EAAAA,GAAG,CAACR,GAAD,EAAcK,IAAI,GAAG,EAArB,EAAyBJ,OAAO,GAAG,EAAnC,EAAuC;AACxC,WAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCACFC,OADE;AAELE,MAAAA,MAAM,EAAE,KAFH;AAGLE,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAHD,OAAP;AAKD;;AAEDI,EAAAA,KAAK,CAACT,GAAD,EAAcK,IAAI,GAAG,EAArB,EAAyBJ,OAAO,GAAG,EAAnC,EAAuC;AAC1C,WAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCACFC,OADE;AAELE,MAAAA,MAAM,EAAE,OAFH;AAGLE,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAHD,OAAP;AAKD;;AAEDK,EAAAA,MAAM,CAACV,GAAD,EAAcK,IAAI,GAAG,EAArB,EAAyBJ,OAAO,GAAG,EAAnC,EAAuC;AAC3C,WAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCACFC,OADE;AAELE,MAAAA,MAAM,EAAE,QAFH;AAGLE,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAHD,OAAP;AAKD,GAnCQ,CAqCT;;;AACQH,EAAAA,WAAR,CAAoBF,GAApB,EAAiCC,OAAO,GAAG,EAA3C,EAA+C;AAC7C,WAAOU,KAAK,CAACX,GAAD;AACVY,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,wBAAgB;AADG,OAAZ,CADC;AAIVC,MAAAA,WAAW,EAAE;AAJH,OAKPb,OALO,EAAL,CAOJc,IAPI,CAOEC,IAAD,IAAU;AACd,UAAIA,IAAI,CAACC,EAAT,EAAa;AACX,eAAOD,IAAP;AACD;;AACD,aAAOA,IAAI,CAACE,IAAL,GAAYH,IAAZ,CAAkBI,QAAD,IAAc;AACpC,cAAMA,QAAN;AACD,OAFM,CAAP;AAGD,KAdI,EAeJC,KAfI,CAeGC,GAAD,IAAS;AACd,UAAI,CAACA,GAAD,IAAQ,CAACA,GAAG,CAACC,IAAb,IAAqBD,GAAG,CAACC,IAAJ,KAAa,GAAtC,EAA2C;AACzCC,QAAAA,KAAK,CAAC,oDAAD,CAAL;AACD;;AACD,YAAMF,GAAN;AACD,KApBI,CAAP;AAqBD;;AA5DQ;;AA+DX,eAAe,IAAIvB,IAAJ,EAAf","sourcesContent":["class Http {\n  get(url: string, options = {}) {\n    return this.httpGeneric(url, { ...options, method: 'GET' });\n  }\n\n  post(url: string, body = {}, options = {}) {\n    return this.httpGeneric(url, {\n      ...options,\n      method: 'POST',\n      body: JSON.stringify(body),\n    });\n  }\n\n  put(url: string, body = {}, options = {}) {\n    return this.httpGeneric(url, {\n      ...options,\n      method: 'PUT',\n      body: JSON.stringify(body),\n    });\n  }\n\n  patch(url: string, body = {}, options = {}) {\n    return this.httpGeneric(url, {\n      ...options,\n      method: 'PATCH',\n      body: JSON.stringify(body),\n    });\n  }\n\n  delete(url: string, body = {}, options = {}) {\n    return this.httpGeneric(url, {\n      ...options,\n      method: 'DELETE',\n      body: JSON.stringify(body),\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private httpGeneric(url: string, options = {}) {\n    return fetch(url, {\n      headers: new Headers({\n        'content-type': 'application/json',\n      }),\n      credentials: 'include',\n      ...options,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp;\n        }\n        return resp.json().then((jsonResp) => {\n          throw jsonResp;\n        });\n      })\n      .catch((err) => {\n        if (!err || !err.code || err.code === 500) {\n          alert('Oops! Something went wrong. Refresh and try again!');\n        }\n        throw err;\n      });\n  }\n}\n\nexport default new Http();\n"]},"metadata":{},"sourceType":"module"}