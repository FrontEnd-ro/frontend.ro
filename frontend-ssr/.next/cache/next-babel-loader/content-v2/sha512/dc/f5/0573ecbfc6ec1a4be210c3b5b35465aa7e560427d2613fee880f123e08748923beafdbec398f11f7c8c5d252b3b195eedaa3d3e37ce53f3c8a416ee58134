{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Http = /*#__PURE__*/function () {\n  function Http() {\n    _classCallCheck(this, Http);\n  }\n\n  _createClass(Http, [{\n    key: \"get\",\n    value: function get(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'GET'\n      }));\n    }\n  }, {\n    key: \"post\",\n    value: function post(url) {\n      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'POST',\n        body: JSON.stringify(body)\n      }));\n    }\n  }, {\n    key: \"put\",\n    value: function put(url) {\n      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'PUT',\n        body: JSON.stringify(body)\n      }));\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(url) {\n      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'PATCH',\n        body: JSON.stringify(body)\n      }));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(url) {\n      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.httpGeneric(url, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'DELETE',\n        body: JSON.stringify(body)\n      }));\n    } // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"httpGeneric\",\n    value: function httpGeneric(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return fetch(url, _objectSpread({\n        headers: new Headers({\n          'content-type': 'application/json'\n        }),\n        credentials: 'include'\n      }, options)).then(function (resp) {\n        if (resp.ok) {\n          return resp;\n        }\n\n        return resp.json().then(function (jsonResp) {\n          throw jsonResp;\n        });\n      })[\"catch\"](function (err) {\n        if (!err || !err.code || err.code === 500) {\n          alert('Oops! Something went wrong. Refresh and try again!');\n        }\n\n        throw err;\n      });\n    }\n  }]);\n\n  return Http;\n}();\n\nexport default new Http();","map":{"version":3,"sources":["/Users/nmaties/Projects/personal/frontend.ro/frontend-ssr/services/Http.service.ts"],"names":["Http","url","options","httpGeneric","method","body","JSON","stringify","fetch","headers","Headers","credentials","then","resp","ok","json","jsonResp","err","code","alert"],"mappings":";;;;;;;;IAAMA,I;;;;;;;wBACAC,G,EAA2B;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AAC7B,aAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCAA2BC,OAA3B;AAAoCE,QAAAA,MAAM,EAAE;AAA5C,SAAP;AACD;;;yBAEIH,G,EAAsC;AAAA,UAAzBI,IAAyB,uEAAlB,EAAkB;AAAA,UAAdH,OAAc,uEAAJ,EAAI;AACzC,aAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCACFC,OADE;AAELE,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAHD,SAAP;AAKD;;;wBAEGJ,G,EAAsC;AAAA,UAAzBI,IAAyB,uEAAlB,EAAkB;AAAA,UAAdH,OAAc,uEAAJ,EAAI;AACxC,aAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCACFC,OADE;AAELE,QAAAA,MAAM,EAAE,KAFH;AAGLC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAHD,SAAP;AAKD;;;0BAEKJ,G,EAAsC;AAAA,UAAzBI,IAAyB,uEAAlB,EAAkB;AAAA,UAAdH,OAAc,uEAAJ,EAAI;AAC1C,aAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCACFC,OADE;AAELE,QAAAA,MAAM,EAAE,OAFH;AAGLC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAHD,SAAP;AAKD;;;4BAEMJ,G,EAAsC;AAAA,UAAzBI,IAAyB,uEAAlB,EAAkB;AAAA,UAAdH,OAAc,uEAAJ,EAAI;AAC3C,aAAO,KAAKC,WAAL,CAAiBF,GAAjB,kCACFC,OADE;AAELE,QAAAA,MAAM,EAAE,QAFH;AAGLC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAHD,SAAP;AAKD,K,CAED;;;;gCACoBJ,G,EAA2B;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AAC7C,aAAOM,KAAK,CAACP,GAAD;AACVQ,QAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,0BAAgB;AADG,SAAZ,CADC;AAIVC,QAAAA,WAAW,EAAE;AAJH,SAKPT,OALO,EAAL,CAOJU,IAPI,CAOC,UAACC,IAAD,EAAU;AACd,YAAIA,IAAI,CAACC,EAAT,EAAa;AACX,iBAAOD,IAAP;AACD;;AACD,eAAOA,IAAI,CAACE,IAAL,GAAYH,IAAZ,CAAiB,UAACI,QAAD,EAAc;AACpC,gBAAMA,QAAN;AACD,SAFM,CAAP;AAGD,OAdI,WAeE,UAACC,GAAD,EAAS;AACd,YAAI,CAACA,GAAD,IAAQ,CAACA,GAAG,CAACC,IAAb,IAAqBD,GAAG,CAACC,IAAJ,KAAa,GAAtC,EAA2C;AACzCC,UAAAA,KAAK,CAAC,oDAAD,CAAL;AACD;;AACD,cAAMF,GAAN;AACD,OApBI,CAAP;AAqBD;;;;;;AAGH,eAAe,IAAIjB,IAAJ,EAAf","sourcesContent":["class Http {\n  get(url: string, options = {}) {\n    return this.httpGeneric(url, { ...options, method: 'GET' });\n  }\n\n  post(url: string, body = {}, options = {}) {\n    return this.httpGeneric(url, {\n      ...options,\n      method: 'POST',\n      body: JSON.stringify(body),\n    });\n  }\n\n  put(url: string, body = {}, options = {}) {\n    return this.httpGeneric(url, {\n      ...options,\n      method: 'PUT',\n      body: JSON.stringify(body),\n    });\n  }\n\n  patch(url: string, body = {}, options = {}) {\n    return this.httpGeneric(url, {\n      ...options,\n      method: 'PATCH',\n      body: JSON.stringify(body),\n    });\n  }\n\n  delete(url: string, body = {}, options = {}) {\n    return this.httpGeneric(url, {\n      ...options,\n      method: 'DELETE',\n      body: JSON.stringify(body),\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private httpGeneric(url: string, options = {}) {\n    return fetch(url, {\n      headers: new Headers({\n        'content-type': 'application/json',\n      }),\n      credentials: 'include',\n      ...options,\n    })\n      .then((resp) => {\n        if (resp.ok) {\n          return resp;\n        }\n        return resp.json().then((jsonResp) => {\n          throw jsonResp;\n        });\n      })\n      .catch((err) => {\n        if (!err || !err.code || err.code === 500) {\n          alert('Oops! Something went wrong. Refresh and try again!');\n        }\n        throw err;\n      });\n  }\n}\n\nexport default new Http();\n"]},"metadata":{},"sourceType":"module"}