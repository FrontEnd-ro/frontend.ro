{"version":3,"sources":["../../../../build/webpack/plugins/css-minimizer-plugin.ts"],"names":["RawSource","SourceMapSource","webpack","sources","CSS_REGEX","isWebpack5","parseInt","version","CssMinimizerPlugin","constructor","options","__next_css_remove","optimizeAsset","file","asset","postcssOptions","to","from","parser","postcssScss","input","map","sourceAndMap","source","prev","cssnanoSimple","process","then","res","css","toJSON","apply","compiler","hooks","compilation","tap","cache","getCache","processAssets","tapPromise","name","stage","Compilation","PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE","assets","span","tracer","startSpan","attributes","webpackVersion","files","Object","keys","Promise","all","filter","test","assetSpan","etag","getLazyHashedEtag","cachedResult","getPromise","setAttribute","result","storePromise","optimizeChunkAssets","chunks","compilationName","reduce","acc","chunk","concat","entry"],"mappings":"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","sourcesContent":["import cssnanoSimple from 'cssnano-simple'\nimport postcssScss from 'next/dist/compiled/postcss-scss'\nimport postcss, { Parser } from 'postcss'\nimport webpack from 'webpack'\nimport sources from 'webpack-sources'\nimport { tracer, traceAsyncFn } from '../../tracer'\n\n// @ts-ignore: TODO: remove ignore when webpack 5 is stable\nconst { RawSource, SourceMapSource } = webpack.sources || sources\n\n// https://github.com/NMFR/optimize-css-assets-webpack-plugin/blob/0a410a9bf28c7b0e81a3470a13748e68ca2f50aa/src/index.js#L20\nconst CSS_REGEX = /\\.css(\\?.*)?$/i\n\ntype CssMinimizerPluginOptions = {\n  postcssOptions: {\n    map: false | { prev?: string | false; inline: boolean; annotation: boolean }\n  }\n}\n\nconst isWebpack5 = parseInt(webpack.version!) === 5\n\nexport class CssMinimizerPlugin {\n  __next_css_remove = true\n\n  private options: CssMinimizerPluginOptions\n\n  constructor(options: CssMinimizerPluginOptions) {\n    this.options = options\n  }\n\n  optimizeAsset(file: string, asset: any) {\n    const postcssOptions = {\n      ...this.options.postcssOptions,\n      to: file,\n      from: file,\n\n      // We don't actually add this parser to support Sass. It can also be used\n      // for inline comment support. See the README:\n      // https://github.com/postcss/postcss-scss/blob/master/README.md#2-inline-comments-for-postcss\n      parser: (postcssScss as any) as Parser,\n    }\n\n    let input: string\n    if (postcssOptions.map && asset.sourceAndMap) {\n      const { source, map } = asset.sourceAndMap()\n      input = source\n      postcssOptions.map.prev = map ? map : false\n    } else {\n      input = asset.source()\n    }\n\n    return postcss([cssnanoSimple])\n      .process(input, postcssOptions)\n      .then((res) => {\n        if (res.map) {\n          return new SourceMapSource(res.css, file, res.map.toJSON())\n        } else {\n          return new RawSource(res.css)\n        }\n      })\n  }\n\n  apply(compiler: webpack.Compiler) {\n    compiler.hooks.compilation.tap('CssMinimizerPlugin', (compilation: any) => {\n      if (isWebpack5) {\n        const cache = compilation.getCache('CssMinimizerPlugin')\n        compilation.hooks.processAssets.tapPromise(\n          {\n            name: 'CssMinimizerPlugin',\n            // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n            stage: webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE,\n          },\n          async (assets: any) => {\n            const span = tracer.startSpan('css-minimizer-plugin', {\n              attributes: {\n                webpackVersion: 5,\n              },\n            })\n\n            return traceAsyncFn(span, async () => {\n              const files = Object.keys(assets)\n              await Promise.all(\n                files\n                  .filter((file) => CSS_REGEX.test(file))\n                  .map(async (file) => {\n                    const assetSpan = tracer.startSpan('minify-css', {\n                      attributes: {\n                        file,\n                      },\n                    })\n                    return traceAsyncFn(span, async () => {\n                      const asset = assets[file]\n\n                      const etag = cache.getLazyHashedEtag(asset)\n\n                      const cachedResult = await cache.getPromise(file, etag)\n\n                      assetSpan.setAttribute(\n                        'cache',\n                        cachedResult ? 'HIT' : 'MISS'\n                      )\n                      if (cachedResult) {\n                        assets[file] = cachedResult\n                        return\n                      }\n\n                      const result = await this.optimizeAsset(file, asset)\n                      await cache.storePromise(file, etag, result)\n                      assets[file] = result\n                    })\n                  })\n              )\n            })\n          }\n        )\n        return\n      }\n      compilation.hooks.optimizeChunkAssets.tapPromise(\n        'CssMinimizerPlugin',\n        (chunks: webpack.compilation.Chunk[]) => {\n          const span = tracer.startSpan('css-minimizer-plugin', {\n            attributes: {\n              webpackVersion: 4,\n              compilationName: compilation.name,\n            },\n          })\n\n          return traceAsyncFn(span, async () => {\n            const res = await Promise.all(\n              chunks\n                .reduce(\n                  (acc, chunk) => acc.concat(chunk.files || []),\n                  [] as string[]\n                )\n                .filter((entry) => CSS_REGEX.test(entry))\n                .map(async (file) => {\n                  const assetSpan = tracer.startSpan('minify-css', {\n                    attributes: {\n                      file,\n                    },\n                  })\n                  return traceAsyncFn(assetSpan, async () => {\n                    const asset = compilation.assets[file]\n                    // Makes trace attributes the same as webpack 5\n                    // When using webpack 4 the result is not cached\n                    assetSpan.setAttribute('cache', 'MISS')\n                    compilation.assets[file] = await this.optimizeAsset(\n                      file,\n                      asset\n                    )\n                  })\n                })\n            )\n            return res\n          })\n        }\n      )\n    })\n  }\n}\n"]}