"use strict";exports.__esModule=true;exports.default=resolveRewrites;var _pathMatch=_interopRequireDefault(require("./path-match"));var _prepareDestination=_interopRequireDefault(require("./prepare-destination"));var _normalizeTrailingSlash=require("../../../../client/normalize-trailing-slash");var _normalizeLocalePath=require("../../i18n/normalize-locale-path");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const customRouteMatcher=(0,_pathMatch.default)(true);function resolveRewrites(asPath,pages,rewrites,query,resolveHref,locales){if(!pages.includes((0,_normalizeLocalePath.normalizeLocalePath)(asPath,locales).pathname)){for(const rewrite of rewrites){const matcher=customRouteMatcher(rewrite.source);const params=matcher(asPath);if(params){if(!rewrite.destination){// this is a proxied rewrite which isn't handled on the client
break;}const destRes=(0,_prepareDestination.default)(rewrite.destination,params,query,true);asPath=destRes.parsedDestination.pathname;Object.assign(query,destRes.parsedDestination.query);const fsPathname=(0,_normalizeLocalePath.normalizeLocalePath)((0,_normalizeTrailingSlash.removePathTrailingSlash)(asPath),locales).pathname;if(pages.includes(fsPathname)){asPath=fsPathname;// check if we now match a page as this means we are done
// resolving the rewrites
break;}// check if we match a dynamic-route, if so we break the rewrites chain
const resolvedHref=resolveHref(fsPathname);if(resolvedHref!==asPath&&pages.includes(resolvedHref)){asPath=fsPathname;break;}}}}return asPath;}
//# sourceMappingURL=resolve-rewrites.js.map