import { AxiosError } from "axios";
import * as Errors from "./models/client/Errors";
/**
 * Handles general errors and all client request errors.
 * Client response errors are classified so that proper response error is generated.
 */
export declare class ErrorHandler {
    /**
     * Process callback function for HTTP request.
     *
     * @param error - request error that needs to be transformed to proper Postmark error.
     *
     * @return {PostmarkError} - formatted Postmark error
     */
    buildRequestError(error: AxiosError): Errors.PostmarkError;
    /**
     * Build general Postmark error.
     *
     * @param errorMessage - error message that needs to be identified and transformed to proper Postmark error.
     *
     * @returns properly formatted Postmark error.
     */
    buildGeneralError(errorMessage: string): Errors.PostmarkError;
    /**
     * Build Postmark error based on response from http client.
     *
     * @param {AxiosResponse} response - request response used to transform to Postmark error.
     * @return {PostmarkError} - formatted Postmark error
     */
    private buildErrorForResponse;
    private retrieveDefaultOrValue;
    /**
     * Build Postmark error based on HTTP request status.
     *
     * @param error - http request library error, that will be transformed to Postmark error.
     *
     * @returns properly formatted Postmark error.
     */
    private buildRequestErrorByStatus;
}
